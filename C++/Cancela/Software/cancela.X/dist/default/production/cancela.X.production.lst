

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Aug 21 13:24:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0006                     _PORTBbits	set	6
   171  0008                     _PORTDbits	set	8
   172  000B                     _INTCONbits	set	11
   173  0059                     _INTF	set	89
   174  0081                     _OPTION_REGbits	set	129
   175  0081                     _OPTION_REG	set	129
   176  0088                     _TRISD	set	136
   177  0086                     _TRISB	set	134
   178                           
   179                           	psect	cinit
   180  0013                     start_initialization:	
   181                           ; #config settings
   182                           
   183  0013                     __initialization:
   184                           
   185                           ; Clear objects allocated to COMMON
   186  0013  01FA               	clrf	__pbssCOMMON& (0+127)
   187  0014  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   188  0015                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  0015                     __end_of__initialization:
   192  0015  0183               	clrf	3
   193  0016  120A  118A  288D   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMMON
   196  007A                     __pbssCOMMON:
   197  007A                     _flag:
   198  007A                     	ds	2
   199                           
   200                           	psect	cstackCOMMON
   201  0070                     __pcstackCOMMON:
   202  0070                     ?_abrirCancela:
   203  0070                     ?_luzesPiscando:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ??_luzesPiscando:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_fecharCancela:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_trem:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220  0070                     	ds	3
   221  0073                     ??_trem:
   222                           
   223                           ; 1 bytes @ 0x3
   224  0073                     	ds	3
   225  0076                     trem@i:
   226                           
   227                           ; 2 bytes @ 0x6
   228  0076                     	ds	2
   229  0078                     trem@i_186:
   230                           
   231                           ; 2 bytes @ 0x8
   232  0078                     	ds	2
   233                           
   234                           	psect	cstackBANK0
   235  0020                     __pcstackBANK0:
   236  0020                     ??_abrirCancela:
   237  0020                     ??_fecharCancela:	
   238                           ; 1 bytes @ 0x0
   239                           
   240                           
   241                           ; 1 bytes @ 0x0
   242  0020                     	ds	3
   243  0023                     ??_main:
   244                           
   245                           	psect	maintext
   246  008D                     __pmaintext:	
   247                           ; 1 bytes @ 0x3
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 30 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, pclath, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : B00/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   267 ;;      Params:         0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0
   270 ;;      Totals:         0       0       0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels required when called: 4
   273 ;; This function calls:
   274 ;;		_abrirCancela
   275 ;; This function is called by:
   276 ;;		Startup code after reset
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           
   281                           ;psect for function _main
   282  008D                     _main:
   283  008D                     l779:	
   284                           ;incstack = 0
   285                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   286                           
   287                           
   288                           ;main.c: 31:     TRISB = 0xFF;
   289  008D  30FF               	movlw	255
   290  008E  1683               	bsf	3,5	;RP0=1, select bank1
   291  008F  1303               	bcf	3,6	;RP1=0, select bank1
   292  0090  0086               	movwf	6	;volatile
   293  0091                     l781:
   294                           
   295                           ;main.c: 32:     TRISD = 0;
   296  0091  0188               	clrf	8	;volatile
   297  0092                     l783:
   298                           
   299                           ;main.c: 33:     OPTION_REG = 0b01111111;
   300  0092  307F               	movlw	127
   301  0093  0081               	movwf	1	;volatile
   302  0094                     l785:
   303                           
   304                           ;main.c: 34:     OPTION_REGbits.INTEDG = 1;
   305  0094  1701               	bsf	1,6	;volatile
   306  0095                     l787:
   307                           
   308                           ;main.c: 35:     INTCONbits.GIE = 1;
   309  0095  178B               	bsf	11,7	;volatile
   310  0096                     l789:
   311                           
   312                           ;main.c: 36:     INTCONbits.INTE = 1;
   313  0096  160B               	bsf	11,4	;volatile
   314  0097                     l791:
   315                           
   316                           ;main.c: 37:     PORTDbits.RD1 = 0;
   317  0097  1283               	bcf	3,5	;RP0=0, select bank0
   318  0098  1303               	bcf	3,6	;RP1=0, select bank0
   319  0099  1088               	bcf	8,1	;volatile
   320  009A                     l793:
   321                           
   322                           ;main.c: 38:     PORTDbits.RD2 = 0;
   323  009A  1108               	bcf	8,2	;volatile
   324  009B                     l795:
   325                           
   326                           ;main.c: 39:     PORTDbits.RD0 = 0;
   327  009B  1008               	bcf	8,0	;volatile
   328  009C                     l797:
   329                           
   330                           ;main.c: 40:     PORTDbits.RD7 = 0;
   331  009C  1388               	bcf	8,7	;volatile
   332  009D                     l799:
   333                           
   334                           ;main.c: 41:     PORTDbits.RD6 = 0;
   335  009D  1308               	bcf	8,6	;volatile
   336  009E                     l801:
   337                           
   338                           ;main.c: 44:         if (!PORTBbits.RB3) {
   339  009E  1283               	bcf	3,5	;RP0=0, select bank0
   340  009F  1303               	bcf	3,6	;RP1=0, select bank0
   341  00A0  1986               	btfsc	6,3	;volatile
   342  00A1  28A3               	goto	u211
   343  00A2  28A4               	goto	u210
   344  00A3                     u211:
   345  00A3  28A9               	goto	l805
   346  00A4                     u210:
   347  00A4                     l803:
   348                           
   349                           ;main.c: 45:             abrirCancela();
   350  00A4  120A  118A  20BC  120A  118A  	fcall	_abrirCancela
   351  00A9                     l805:
   352                           
   353                           ;main.c: 48:         if (flag) {
   354  00A9  087A               	movf	_flag,w
   355  00AA  047B               	iorwf	_flag+1,w
   356  00AB  1903               	btfsc	3,2
   357  00AC  28AE               	goto	u221
   358  00AD  28AF               	goto	u220
   359  00AE                     u221:
   360  00AE  28B6               	goto	l809
   361  00AF                     u220:
   362  00AF                     l807:
   363                           
   364                           ;main.c: 49:             PORTDbits.RD1 = 0;
   365  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   366  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   367  00B1  1088               	bcf	8,1	;volatile
   368                           
   369                           ;main.c: 50:             PORTDbits.RD2 = 0;
   370  00B2  1108               	bcf	8,2	;volatile
   371                           
   372                           ;main.c: 51:             PORTDbits.RD0 = 0;
   373  00B3  1008               	bcf	8,0	;volatile
   374                           
   375                           ;main.c: 52:             PORTDbits.RD7 = 0;
   376  00B4  1388               	bcf	8,7	;volatile
   377                           
   378                           ;main.c: 53:             PORTDbits.RD6 = 0;
   379  00B5  1308               	bcf	8,6	;volatile
   380  00B6                     l809:
   381                           
   382                           ;main.c: 56:         flag = 0;
   383  00B6  01FA               	clrf	_flag
   384  00B7  01FB               	clrf	_flag+1
   385  00B8  289E               	goto	l801
   386  00B9  120A  118A  2810   	ljmp	start
   387  00BC                     __end_of_main:
   388                           
   389                           	psect	text1
   390  00BC                     __ptext1:	
   391 ;; *************** function _abrirCancela *****************
   392 ;; Defined at:
   393 ;;		line 103 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          0       3       0       0       0
   410 ;;      Totals:         0       3       0       0       0
   411 ;;Total ram usage:        3 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; Hardware stack levels required when called: 3
   414 ;; This function calls:
   415 ;;		_fecharCancela
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _abrirCancela
   423  00BC                     _abrirCancela:
   424  00BC                     l769:	
   425                           ;incstack = 0
   426                           ; Regs used in _abrirCancela: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;main.c: 104:     PORTDbits.RD2 = 0;
   430  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   431  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   432  00BE  1108               	bcf	8,2	;volatile
   433                           
   434                           ;main.c: 105:     PORTDbits.RD1 = 1;
   435  00BF  1488               	bsf	8,1	;volatile
   436                           
   437                           ;main.c: 106:     PORTDbits.RD7 = 1;
   438  00C0  1788               	bsf	8,7	;volatile
   439                           
   440                           ;main.c: 107:     PORTDbits.RD6 = 0;
   441  00C1  1308               	bcf	8,6	;volatile
   442                           
   443                           ;main.c: 109:     while (!flag) {
   444  00C2  28E4               	goto	l777
   445  00C3                     l57:
   446                           
   447                           ;main.c: 110:         if (!PORTBbits.RB1) {
   448  00C3  1886               	btfsc	6,1	;volatile
   449  00C4  28C6               	goto	u181
   450  00C5  28C7               	goto	u180
   451  00C6                     u181:
   452  00C6  28E4               	goto	l777
   453  00C7                     u180:
   454  00C7                     l771:
   455                           
   456                           ;main.c: 111:             PORTDbits.RD7 = 0;
   457  00C7  1388               	bcf	8,7	;volatile
   458                           
   459                           ;main.c: 112:             PORTDbits.RD1 = 0;
   460  00C8  1088               	bcf	8,1	;volatile
   461                           
   462                           ;main.c: 113:             PORTDbits.RD6 = 0;
   463  00C9  1308               	bcf	8,6	;volatile
   464                           
   465                           ;main.c: 114:             PORTDbits.RD2 = 0;
   466  00CA  1108               	bcf	8,2	;volatile
   467                           
   468                           ;main.c: 115:             if (PORTBbits.RB3) {
   469  00CB  1D86               	btfss	6,3	;volatile
   470  00CC  28CE               	goto	u191
   471  00CD  28CF               	goto	u190
   472  00CE                     u191:
   473  00CE  28EA               	goto	l61
   474  00CF                     u190:
   475  00CF                     l773:
   476                           
   477                           ;main.c: 116:                 _delay((unsigned long)((8000)*(4000000/4000.0)));
   478  00CF  3029               	movlw	41
   479  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   480  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   481  00D2  00A2               	movwf	??_abrirCancela+2
   482  00D3  3096               	movlw	150
   483  00D4  00A1               	movwf	??_abrirCancela+1
   484  00D5  307E               	movlw	126
   485  00D6  00A0               	movwf	??_abrirCancela
   486  00D7                     u237:
   487  00D7  0BA0               	decfsz	??_abrirCancela,f
   488  00D8  28D7               	goto	u237
   489  00D9  0BA1               	decfsz	??_abrirCancela+1,f
   490  00DA  28D7               	goto	u237
   491  00DB  0BA2               	decfsz	??_abrirCancela+2,f
   492  00DC  28D7               	goto	u237
   493  00DD  0000               	nop
   494  00DE                     l775:
   495                           
   496                           ;main.c: 117:                 fecharCancela();
   497  00DE  120A  118A  2110  120A  118A  	fcall	_fecharCancela
   498  00E3  28EA               	goto	l61
   499  00E4                     l777:
   500                           
   501                           ;main.c: 109:     while (!flag) {
   502  00E4  087A               	movf	_flag,w
   503  00E5  047B               	iorwf	_flag+1,w
   504  00E6  1903               	btfsc	3,2
   505  00E7  28E9               	goto	u201
   506  00E8  28EA               	goto	u200
   507  00E9                     u201:
   508  00E9  28C3               	goto	l57
   509  00EA                     u200:
   510  00EA                     l61:
   511  00EA  0008               	return
   512  00EB                     __end_of_abrirCancela:
   513                           
   514                           	psect	text2
   515  0110                     __ptext2:	
   516 ;; *************** function _fecharCancela *****************
   517 ;; Defined at:
   518 ;;		line 127 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2, status,0
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 2
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_abrirCancela
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _fecharCancela
   548  0110                     _fecharCancela:
   549  0110                     l763:	
   550                           ;incstack = 0
   551                           ; Regs used in _fecharCancela: [wreg+status,2+status,0]
   552                           
   553                           
   554                           ;main.c: 128:     PORTDbits.RD1 = 0;
   555  0110  1283               	bcf	3,5	;RP0=0, select bank0
   556  0111  1303               	bcf	3,6	;RP1=0, select bank0
   557  0112  1088               	bcf	8,1	;volatile
   558                           
   559                           ;main.c: 129:     PORTDbits.RD2 = 1;
   560  0113  1508               	bsf	8,2	;volatile
   561                           
   562                           ;main.c: 130:     PORTDbits.RD6 = 1;
   563  0114  1708               	bsf	8,6	;volatile
   564                           
   565                           ;main.c: 131:     PORTDbits.RD7 = 0;
   566  0115  1388               	bcf	8,7	;volatile
   567                           
   568                           ;main.c: 133:     while (!flag) {
   569  0116  2920               	goto	l767
   570  0117                     l65:
   571                           
   572                           ;main.c: 134:         if (!PORTBbits.RB2) {
   573  0117  1906               	btfsc	6,2	;volatile
   574  0118  291A               	goto	u161
   575  0119  291B               	goto	u160
   576  011A                     u161:
   577  011A  2920               	goto	l767
   578  011B                     u160:
   579  011B                     l765:
   580                           
   581                           ;main.c: 135:             PORTDbits.RD7 = 0;
   582  011B  1388               	bcf	8,7	;volatile
   583                           
   584                           ;main.c: 136:             PORTDbits.RD1 = 0;
   585  011C  1088               	bcf	8,1	;volatile
   586                           
   587                           ;main.c: 137:             PORTDbits.RD6 = 0;
   588  011D  1308               	bcf	8,6	;volatile
   589                           
   590                           ;main.c: 138:             PORTDbits.RD2 = 0;
   591  011E  1108               	bcf	8,2	;volatile
   592                           
   593                           ;main.c: 140:             break;
   594  011F  2926               	goto	l68
   595  0120                     l767:
   596                           
   597                           ;main.c: 133:     while (!flag) {
   598  0120  087A               	movf	_flag,w
   599  0121  047B               	iorwf	_flag+1,w
   600  0122  1903               	btfsc	3,2
   601  0123  2925               	goto	u171
   602  0124  2926               	goto	u170
   603  0125                     u171:
   604  0125  2917               	goto	l65
   605  0126                     u170:
   606  0126                     l68:
   607  0126  0008               	return
   608  0127                     __end_of_fecharCancela:
   609                           
   610                           	psect	text3
   611  0019                     __ptext3:	
   612 ;; *************** function _trem *****************
   613 ;; Defined at:
   614 ;;		line 60 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  i               2    8[COMMON] int 
   619 ;;  i               2    6[COMMON] int 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         4       0       0       0       0
   631 ;;      Temps:          3       0       0       0       0
   632 ;;      Totals:         7       0       0       0       0
   633 ;;Total ram usage:        7 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 1
   636 ;; This function calls:
   637 ;;		_luzesPiscando
   638 ;; This function is called by:
   639 ;;		Interrupt level 1
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _trem
   645  0019                     _trem:
   646  0019                     i1l723:
   647                           
   648                           ;main.c: 61:     if (INTF) {
   649  0019  1C8B               	btfss	11,1	;volatile
   650  001A  281C               	goto	u8_21
   651  001B  281D               	goto	u8_20
   652  001C                     u8_21:
   653  001C  2882               	goto	i1l53
   654  001D                     u8_20:
   655  001D                     i1l725:
   656                           
   657                           ;main.c: 62:         flag = 1;
   658  001D  3001               	movlw	1
   659  001E  00FA               	movwf	_flag
   660  001F  3000               	movlw	0
   661  0020  00FB               	movwf	_flag+1
   662  0021                     i1l727:
   663                           
   664                           ;main.c: 64:         if (PORTBbits.RB2 && !PORTBbits.RB1) {
   665  0021  1D06               	btfss	6,2	;volatile
   666  0022  2824               	goto	u9_21
   667  0023  2825               	goto	u9_20
   668  0024                     u9_21:
   669  0024  284A               	goto	i1l42
   670  0025                     u9_20:
   671  0025                     i1l729:
   672  0025  1886               	btfsc	6,1	;volatile
   673  0026  2828               	goto	u10_21
   674  0027  2829               	goto	u10_20
   675  0028                     u10_21:
   676  0028  284A               	goto	i1l42
   677  0029                     u10_20:
   678  0029                     i1l731:
   679                           
   680                           ;main.c: 65:             for (int i = 0; i < 10; i++) {
   681  0029  01F6               	clrf	trem@i
   682  002A  01F7               	clrf	trem@i+1
   683  002B                     i1l737:
   684                           
   685                           ;main.c: 66:                 luzesPiscando();
   686  002B  120A  118A  20EB  120A  118A  	fcall	_luzesPiscando
   687  0030                     i1l739:
   688                           
   689                           ;main.c: 67:             }
   690  0030  3001               	movlw	1
   691  0031  07F6               	addwf	trem@i,f
   692  0032  1803               	skipnc
   693  0033  0AF7               	incf	trem@i+1,f
   694  0034  3000               	movlw	0
   695  0035  07F7               	addwf	trem@i+1,f
   696  0036                     i1l741:
   697  0036  0877               	movf	trem@i+1,w
   698  0037  3A80               	xorlw	128
   699  0038  00FF               	movwf	btemp+1
   700  0039  3080               	movlw	128
   701  003A  027F               	subwf	btemp+1,w
   702  003B  1D03               	skipz
   703  003C  283F               	goto	u11_25
   704  003D  300A               	movlw	10
   705  003E  0276               	subwf	trem@i,w
   706  003F                     u11_25:
   707  003F  1C03               	skipc
   708  0040  2842               	goto	u11_21
   709  0041  2843               	goto	u11_20
   710  0042                     u11_21:
   711  0042  282B               	goto	i1l737
   712  0043                     u11_20:
   713  0043                     i1l44:
   714                           
   715                           ;main.c: 69:             PORTDbits.RD6 = 1;
   716  0043  1283               	bcf	3,5	;RP0=0, select bank0
   717  0044  1303               	bcf	3,6	;RP1=0, select bank0
   718  0045  1708               	bsf	8,6	;volatile
   719                           
   720                           ;main.c: 70:             PORTDbits.RD7 = 0;
   721  0046  1388               	bcf	8,7	;volatile
   722                           
   723                           ;main.c: 71:             PORTDbits.RD2 = 1;
   724  0047  1508               	bsf	8,2	;volatile
   725                           
   726                           ;main.c: 72:             PORTDbits.RD1 = 0;
   727  0048  1088               	bcf	8,1	;volatile
   728                           
   729                           ;main.c: 73:         } else if (PORTBbits.RB2 && PORTBbits.RB1) {
   730  0049  2856               	goto	i1l47
   731  004A                     i1l42:
   732  004A  1D06               	btfss	6,2	;volatile
   733  004B  284D               	goto	u12_21
   734  004C  284E               	goto	u12_20
   735  004D                     u12_21:
   736  004D  2856               	goto	i1l47
   737  004E                     u12_20:
   738  004E                     i1l743:
   739  004E  1C86               	btfss	6,1	;volatile
   740  004F  2851               	goto	u13_21
   741  0050  2852               	goto	u13_20
   742  0051                     u13_21:
   743  0051  2856               	goto	i1l47
   744  0052                     u13_20:
   745  0052                     i1l745:
   746                           
   747                           ;main.c: 74:             PORTDbits.RD6 = 1;
   748  0052  1708               	bsf	8,6	;volatile
   749                           
   750                           ;main.c: 75:             PORTDbits.RD7 = 0;
   751  0053  1388               	bcf	8,7	;volatile
   752                           
   753                           ;main.c: 76:             PORTDbits.RD2 = 1;
   754  0054  1508               	bsf	8,2	;volatile
   755                           
   756                           ;main.c: 77:             PORTDbits.RD1 = 0;
   757  0055  1088               	bcf	8,1	;volatile
   758  0056                     i1l47:	
   759                           ;main.c: 80:         while (1) {
   760                           
   761                           
   762                           ;main.c: 81:             if (!PORTBbits.RB2) {
   763  0056  1283               	bcf	3,5	;RP0=0, select bank0
   764  0057  1303               	bcf	3,6	;RP1=0, select bank0
   765  0058  1906               	btfsc	6,2	;volatile
   766  0059  285B               	goto	u14_21
   767  005A  285C               	goto	u14_20
   768  005B                     u14_21:
   769  005B  287B               	goto	i1l761
   770  005C                     u14_20:
   771  005C                     i1l747:
   772                           
   773                           ;main.c: 82:                 PORTDbits.RD7 = 0;
   774  005C  1388               	bcf	8,7	;volatile
   775                           
   776                           ;main.c: 83:                 PORTDbits.RD6 = 0;
   777  005D  1308               	bcf	8,6	;volatile
   778                           
   779                           ;main.c: 84:                 PORTDbits.RD2 = 0;
   780  005E  1108               	bcf	8,2	;volatile
   781                           
   782                           ;main.c: 85:                 PORTDbits.RD1 = 0;
   783  005F  1088               	bcf	8,1	;volatile
   784  0060                     i1l749:
   785                           
   786                           ;main.c: 87:                 for (int i = 0; i < 10; i++) {
   787  0060  01F8               	clrf	trem@i_186
   788  0061  01F9               	clrf	trem@i_186+1
   789  0062                     i1l755:
   790                           
   791                           ;main.c: 88:                     luzesPiscando();
   792  0062  120A  118A  20EB  120A  118A  	fcall	_luzesPiscando
   793  0067                     i1l757:
   794                           
   795                           ;main.c: 89:                 }
   796  0067  3001               	movlw	1
   797  0068  07F8               	addwf	trem@i_186,f
   798  0069  1803               	skipnc
   799  006A  0AF9               	incf	trem@i_186+1,f
   800  006B  3000               	movlw	0
   801  006C  07F9               	addwf	trem@i_186+1,f
   802  006D                     i1l759:
   803  006D  0879               	movf	trem@i_186+1,w
   804  006E  3A80               	xorlw	128
   805  006F  00FF               	movwf	btemp+1
   806  0070  3080               	movlw	128
   807  0071  027F               	subwf	btemp+1,w
   808  0072  1D03               	skipz
   809  0073  2876               	goto	u15_25
   810  0074  300A               	movlw	10
   811  0075  0278               	subwf	trem@i_186,w
   812  0076                     u15_25:
   813  0076  1C03               	skipc
   814  0077  2879               	goto	u15_21
   815  0078  287A               	goto	u15_20
   816  0079                     u15_21:
   817  0079  2862               	goto	i1l755
   818  007A                     u15_20:
   819  007A  2881               	goto	i1l51
   820  007B                     i1l761:
   821                           
   822                           ;main.c: 94:             luzesPiscando();
   823  007B  120A  118A  20EB  120A  118A  	fcall	_luzesPiscando
   824  0080  2856               	goto	i1l47
   825  0081                     i1l51:
   826                           
   827                           ;main.c: 97:         INTF = 0;
   828  0081  108B               	bcf	11,1	;volatile
   829  0082                     i1l53:
   830  0082  0875               	movf	??_trem+2,w
   831  0083  1283               	bcf	3,5	;RP0=0, select bank0
   832  0084  1303               	bcf	3,6	;RP1=0, select bank0
   833  0085  00FF               	movwf	btemp+1
   834  0086  0874               	movf	??_trem+1,w
   835  0087  008A               	movwf	10
   836  0088  0E73               	swapf	??_trem,w
   837  0089  0083               	movwf	3
   838  008A  0EFE               	swapf	btemp,f
   839  008B  0E7E               	swapf	btemp,w
   840  008C  0009               	retfie
   841  008D                     __end_of_trem:
   842                           
   843                           	psect	intentry
   844  0004                     __pintentry:	
   845                           ;incstack = 0
   846                           ; Regs used in _trem: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   847                           
   848  0004                     interrupt_function:
   849  007E                     saved_w	set	btemp
   850  0004  00FE               	movwf	btemp
   851  0005  0E03               	swapf	3,w
   852  0006  00F3               	movwf	??_trem
   853  0007  080A               	movf	10,w
   854  0008  00F4               	movwf	??_trem+1
   855  0009  1283               	bcf	3,5	;RP0=0, select bank0
   856  000A  1303               	bcf	3,6	;RP1=0, select bank0
   857  000B  087F               	movf	btemp+1,w
   858  000C  00F5               	movwf	??_trem+2
   859  000D  120A  118A  2819   	ljmp	_trem
   860                           
   861                           	psect	text4
   862  00EB                     __ptext4:	
   863 ;; *************** function _luzesPiscando *****************
   864 ;; Defined at:
   865 ;;		line 147 in file "main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          3       0       0       0       0
   882 ;;      Totals:         3       0       0       0       0
   883 ;;Total ram usage:        3 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_trem
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _luzesPiscando
   894  00EB                     _luzesPiscando:
   895  00EB                     i1l679:	
   896                           ;incstack = 0
   897                           ; Regs used in _luzesPiscando: [wreg]
   898                           
   899                           
   900                           ;main.c: 148:     PORTDbits.RD1 = 1;
   901  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   902  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   903  00ED  1488               	bsf	8,1	;volatile
   904                           
   905                           ;main.c: 149:     PORTDbits.RD2 = 0;
   906  00EE  1108               	bcf	8,2	;volatile
   907                           
   908                           ;main.c: 150:     PORTDbits.RD0 = 1;
   909  00EF  1408               	bsf	8,0	;volatile
   910  00F0                     i1l681:
   911                           
   912                           ;main.c: 151:     _delay((unsigned long)((500)*(4000000/4000.0)));
   913  00F0  3003               	movlw	3
   914  00F1  00F2               	movwf	??_luzesPiscando+2
   915  00F2  308A               	movlw	138
   916  00F3  00F1               	movwf	??_luzesPiscando+1
   917  00F4  3055               	movlw	85
   918  00F5  00F0               	movwf	??_luzesPiscando
   919  00F6                     u24_27:
   920  00F6  0BF0               	decfsz	??_luzesPiscando,f
   921  00F7  28F6               	goto	u24_27
   922  00F8  0BF1               	decfsz	??_luzesPiscando+1,f
   923  00F9  28F6               	goto	u24_27
   924  00FA  0BF2               	decfsz	??_luzesPiscando+2,f
   925  00FB  28F6               	goto	u24_27
   926  00FC  28FD               	nop2
   927  00FD                     i1l683:
   928                           
   929                           ;main.c: 153:     PORTDbits.RD1 = 0;
   930  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   931  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   932  00FF  1088               	bcf	8,1	;volatile
   933  0100                     i1l685:
   934                           
   935                           ;main.c: 154:     PORTDbits.RD2 = 1;
   936  0100  1508               	bsf	8,2	;volatile
   937  0101                     i1l687:
   938                           
   939                           ;main.c: 155:     PORTDbits.RD0 = 0;
   940  0101  1008               	bcf	8,0	;volatile
   941                           
   942                           ;main.c: 156:     _delay((unsigned long)((500)*(4000000/4000.0)));
   943  0102  3003               	movlw	3
   944  0103  00F2               	movwf	??_luzesPiscando+2
   945  0104  308A               	movlw	138
   946  0105  00F1               	movwf	??_luzesPiscando+1
   947  0106  3055               	movlw	85
   948  0107  00F0               	movwf	??_luzesPiscando
   949  0108                     u25_27:
   950  0108  0BF0               	decfsz	??_luzesPiscando,f
   951  0109  2908               	goto	u25_27
   952  010A  0BF1               	decfsz	??_luzesPiscando+1,f
   953  010B  2908               	goto	u25_27
   954  010C  0BF2               	decfsz	??_luzesPiscando+2,f
   955  010D  2908               	goto	u25_27
   956  010E  290F               	nop2
   957  010F                     i1l71:
   958  010F  0008               	return
   959  0110                     __end_of_luzesPiscando:
   960  007E                     btemp	set	126	;btemp
   961  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _trem in COMMON

    _trem->_luzesPiscando

Critical Paths under _main in BANK0

    _main->_abrirCancela

Critical Paths under _trem in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _trem in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _trem in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _trem in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _abrirCancela
 ---------------------------------------------------------------------------------
 (1) _abrirCancela                                         3     3      0       0
                                              0 BANK0      3     3      0
                      _fecharCancela
 ---------------------------------------------------------------------------------
 (2) _fecharCancela                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _trem                                                 7     7      0      60
                                              3 COMMON     7     7      0
                      _luzesPiscando
 ---------------------------------------------------------------------------------
 (4) _luzesPiscando                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _abrirCancela
     _fecharCancela

 _trem (ROOT)
   _luzesPiscando

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Aug 21 13:24:26 2021

         ?_luzesPiscando 0070                       l61 00EA                       l65 0117  
                     l57 00C3                       l68 0126                      l801 009E  
                    l803 00A4                      l805 00A9                      l807 00AF  
                    l809 00B6                      l763 0110                      l771 00C7  
                    l765 011B                      l773 00CF                      l781 0091  
                    l767 0120                      l775 00DE                      l791 0097  
                    l783 0092                      l777 00E4                      l769 00BC  
                    l793 009A                      l785 0094                      l795 009B  
                    l787 0095                      l779 008D                      l797 009C  
                    l789 0096                      l799 009D                      u200 00EA  
                    u201 00E9                      u210 00A4                      u211 00A3  
                    u220 00AF                      u221 00AE                      u160 011B  
                    u161 011A                      u170 0126                      u171 0125  
                    u180 00C7                      u237 00D7                      u181 00C6  
                    u190 00CF                      u191 00CE                     _INTF 0059  
                   i1l42 004A                     i1l51 0081                     i1l44 0043  
                   i1l53 0082                     i1l71 010F                     i1l47 0056  
                   u8_20 001D                     u8_21 001C                     u9_20 0025  
                   u9_21 0024                     _flag 007A                     _main 008D  
                   _trem 0019                     btemp 007E                     start 0010  
                  ?_main 0070                    ?_trem 0070                    i1l731 0029  
                  i1l723 0019                    i1l741 0036                    i1l725 001D  
                  i1l743 004E                    i1l727 0021                    i1l681 00F0  
                  i1l761 007B                    i1l745 0052                    i1l737 002B  
                  i1l729 0025                    i1l683 00FD                    i1l755 0062  
                  i1l747 005C                    i1l739 0030                    i1l685 0100  
                  i1l757 0067                    i1l749 0060                    i1l687 0101  
                  i1l679 00EB                    i1l759 006D                    u10_20 0029  
                  u10_21 0028                    u11_20 0043                    u11_21 0042  
                  u11_25 003F                    u12_20 004E                    u12_21 004D  
                  u13_20 0052                    u13_21 0051                    u14_20 005C  
                  u14_21 005B                    u15_20 007A                    u15_21 0079  
                  u15_25 0076                    u24_27 00F6                    u25_27 0108  
                  _TRISB 0086                    _TRISD 0088    __end_of_fecharCancela 0127  
                  pclath 000A                    trem@i 0076                    status 0003  
                  wtemp0 007E          ??_luzesPiscando 0070          __initialization 0013  
           __end_of_main 00BC             __end_of_trem 008D                   ??_main 0023  
  __size_of_abrirCancela 002F                   ??_trem 0073             _abrirCancela 00BC  
                 saved_w 007E  __end_of__initialization 0015           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 008D               __pintentry 0004  
                __ptext1 00BC                  __ptext2 0110                  __ptext3 0019  
                __ptext4 00EB     end_of_initialization 0015    __end_of_luzesPiscando 0110  
 __size_of_fecharCancela 0017                _PORTBbits 0006                _PORTDbits 0008  
    start_initialization 0013            _fecharCancela 0110              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020           ?_fecharCancela 0070  
      interrupt_function 0004            ?_abrirCancela 0070          ??_fecharCancela 0020  
         ??_abrirCancela 0020   __size_of_luzesPiscando 0025            __size_of_main 002F  
          __size_of_trem 0074                trem@i_186 0078               _INTCONbits 000B  
               intlevel1 0000            _luzesPiscando 00EB               _OPTION_REG 0081  
   __end_of_abrirCancela 00EB  
