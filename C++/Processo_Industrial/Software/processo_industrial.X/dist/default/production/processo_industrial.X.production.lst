

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 31 12:51:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  000C                     _PIR1bits	set	12
   171  0006                     _PORTBbits	set	6
   172  000F                     _TMR1H	set	15
   173  000E                     _TMR1L	set	14
   174  0008                     _PORTDbits	set	8
   175  0010                     _T1CONbits	set	16
   176  000B                     _INTCONbits	set	11
   177  008C                     _PIE1bits	set	140
   178  0081                     _OPTION_REGbits	set	129
   179  0088                     _TRISD	set	136
   180  0086                     _TRISB	set	134
   181  0460                     _TMR1IE	set	1120
   182                           
   183                           	psect	cinit
   184  000F                     start_initialization:	
   185                           ; #config settings
   186                           
   187  000F                     __initialization:
   188                           
   189                           ; Clear objects allocated to BITCOMMON
   190  000F  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   191                           
   192                           ; Clear objects allocated to COMMON
   193  0010  01F7               	clrf	__pbssCOMMON& (0+127)
   194  0011  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   195  0012                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198  0012                     __end_of__initialization:
   199  0012  0183               	clrf	3
   200  0013  120A  118A  284A   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bitbssCOMMON
   203  03C8                     __pbitbssCOMMON:
   204  03C8                     _misturou:
   205  03C8                     	ds	1
   206                           
   207                           	psect	bssCOMMON
   208  0077                     __pbssCOMMON:
   209  0077                     _contador:
   210  0077                     	ds	2
   211                           
   212                           	psect	cstackCOMMON
   213  0070                     __pcstackCOMMON:
   214  0070                     ?_desligar_bomba:
   215  0070                     ?_ligar_bomba:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_sair_agua:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0070                     ??_sair_agua:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_interruption:	
   228                           ; 1 bytes @ 0x0
   229                           
   230                           
   231                           ; 1 bytes @ 0x0
   232  0070                     	ds	3
   233  0073                     ??_interruption:
   234                           
   235                           ; 1 bytes @ 0x3
   236  0073                     	ds	4
   237  0077                     ??_desligar_bomba:
   238  0077                     ??_ligar_bomba:	
   239                           ; 1 bytes @ 0x7
   240                           
   241  0077                     ??_main:	
   242                           ; 1 bytes @ 0x7
   243                           
   244                           
   245                           	psect	maintext
   246  004A                     __pmaintext:	
   247                           ; 1 bytes @ 0x7
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 29 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, pclath, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : B00/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   267 ;;      Params:         0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0
   270 ;;      Totals:         0       0       0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels required when called: 3
   273 ;; This function calls:
   274 ;;		_desligar_bomba
   275 ;;		_ligar_bomba
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           
   282                           ;psect for function _main
   283  004A                     _main:
   284  004A                     l673:	
   285                           ;incstack = 0
   286                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   287                           
   288                           
   289                           ;main.c: 30:     TRISB = 0xFF;
   290  004A  30FF               	movlw	255
   291  004B  1683               	bsf	3,5	;RP0=1, select bank1
   292  004C  1303               	bcf	3,6	;RP1=0, select bank1
   293  004D  0086               	movwf	6	;volatile
   294  004E                     l675:
   295                           
   296                           ;main.c: 31:     TRISD = 0;
   297  004E  0188               	clrf	8	;volatile
   298  004F                     l677:
   299                           
   300                           ;main.c: 32:     OPTION_REGbits.nRBPU = 0;
   301  004F  1381               	bcf	1,7	;volatile
   302  0050                     l679:
   303                           
   304                           ;main.c: 33:     INTCONbits.GIE = 1;
   305  0050  178B               	bsf	11,7	;volatile
   306  0051                     l681:
   307                           
   308                           ;main.c: 34:     INTCONbits.PEIE = 1;
   309  0051  170B               	bsf	11,6	;volatile
   310  0052                     l683:
   311                           
   312                           ;main.c: 35:     PIE1bits.TMR1IE = 1;
   313  0052  140C               	bsf	12,0	;volatile
   314  0053                     l685:
   315                           
   316                           ;main.c: 37:     T1CONbits.TMR1CS = 0;
   317  0053  1283               	bcf	3,5	;RP0=0, select bank0
   318  0054  1303               	bcf	3,6	;RP1=0, select bank0
   319  0055  1090               	bcf	16,1	;volatile
   320  0056                     l687:
   321                           
   322                           ;main.c: 38:     T1CONbits.T1CKPS0 = 1;
   323  0056  1610               	bsf	16,4	;volatile
   324  0057                     l689:
   325                           
   326                           ;main.c: 39:     T1CONbits.T1CKPS1 = 1;
   327  0057  1690               	bsf	16,5	;volatile
   328  0058                     l691:
   329                           
   330                           ;main.c: 41:     PORTDbits.RD0 = 1;
   331  0058  1408               	bsf	8,0	;volatile
   332  0059                     l693:
   333                           
   334                           ;main.c: 43:     TMR1L = 0xDC;
   335  0059  30DC               	movlw	220
   336  005A  008E               	movwf	14	;volatile
   337  005B                     l695:
   338                           
   339                           ;main.c: 44:     TMR1H = 0x0B;
   340  005B  300B               	movlw	11
   341  005C  008F               	movwf	15	;volatile
   342  005D                     l697:
   343                           
   344                           ;main.c: 47:         if (!PORTBbits.RB0) {
   345  005D  1283               	bcf	3,5	;RP0=0, select bank0
   346  005E  1303               	bcf	3,6	;RP1=0, select bank0
   347  005F  1806               	btfsc	6,0	;volatile
   348  0060  2862               	goto	u41
   349  0061  2863               	goto	u40
   350  0062                     u41:
   351  0062  2869               	goto	l701
   352  0063                     u40:
   353  0063                     l699:
   354                           
   355                           ;main.c: 48:             desligar_bomba();
   356  0063  120A  118A  2072  120A  118A  	fcall	_desligar_bomba
   357                           
   358                           ;main.c: 49:         } else {
   359  0068  285D               	goto	l697
   360  0069                     l701:
   361                           
   362                           ;main.c: 50:             ligar_bomba();
   363  0069  120A  118A  209E  120A  118A  	fcall	_ligar_bomba
   364  006E  285D               	goto	l697
   365  006F  120A  118A  280C   	ljmp	start
   366  0072                     __end_of_main:
   367                           
   368                           	psect	text1
   369  009E                     __ptext1:	
   370 ;; *************** function _ligar_bomba *****************
   371 ;; Defined at:
   372 ;;		line 77 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		None
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels used: 1
   392 ;; Hardware stack levels required when called: 2
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _ligar_bomba
   402  009E                     _ligar_bomba:
   403  009E                     l665:	
   404                           ;incstack = 0
   405                           ; Regs used in _ligar_bomba: []
   406                           
   407                           
   408                           ;main.c: 78:     PORTDbits.RD7 = 1;
   409  009E  1283               	bcf	3,5	;RP0=0, select bank0
   410  009F  1303               	bcf	3,6	;RP1=0, select bank0
   411  00A0  1788               	bsf	8,7	;volatile
   412                           
   413                           ;main.c: 79:     PORTDbits.RD4 = 0;
   414  00A1  1208               	bcf	8,4	;volatile
   415                           
   416                           ;main.c: 80:     PORTDbits.RD6 = 0;
   417  00A2  1308               	bcf	8,6	;volatile
   418  00A3                     l56:
   419  00A3  0008               	return
   420  00A4                     __end_of_ligar_bomba:
   421                           
   422                           	psect	text2
   423  0072                     __ptext2:	
   424 ;; *************** function _desligar_bomba *****************
   425 ;; Defined at:
   426 ;;		line 83 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		None
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 2
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _desligar_bomba
   456  0072                     _desligar_bomba:
   457  0072                     l657:	
   458                           ;incstack = 0
   459                           ; Regs used in _desligar_bomba: []
   460                           
   461                           
   462                           ;main.c: 84:     PORTDbits.RD7 = 0;
   463  0072  1283               	bcf	3,5	;RP0=0, select bank0
   464  0073  1303               	bcf	3,6	;RP1=0, select bank0
   465  0074  1388               	bcf	8,7	;volatile
   466                           
   467                           ;main.c: 85:     if (!PORTBbits.RB3) {
   468  0075  1986               	btfsc	6,3	;volatile
   469  0076  2878               	goto	u11
   470  0077  2879               	goto	u10
   471  0078                     u11:
   472  0078  2885               	goto	l59
   473  0079                     u10:
   474  0079                     l659:
   475                           
   476                           ;main.c: 86:         PORTDbits.RD6 = 0;
   477  0079  1308               	bcf	8,6	;volatile
   478                           
   479                           ;main.c: 88:         if (!T1CONbits.TMR1ON && !misturou) {
   480  007A  1810               	btfsc	16,0	;volatile
   481  007B  287D               	goto	u21
   482  007C  287E               	goto	u20
   483  007D                     u21:
   484  007D  2887               	goto	l62
   485  007E                     u20:
   486  007E                     l661:
   487  007E  1879               	btfsc	_misturou/(0+8),_misturou& (0+7)
   488  007F  2881               	goto	u31
   489  0080  2882               	goto	u30
   490  0081                     u31:
   491  0081  2887               	goto	l62
   492  0082                     u30:
   493  0082                     l663:
   494                           
   495                           ;main.c: 89:             PORTDbits.RD4 = 1;
   496  0082  1608               	bsf	8,4	;volatile
   497                           
   498                           ;main.c: 90:             T1CONbits.TMR1ON = 1;
   499  0083  1410               	bsf	16,0	;volatile
   500  0084  2887               	goto	l62
   501  0085                     l59:
   502                           
   503                           ;main.c: 94:         PORTDbits.RD6 = 1;
   504  0085  1708               	bsf	8,6	;volatile
   505                           
   506                           ;main.c: 95:         misturou = 0;
   507  0086  1079               	bcf	_misturou/(0+8),_misturou& (0+7)
   508  0087                     l62:
   509  0087  0008               	return
   510  0088                     __end_of_desligar_bomba:
   511                           
   512                           	psect	text3
   513  0016                     __ptext3:	
   514 ;; *************** function _interruption *****************
   515 ;; Defined at:
   516 ;;		line 55 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          4       0       0       0       0
   533 ;;      Totals:         4       0       0       0       0
   534 ;;Total ram usage:        4 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 1
   537 ;; This function calls:
   538 ;;		_sair_agua
   539 ;; This function is called by:
   540 ;;		Interrupt level 1
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _interruption
   546  0016                     _interruption:
   547  0016                     i1l703:
   548                           
   549                           ;main.c: 57:     if (TMR1IE) {
   550  0016  1683               	bsf	3,5	;RP0=1, select bank1
   551  0017  1303               	bcf	3,6	;RP1=0, select bank1
   552  0018  1C0C               	btfss	12,0	;volatile
   553  0019  281B               	goto	u5_21
   554  001A  281C               	goto	u5_20
   555  001B                     u5_21:
   556  001B  2843               	goto	i1l53
   557  001C                     u5_20:
   558  001C                     i1l705:
   559                           
   560                           ;main.c: 58:         PIR1bits.TMR1IF = 0;
   561  001C  1283               	bcf	3,5	;RP0=0, select bank0
   562  001D  1303               	bcf	3,6	;RP1=0, select bank0
   563  001E  100C               	bcf	12,0	;volatile
   564  001F                     i1l707:
   565                           
   566                           ;main.c: 59:         TMR1L = 0xDC;
   567  001F  30DC               	movlw	220
   568  0020  008E               	movwf	14	;volatile
   569                           
   570                           ;main.c: 60:         TMR1H = 0x0B;
   571  0021  300B               	movlw	11
   572  0022  008F               	movwf	15	;volatile
   573                           
   574                           ;main.c: 61:         contador++;
   575  0023  3001               	movlw	1
   576  0024  07F7               	addwf	_contador,f
   577  0025  1803               	skipnc
   578  0026  0AF8               	incf	_contador+1,f
   579  0027  3000               	movlw	0
   580  0028  07F8               	addwf	_contador+1,f
   581  0029                     i1l709:
   582                           
   583                           ;main.c: 63:         if (contador == 20) {
   584  0029  3014               	movlw	20
   585  002A  0677               	xorwf	_contador,w
   586  002B  0478               	iorwf	_contador+1,w
   587  002C  1D03               	btfss	3,2
   588  002D  282F               	goto	u6_21
   589  002E  2830               	goto	u6_20
   590  002F                     u6_21:
   591  002F  2843               	goto	i1l53
   592  0030                     u6_20:
   593  0030                     i1l711:
   594                           
   595                           ;main.c: 64:             misturou = 1;
   596  0030  1479               	bsf	_misturou/(0+8),_misturou& (0+7)
   597                           
   598                           ;main.c: 65:             PORTDbits.RD4 = 0;
   599  0031  1208               	bcf	8,4	;volatile
   600  0032                     i1l713:
   601                           
   602                           ;main.c: 66:             contador = 0;
   603  0032  01F7               	clrf	_contador
   604  0033  01F8               	clrf	_contador+1
   605  0034                     i1l715:
   606                           
   607                           ;main.c: 67:             T1CONbits.TMR1ON = 0;
   608  0034  1010               	bcf	16,0	;volatile
   609  0035                     i1l717:
   610                           
   611                           ;main.c: 69:             _delay((unsigned long)((100)*(4000000/4000.0)));
   612  0035  3082               	movlw	130
   613  0036  00F4               	movwf	??_interruption+1
   614  0037  30DD               	movlw	221
   615  0038  00F3               	movwf	??_interruption
   616  0039                     u7_27:
   617  0039  0BF3               	decfsz	??_interruption,f
   618  003A  2839               	goto	u7_27
   619  003B  0BF4               	decfsz	??_interruption+1,f
   620  003C  2839               	goto	u7_27
   621  003D  283E               	nop2
   622  003E                     i1l719:
   623                           
   624                           ;main.c: 70:             sair_agua();
   625  003E  120A  118A  2088  120A  118A  	fcall	_sair_agua
   626  0043                     i1l53:
   627  0043  0876               	movf	??_interruption+3,w
   628  0044  008A               	movwf	10
   629  0045  0E75               	swapf	??_interruption+2,w
   630  0046  0083               	movwf	3
   631  0047  0EFE               	swapf	btemp,f
   632  0048  0E7E               	swapf	btemp,w
   633  0049  0009               	retfie
   634  004A                     __end_of_interruption:
   635                           
   636                           	psect	intentry
   637  0004                     __pintentry:	
   638                           ;incstack = 0
   639                           ; Regs used in _interruption: [wreg+status,2+status,0+pclath+cstack]
   640                           
   641  0004                     interrupt_function:
   642  007E                     saved_w	set	btemp
   643  0004  00FE               	movwf	btemp
   644  0005  0E03               	swapf	3,w
   645  0006  00F5               	movwf	??_interruption+2
   646  0007  080A               	movf	10,w
   647  0008  00F6               	movwf	??_interruption+3
   648  0009  120A  118A  2816   	ljmp	_interruption
   649                           
   650                           	psect	text4
   651  0088                     __ptext4:	
   652 ;; *************** function _sair_agua *****************
   653 ;; Defined at:
   654 ;;		line 100 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          3       0       0       0       0
   671 ;;      Totals:         3       0       0       0       0
   672 ;;Total ram usage:        3 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_interruption
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _sair_agua
   683  0088                     _sair_agua:
   684  0088                     i1l667:	
   685                           ;incstack = 0
   686                           ; Regs used in _sair_agua: [wreg]
   687                           
   688                           
   689                           ;main.c: 101:     PORTDbits.RD4 = 0;
   690  0088  1283               	bcf	3,5	;RP0=0, select bank0
   691  0089  1303               	bcf	3,6	;RP1=0, select bank0
   692  008A  1208               	bcf	8,4	;volatile
   693                           
   694                           ;main.c: 102:     PORTDbits.RD6 = 0;
   695  008B  1308               	bcf	8,6	;volatile
   696                           
   697                           ;main.c: 103:     PORTDbits.RD0 = 0;
   698  008C  1008               	bcf	8,0	;volatile
   699  008D                     i1l669:
   700                           
   701                           ;main.c: 104:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   702  008D  300B               	movlw	11
   703  008E  00F2               	movwf	??_sair_agua+2
   704  008F  3026               	movlw	38
   705  0090  00F1               	movwf	??_sair_agua+1
   706  0091  305D               	movlw	93
   707  0092  00F0               	movwf	??_sair_agua
   708  0093                     u8_27:
   709  0093  0BF0               	decfsz	??_sair_agua,f
   710  0094  2893               	goto	u8_27
   711  0095  0BF1               	decfsz	??_sair_agua+1,f
   712  0096  2893               	goto	u8_27
   713  0097  0BF2               	decfsz	??_sair_agua+2,f
   714  0098  2893               	goto	u8_27
   715  0099  289A               	nop2
   716  009A                     i1l671:
   717                           
   718                           ;main.c: 105:     PORTDbits.RD0 = 1;
   719  009A  1283               	bcf	3,5	;RP0=0, select bank0
   720  009B  1303               	bcf	3,6	;RP1=0, select bank0
   721  009C  1408               	bsf	8,0	;volatile
   722  009D                     i1l65:
   723  009D  0008               	return
   724  009E                     __end_of_sair_agua:
   725  007E                     btemp	set	126	;btemp
   726  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interruption in COMMON

    _interruption->_sair_agua

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _desligar_bomba
                        _ligar_bomba
 ---------------------------------------------------------------------------------
 (1) _ligar_bomba                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desligar_bomba                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interruption                                         4     4      0       0
                                              3 COMMON     4     4      0
                          _sair_agua
 ---------------------------------------------------------------------------------
 (3) _sair_agua                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _desligar_bomba
   _ligar_bomba

 _interruption (ROOT)
   _sair_agua

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 31 12:51:00 2021

                     l62 0087                       l56 00A3                       l59 0085  
                     u10 0079                       u11 0078                       u20 007E  
                     u21 007D                       u30 0082                       u31 0081  
                     u40 0063                       u41 0062                      l701 0069  
                    l661 007E                      l663 0082                      l657 0072  
                    l665 009E                      l681 0051                      l673 004A  
                    l659 0079                      l691 0058                      l683 0052  
                    l675 004E                      l693 0059                      l685 0053  
                    l677 004F                      l695 005B                      l687 0056  
                    l679 0050                      l697 005D                      l689 0057  
                    l699 0063                     i1l53 0043                     i1l65 009D  
                   u5_20 001C                     u5_21 001B                     u6_20 0030  
                   u6_21 002F                     u7_27 0039                     u8_27 0093  
                   _main 004A                     btemp 007E                     start 000C  
           ?_ligar_bomba 0070                    ?_main 0070                    i1l711 0030  
                  i1l703 0016                    i1l713 0032                    i1l705 001C  
                  i1l715 0034                    i1l707 001F                    i1l717 0035  
                  i1l709 0029                    i1l671 009A                    i1l719 003E  
                  i1l667 0088                    i1l669 008D                    _TMR1H 000F  
                  _TMR1L 000E                    _TRISB 0086                    _TRISD 0088  
         __pbitbssCOMMON 03C8                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0072  
                 ??_main 0077                   _TMR1IE 0460                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070            ?_interruption 0070  
   __size_of_ligar_bomba 0006           _OPTION_REGbits 0081               __pmaintext 004A  
         ??_interruption 0073       __size_of_sair_agua 0016               __pintentry 0004  
__size_of_desligar_bomba 0016                  __ptext1 009E                  __ptext2 0072  
                __ptext3 0016                  __ptext4 0088                _T1CONbits 0010  
      __end_of_sair_agua 009E     end_of_initialization 0012                _PORTBbits 0006  
              _PORTDbits 0008     __end_of_interruption 004A      start_initialization 000F  
         _desligar_bomba 0072            ??_ligar_bomba 0077              __pbssCOMMON 0077  
              ___latbits 0002   __end_of_desligar_bomba 0088      __end_of_ligar_bomba 00A4  
  __size_of_interruption 0034          ?_desligar_bomba 0070        interrupt_function 0004  
              _sair_agua 0088                 _PIE1bits 008C                 _PIR1bits 000C  
           _interruption 0016               ?_sair_agua 0070              _ligar_bomba 009E  
               _contador 0077            __size_of_main 0028                 _misturou 03C8  
             _INTCONbits 000B                 intlevel1 0000              ??_sair_agua 0070  
       ??_desligar_bomba 0077  
