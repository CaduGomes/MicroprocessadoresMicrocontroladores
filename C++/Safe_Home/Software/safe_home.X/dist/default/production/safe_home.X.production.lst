

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 16 12:57:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	strings
   204  0800                     __pstrings:
   205  0800                     stringtab:
   206  0800                     __stringtab:
   207                           
   208                           ;	String table - string pointers are 1 byte each
   209  0800  1BFF               	btfsc	btemp+1,7
   210  0801  280A               	ljmp	stringcode
   211  0802  1383               	bcf	3,7
   212  0803  187F               	btfsc	btemp+1,0
   213  0804  1783               	bsf	3,7
   214  0805  0800               	movf	0,w
   215  0806  0A84               	incf	4,f
   216  0807  1903               	skipnz
   217  0808  0AFF               	incf	btemp+1,f
   218  0809  0008               	return
   219  080A                     stringcode:
   220  080A                     stringdir:
   221  080A  3008               	movlw	high stringdir
   222  080B  008A               	movwf	10
   223  080C  0804               	movf	4,w
   224  080D  0A84               	incf	4,f
   225  080E  0782               	addwf	2,f
   226  080F                     __stringbase:
   227  080F  3400               	retlw	0
   228  0810                     __end_of__stringtab:
   229  0810                     _dpowers:
   230  0810  3401               	retlw	1
   231  0811  3400               	retlw	0
   232  0812  340A               	retlw	10
   233  0813  3400               	retlw	0
   234  0814  3464               	retlw	100
   235  0815  3400               	retlw	0
   236  0816  34E8               	retlw	232
   237  0817  3403               	retlw	3
   238  0818  3410               	retlw	16
   239  0819  3427               	retlw	39
   240  081A                     __end_of_dpowers:
   241  0007                     _PORTCbits	set	7
   242  000C                     _PIR1bits	set	12
   243  0006                     _PORTBbits	set	6
   244  001E                     _ADRESH	set	30
   245  001F                     _ADCON0bits	set	31
   246  0001                     _TMR0	set	1
   247  000F                     _TMR1H	set	15
   248  000E                     _TMR1L	set	14
   249  0010                     _T1CONbits	set	16
   250  000B                     _INTCONbits	set	11
   251  0008                     _PORTDbits	set	8
   252  005A                     _TMR0IF	set	90
   253  005D                     _TMR0IE	set	93
   254  0060                     _TMR1IF	set	96
   255  0059                     _INTF	set	89
   256  009F                     _ADCON1bits	set	159
   257  008C                     _PIE1bits	set	140
   258  0081                     _OPTION_REGbits	set	129
   259  0081                     _OPTION_REG	set	129
   260  0087                     _TRISC	set	135
   261  0088                     _TRISD	set	136
   262  0086                     _TRISB	set	134
   263  040C                     _T0SE	set	1036
   264  040D                     _T0CS	set	1037
   265  081A                     STR_14:
   266  081A  3453               	retlw	83	;'S'
   267  081B  3465               	retlw	101	;'e'
   268  081C  346E               	retlw	110	;'n'
   269  081D  3468               	retlw	104	;'h'
   270  081E  3461               	retlw	97	;'a'
   271  081F  3420               	retlw	32	;' '
   272  0820  3469               	retlw	105	;'i'
   273  0821  346E               	retlw	110	;'n'
   274  0822  3463               	retlw	99	;'c'
   275  0823  346F               	retlw	111	;'o'
   276  0824  3472               	retlw	114	;'r'
   277  0825  3472               	retlw	114	;'r'
   278  0826  3465               	retlw	101	;'e'
   279  0827  3474               	retlw	116	;'t'
   280  0828  3461               	retlw	97	;'a'
   281  0829  3421               	retlw	33	;'!'
   282  082A  3400               	retlw	0
   283  082B                     STR_5:
   284  082B  3444               	retlw	68	;'D'
   285  082C  3469               	retlw	105	;'i'
   286  082D  3467               	retlw	103	;'g'
   287  082E  3469               	retlw	105	;'i'
   288  082F  3474               	retlw	116	;'t'
   289  0830  3465               	retlw	101	;'e'
   290  0831  3420               	retlw	32	;' '
   291  0832  3461               	retlw	97	;'a'
   292  0833  3420               	retlw	32	;' '
   293  0834  3473               	retlw	115	;'s'
   294  0835  3465               	retlw	101	;'e'
   295  0836  346E               	retlw	110	;'n'
   296  0837  3468               	retlw	104	;'h'
   297  0838  3461               	retlw	97	;'a'
   298  0839  343A               	retlw	58	;':'
   299  083A  3400               	retlw	0
   300  083B                     STR_11:
   301  083B  3453               	retlw	83	;'S'
   302  083C  3465               	retlw	101	;'e'
   303  083D  346E               	retlw	110	;'n'
   304  083E  3468               	retlw	104	;'h'
   305  083F  3461               	retlw	97	;'a'
   306  0840  3420               	retlw	32	;' '
   307  0841  3443               	retlw	67	;'C'
   308  0842  346F               	retlw	111	;'o'
   309  0843  3472               	retlw	114	;'r'
   310  0844  3472               	retlw	114	;'r'
   311  0845  3465               	retlw	101	;'e'
   312  0846  3474               	retlw	116	;'t'
   313  0847  3461               	retlw	97	;'a'
   314  0848  3421               	retlw	33	;'!'
   315  0849  3400               	retlw	0
   316  084A                     STR_4:
   317  084A  3466               	retlw	102	;'f'
   318  084B  346F               	retlw	111	;'o'
   319  084C  3469               	retlw	105	;'i'
   320  084D  3420               	retlw	32	;' '
   321  084E  3461               	retlw	97	;'a'
   322  084F  3474               	retlw	116	;'t'
   323  0850  3469               	retlw	105	;'i'
   324  0851  3476               	retlw	118	;'v'
   325  0852  3461               	retlw	97	;'a'
   326  0853  3464               	retlw	100	;'d'
   327  0854  346F               	retlw	111	;'o'
   328  0855  3421               	retlw	33	;'!'
   329  0856  3420               	retlw	32	;' '
   330  0857  3400               	retlw	0
   331  0858                     STR_2:
   332  0858  3464               	retlw	100	;'d'
   333  0859  3465               	retlw	101	;'e'
   334  085A  3473               	retlw	115	;'s'
   335  085B  3461               	retlw	97	;'a'
   336  085C  3474               	retlw	116	;'t'
   337  085D  3469               	retlw	105	;'i'
   338  085E  3476               	retlw	118	;'v'
   339  085F  3461               	retlw	97	;'a'
   340  0860  3464               	retlw	100	;'d'
   341  0861  346F               	retlw	111	;'o'
   342  0862  3421               	retlw	33	;'!'
   343  0863  3420               	retlw	32	;' '
   344  0864  3400               	retlw	0
   345  0865                     STR_7:
   346  0865  3454               	retlw	84	;'T'
   347  0866  3465               	retlw	101	;'e'
   348  0867  346D               	retlw	109	;'m'
   349  0868  3470               	retlw	112	;'p'
   350  0869  3420               	retlw	32	;' '
   351  086A  3441               	retlw	65	;'A'
   352  086B  3474               	retlw	116	;'t'
   353  086C  3475               	retlw	117	;'u'
   354  086D  3461               	retlw	97	;'a'
   355  086E  346C               	retlw	108	;'l'
   356  086F  343A               	retlw	58	;':'
   357  0870  3400               	retlw	0
   358  0871                     STR_1:
   359  0871  3453               	retlw	83	;'S'
   360  0872  3461               	retlw	97	;'a'
   361  0873  3466               	retlw	102	;'f'
   362  0874  3465               	retlw	101	;'e'
   363  0875  3420               	retlw	32	;' '
   364  0876  3448               	retlw	72	;'H'
   365  0877  346F               	retlw	111	;'o'
   366  0878  346D               	retlw	109	;'m'
   367  0879  3465               	retlw	101	;'e'
   368  087A  3400               	retlw	0
   369  087B                     STR_13:
   370  087B  3444               	retlw	68	;'D'
   371  087C  3465               	retlw	101	;'e'
   372  087D  3473               	retlw	115	;'s'
   373  087E  3461               	retlw	97	;'a'
   374  087F  3472               	retlw	114	;'r'
   375  0880  346D               	retlw	109	;'m'
   376  0881  3461               	retlw	97	;'a'
   377  0882  3464               	retlw	100	;'d'
   378  0883  346F               	retlw	111	;'o'
   379  0884  3400               	retlw	0
   380  0885                     STR_9:
   381  0885  3453               	retlw	83	;'S'
   382  0886  3469               	retlw	105	;'i'
   383  0887  3473               	retlw	115	;'s'
   384  0888  3474               	retlw	116	;'t'
   385  0889  3465               	retlw	101	;'e'
   386  088A  346D               	retlw	109	;'m'
   387  088B  3461               	retlw	97	;'a'
   388  088C  3400               	retlw	0
   389  088D                     STR_10:
   390  088D  3441               	retlw	65	;'A'
   391  088E  3472               	retlw	114	;'r'
   392  088F  346D               	retlw	109	;'m'
   393  0890  3461               	retlw	97	;'a'
   394  0891  3464               	retlw	100	;'d'
   395  0892  346F               	retlw	111	;'o'
   396  0893  3400               	retlw	0
   397  0894                     STR_8:
   398  0894  3425               	retlw	37	;'%'
   399  0895  3464               	retlw	100	;'d'
   400  0896  3400               	retlw	0
   401  082B                     
   402                           	psect	cinit
   403  0015                     start_initialization:	
   404                           ; #config settings
   405                           
   406  0015                     __initialization:
   407                           
   408                           ; Clear objects allocated to BITCOMMON
   409  0015  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   410                           
   411                           ; Clear objects allocated to BANK0
   412  0016  1283               	bcf	3,5	;RP0=0, select bank0
   413  0017  1303               	bcf	3,6	;RP1=0, select bank0
   414  0018  01E2               	clrf	__pbssBANK0& (0+127)
   415  0019  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   416  001A  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   417  001B  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   418  001C  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   419  001D  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   420                           
   421                           ; Clear objects allocated to BANK1
   422  001E  1683               	bsf	3,5	;RP0=1, select bank1
   423  001F  1303               	bcf	3,6	;RP1=0, select bank1
   424  0020  01D2               	clrf	__pbssBANK1& (0+127)
   425  0021  01D3               	clrf	(__pbssBANK1+1)& (0+127)
   426  0022  01D4               	clrf	(__pbssBANK1+2)& (0+127)
   427  0023  01D5               	clrf	(__pbssBANK1+3)& (0+127)
   428  0024  01D6               	clrf	(__pbssBANK1+4)& (0+127)
   429  0025  01D7               	clrf	(__pbssBANK1+5)& (0+127)
   430  0026  01D8               	clrf	(__pbssBANK1+6)& (0+127)
   431  0027  01D9               	clrf	(__pbssBANK1+7)& (0+127)
   432  0028  01DA               	clrf	(__pbssBANK1+8)& (0+127)
   433  0029  01DB               	clrf	(__pbssBANK1+9)& (0+127)
   434  002A                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437  002A                     __end_of__initialization:
   438  002A  0183               	clrf	3
   439  002B  120A  158A  2A5F   	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bitbssCOMMON
   442  03E0                     __pbitbssCOMMON:
   443  03E0                     _Alarme_ativo:
   444  03E0                     	ds	1
   445  03E1                     _Alarme_armado:
   446  03E1                     	ds	1
   447  03E2                     _SH_ativo:
   448  03E2                     	ds	1
   449                           
   450                           	psect	bssBANK0
   451  0062                     __pbssBANK0:
   452  0062                     _contador1:
   453  0062                     	ds	2
   454  0064                     _contador0:
   455  0064                     	ds	2
   456  0066                     _size:
   457  0066                     	ds	2
   458                           
   459                           	psect	bssBANK1
   460  00D2                     __pbssBANK1:
   461  00D2                     _password:
   462  00D2                     	ds	8
   463  00DA                     _valor:
   464  00DA                     	ds	2
   465                           
   466                           	psect	cstackBANK1
   467  00A0                     __pcstackBANK1:
   468  00A0                     ??___fltol:
   469                           
   470                           ; 1 bytes @ 0x0
   471  00A0                     	ds	5
   472  00A5                     ___fltol@sign1:
   473                           
   474                           ; 1 bytes @ 0x5
   475  00A5                     	ds	1
   476  00A6                     ___fltol@exp1:
   477                           
   478                           ; 1 bytes @ 0x6
   479  00A6                     	ds	1
   480  00A7                     ?_mapToCelsius:
   481  00A7                     mapToCelsius@value:	
   482                           ; 2 bytes @ 0x7
   483                           
   484                           
   485                           ; 4 bytes @ 0x7
   486  00A7                     	ds	4
   487  00AB                     ?_sprintf:
   488  00AB                     sprintf@f:	
   489                           ; 2 bytes @ 0xB
   490                           
   491                           
   492                           ; 1 bytes @ 0xB
   493  00AB                     	ds	3
   494  00AE                     ??_sprintf:
   495                           
   496                           ; 1 bytes @ 0xE
   497  00AE                     	ds	3
   498  00B1                     sprintf@ap:
   499                           
   500                           ; 1 bytes @ 0x11
   501  00B1                     	ds	1
   502  00B2                     sprintf@flag:
   503                           
   504                           ; 1 bytes @ 0x12
   505  00B2                     	ds	1
   506  00B3                     sprintf@prec:
   507                           
   508                           ; 1 bytes @ 0x13
   509  00B3                     	ds	1
   510  00B4                     sprintf@val:
   511                           
   512                           ; 2 bytes @ 0x14
   513  00B4                     	ds	2
   514  00B6                     sprintf@sp:
   515                           
   516                           ; 1 bytes @ 0x16
   517  00B6                     	ds	1
   518  00B7                     sprintf@c:
   519                           
   520                           ; 1 bytes @ 0x17
   521  00B7                     	ds	1
   522  00B8                     ??_termometro:
   523                           
   524                           ; 1 bytes @ 0x18
   525  00B8                     	ds	3
   526  00BB                     termometro@buffer:
   527                           
   528                           ; 20 bytes @ 0x1B
   529  00BB                     	ds	20
   530  00CF                     ??_main:
   531                           
   532                           ; 1 bytes @ 0x2F
   533  00CF                     	ds	3
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:
   537  0070                     ?_alarme:
   538  0070                     ?_termometro:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_teclado:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_Lcd_Port:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Cmd:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Lcd_Clear:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_Lcd_Init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Lcd_Write_Char:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_config_ports:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_config_timer:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_config_ac:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_config:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_main:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_interruption:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?i1_Lcd_Port:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??i1_Lcd_Port:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?i1_Lcd_Cmd:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?i1_Lcd_Clear:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?i1_Lcd_Write_Char:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     i1Lcd_Port@a:	
   593                           ; 1 bytes @ 0x0
   594                           
   595                           
   596                           ; 1 bytes @ 0x0
   597  0070                     	ds	1
   598  0071                     ??i1_Lcd_Cmd:
   599  0071                     ??i1_Lcd_Write_Char:	
   600                           ; 1 bytes @ 0x1
   601                           
   602                           
   603                           ; 1 bytes @ 0x1
   604  0071                     	ds	1
   605  0072                     i1Lcd_Write_Char@temp:
   606                           
   607                           ; 1 bytes @ 0x2
   608  0072                     	ds	1
   609  0073                     i1Lcd_Cmd@a:
   610  0073                     i1Lcd_Write_Char@y:	
   611                           ; 1 bytes @ 0x3
   612                           
   613                           
   614                           ; 1 bytes @ 0x3
   615  0073                     	ds	1
   616  0074                     ??i1_Lcd_Clear:
   617  0074                     ?i1_Lcd_Set_Cursor:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0074                     i1Lcd_Set_Cursor@b:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     i1Lcd_Write_Char@a:	
   624                           ; 1 bytes @ 0x4
   625                           
   626                           
   627                           ; 1 bytes @ 0x4
   628  0074                     	ds	1
   629  0075                     ??i1_Lcd_Set_Cursor:
   630  0075                     ?i1_Lcd_Write_String:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     i1Lcd_Write_String@a:	
   634                           ; 1 bytes @ 0x5
   635                           
   636                           
   637                           ; 2 bytes @ 0x5
   638  0075                     	ds	2
   639  0077                     ??i1_Lcd_Write_String:
   640  0077                     i1Lcd_Set_Cursor@a:	
   641                           ; 1 bytes @ 0x7
   642                           
   643                           
   644                           ; 1 bytes @ 0x7
   645  0077                     	ds	1
   646  0078                     i1Lcd_Set_Cursor@z:
   647                           
   648                           ; 1 bytes @ 0x8
   649  0078                     	ds	1
   650  0079                     i1Lcd_Set_Cursor@y:
   651                           
   652                           ; 1 bytes @ 0x9
   653  0079                     	ds	1
   654  007A                     i1Lcd_Set_Cursor@temp:
   655  007A                     i1Lcd_Write_String@i:	
   656                           ; 1 bytes @ 0xA
   657                           
   658                           
   659                           ; 2 bytes @ 0xA
   660  007A                     	ds	2
   661                           
   662                           	psect	cstackBANK0
   663  0020                     __pcstackBANK0:
   664  0020                     ??_interruption:
   665                           
   666                           ; 1 bytes @ 0x0
   667  0020                     	ds	7
   668  0027                     ??_Lcd_Port:
   669  0027                     ??_config_ports:	
   670                           ; 1 bytes @ 0x7
   671                           
   672  0027                     ??_config_timer:	
   673                           ; 1 bytes @ 0x7
   674                           
   675  0027                     ??_config_ac:	
   676                           ; 1 bytes @ 0x7
   677                           
   678  0027                     ??_config:	
   679                           ; 1 bytes @ 0x7
   680                           
   681  0027                     ?__Umul8_16:	
   682                           ; 1 bytes @ 0x7
   683                           
   684  0027                     ?___lwdiv:	
   685                           ; 2 bytes @ 0x7
   686                           
   687  0027                     ?___xxtofl:	
   688                           ; 2 bytes @ 0x7
   689                           
   690  0027                     Lcd_Port@a:	
   691                           ; 4 bytes @ 0x7
   692                           
   693  0027                     __Umul8_16@multiplicand:	
   694                           ; 1 bytes @ 0x7
   695                           
   696  0027                     ___lwdiv@divisor:	
   697                           ; 1 bytes @ 0x7
   698                           
   699  0027                     ___xxtofl@val:	
   700                           ; 2 bytes @ 0x7
   701                           
   702                           
   703                           ; 4 bytes @ 0x7
   704  0027                     	ds	1
   705  0028                     ??_Lcd_Cmd:
   706  0028                     ??_Lcd_Write_Char:	
   707                           ; 1 bytes @ 0x8
   708                           
   709                           
   710                           ; 1 bytes @ 0x8
   711  0028                     	ds	1
   712  0029                     ??__Umul8_16:
   713  0029                     Lcd_Write_Char@temp:	
   714                           ; 1 bytes @ 0x9
   715                           
   716  0029                     ___lwdiv@dividend:	
   717                           ; 1 bytes @ 0x9
   718                           
   719                           
   720                           ; 2 bytes @ 0x9
   721  0029                     	ds	1
   722  002A                     Lcd_Cmd@a:
   723  002A                     Lcd_Write_Char@y:	
   724                           ; 1 bytes @ 0xA
   725                           
   726                           
   727                           ; 1 bytes @ 0xA
   728  002A                     	ds	1
   729  002B                     ??_Lcd_Clear:
   730  002B                     ?_Lcd_Set_Cursor:	
   731                           ; 1 bytes @ 0xB
   732                           
   733  002B                     ??_Lcd_Init:	
   734                           ; 1 bytes @ 0xB
   735                           
   736  002B                     ??___lwdiv:	
   737                           ; 1 bytes @ 0xB
   738                           
   739  002B                     ??___xxtofl:	
   740                           ; 1 bytes @ 0xB
   741                           
   742  002B                     Lcd_Set_Cursor@b:	
   743                           ; 1 bytes @ 0xB
   744                           
   745  002B                     Lcd_Write_Char@a:	
   746                           ; 1 bytes @ 0xB
   747                           
   748  002B                     __Umul8_16@product:	
   749                           ; 1 bytes @ 0xB
   750                           
   751                           
   752                           ; 2 bytes @ 0xB
   753  002B                     	ds	1
   754  002C                     ??_teclado:
   755  002C                     ??_Lcd_Set_Cursor:	
   756                           ; 1 bytes @ 0xC
   757                           
   758  002C                     ?_Lcd_Write_String:	
   759                           ; 1 bytes @ 0xC
   760                           
   761  002C                     Lcd_Write_String@a:	
   762                           ; 1 bytes @ 0xC
   763                           
   764  002C                     ___lwdiv@quotient:	
   765                           ; 2 bytes @ 0xC
   766                           
   767                           
   768                           ; 2 bytes @ 0xC
   769  002C                     	ds	1
   770  002D                     __Umul8_16@word_mpld:
   771                           
   772                           ; 2 bytes @ 0xD
   773  002D                     	ds	1
   774  002E                     ??_Lcd_Write_String:
   775  002E                     Lcd_Set_Cursor@a:	
   776                           ; 1 bytes @ 0xE
   777                           
   778  002E                     ___lwdiv@counter:	
   779                           ; 1 bytes @ 0xE
   780                           
   781                           
   782                           ; 1 bytes @ 0xE
   783  002E                     	ds	1
   784  002F                     ?___lwmod:
   785  002F                     Lcd_Set_Cursor@z:	
   786                           ; 2 bytes @ 0xF
   787                           
   788  002F                     __Umul8_16@multiplier:	
   789                           ; 1 bytes @ 0xF
   790                           
   791  002F                     ___xxtofl@sign:	
   792                           ; 1 bytes @ 0xF
   793                           
   794  002F                     ___lwmod@divisor:	
   795                           ; 1 bytes @ 0xF
   796                           
   797                           
   798                           ; 2 bytes @ 0xF
   799  002F                     	ds	1
   800  0030                     ?___flmul:
   801  0030                     Lcd_Set_Cursor@y:	
   802                           ; 4 bytes @ 0x10
   803                           
   804  0030                     ___xxtofl@exp:	
   805                           ; 1 bytes @ 0x10
   806                           
   807  0030                     ___flmul@b:	
   808                           ; 1 bytes @ 0x10
   809                           
   810                           
   811                           ; 4 bytes @ 0x10
   812  0030                     	ds	1
   813  0031                     Lcd_Set_Cursor@temp:
   814  0031                     Lcd_Write_String@i:	
   815                           ; 1 bytes @ 0x11
   816                           
   817  0031                     ___lwmod@dividend:	
   818                           ; 2 bytes @ 0x11
   819                           
   820  0031                     ___xxtofl@arg:	
   821                           ; 2 bytes @ 0x11
   822                           
   823                           
   824                           ; 4 bytes @ 0x11
   825  0031                     	ds	2
   826  0033                     ??___lwmod:
   827  0033                     ?_password_validator:	
   828                           ; 1 bytes @ 0x13
   829                           
   830                           
   831                           ; 2 bytes @ 0x13
   832  0033                     	ds	1
   833  0034                     ___lwmod@counter:
   834  0034                     ___flmul@a:	
   835                           ; 1 bytes @ 0x14
   836                           
   837                           
   838                           ; 4 bytes @ 0x14
   839  0034                     	ds	1
   840  0035                     ??_password_validator:
   841                           
   842                           ; 1 bytes @ 0x15
   843  0035                     	ds	3
   844  0038                     ??___flmul:
   845  0038                     password_validator@i:	
   846                           ; 1 bytes @ 0x18
   847                           
   848                           
   849                           ; 2 bytes @ 0x18
   850  0038                     	ds	2
   851  003A                     password_validator@i_496:
   852                           
   853                           ; 2 bytes @ 0x1A
   854  003A                     	ds	2
   855  003C                     ??_alarme:
   856                           
   857                           ; 1 bytes @ 0x1C
   858  003C                     	ds	1
   859  003D                     ___flmul@sign:
   860                           
   861                           ; 1 bytes @ 0x1D
   862  003D                     	ds	1
   863  003E                     ___flmul@grs:
   864                           
   865                           ; 4 bytes @ 0x1E
   866  003E                     	ds	1
   867  003F                     alarme@i:
   868                           
   869                           ; 2 bytes @ 0x1F
   870  003F                     	ds	3
   871  0042                     ___flmul@aexp:
   872                           
   873                           ; 1 bytes @ 0x22
   874  0042                     	ds	1
   875  0043                     ___flmul@bexp:
   876                           
   877                           ; 1 bytes @ 0x23
   878  0043                     	ds	1
   879  0044                     ___flmul@prod:
   880                           
   881                           ; 4 bytes @ 0x24
   882  0044                     	ds	4
   883  0048                     ___flmul@temp:
   884                           
   885                           ; 2 bytes @ 0x28
   886  0048                     	ds	2
   887  004A                     ?___fladd:
   888  004A                     ___fladd@b:	
   889                           ; 4 bytes @ 0x2A
   890                           
   891                           
   892                           ; 4 bytes @ 0x2A
   893  004A                     	ds	4
   894  004E                     ___fladd@a:
   895                           
   896                           ; 4 bytes @ 0x2E
   897  004E                     	ds	4
   898  0052                     ??___fladd:
   899                           
   900                           ; 1 bytes @ 0x32
   901  0052                     	ds	8
   902  005A                     ___fladd@signs:
   903                           
   904                           ; 1 bytes @ 0x3A
   905  005A                     	ds	1
   906  005B                     ___fladd@aexp:
   907                           
   908                           ; 1 bytes @ 0x3B
   909  005B                     	ds	1
   910  005C                     ___fladd@bexp:
   911                           
   912                           ; 1 bytes @ 0x3C
   913  005C                     	ds	1
   914  005D                     ___fladd@grs:
   915                           
   916                           ; 1 bytes @ 0x3D
   917  005D                     	ds	1
   918  005E                     ?___fltol:
   919  005E                     ___fltol@f1:	
   920                           ; 4 bytes @ 0x3E
   921                           
   922                           
   923                           ; 4 bytes @ 0x3E
   924  005E                     	ds	4
   925  0062                     ??_mapToCelsius:
   926                           
   927                           	psect	maintext
   928  0A5F                     __pmaintext:	
   929                           ; 1 bytes @ 0x42
   930 ;;
   931 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   932 ;;
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 69 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : B00/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0
   951 ;;      Temps:          0       0       3       0       0
   952 ;;      Totals:         0       0       3       0       0
   953 ;;Total ram usage:        3 bytes
   954 ;; Hardware stack levels required when called: 9
   955 ;; This function calls:
   956 ;;		_Lcd_Clear
   957 ;;		_Lcd_Init
   958 ;;		_Lcd_Set_Cursor
   959 ;;		_Lcd_Write_String
   960 ;;		_alarme
   961 ;;		_config
   962 ;;		_termometro
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _main
   970  0A5F                     _main:
   971  0A5F                     l3094:	
   972                           ;incstack = 0
   973 ;; hardware stack exceeded
   974                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   975                           
   976                           
   977                           ;main.c: 72:     config();
   978  0A5F  160A  118A  258F  120A  158A  	fcall	_config
   979                           
   980                           ;main.c: 74:     Lcd_Init();
   981  0A64  120A  158A  2165  120A  158A  	fcall	_Lcd_Init
   982                           
   983                           ;main.c: 75:     Lcd_Set_Cursor(1, 1);
   984  0A69  1283               	bcf	3,5	;RP0=0, select bank0
   985  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
   986  0A6B  01AB               	clrf	Lcd_Set_Cursor@b
   987  0A6C  0AAB               	incf	Lcd_Set_Cursor@b,f
   988  0A6D  3001               	movlw	1
   989  0A6E  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
   990  0A73                     l3096:
   991                           
   992                           ;main.c: 76:     Lcd_Write_String("Safe Home");
   993  0A73  3062               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   994  0A74  1283               	bcf	3,5	;RP0=0, select bank0
   995  0A75  1303               	bcf	3,6	;RP1=0, select bank0
   996  0A76  00AC               	movwf	Lcd_Write_String@a
   997  0A77  3080               	movlw	128
   998  0A78  00AD               	movwf	Lcd_Write_String@a+1
   999  0A79  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  1000  0A7E                     l3098:
  1001                           
  1002                           ;main.c: 77:     Lcd_Set_Cursor(2, 1);
  1003  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0A80  01AB               	clrf	Lcd_Set_Cursor@b
  1006  0A81  0AAB               	incf	Lcd_Set_Cursor@b,f
  1007  0A82  3002               	movlw	2
  1008  0A83  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  1009                           
  1010                           ;main.c: 78:     Lcd_Write_String("desativado! ");
  1011  0A88  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1012  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0A8B  00AC               	movwf	Lcd_Write_String@a
  1015  0A8C  3080               	movlw	128
  1016  0A8D  00AD               	movwf	Lcd_Write_String@a+1
  1017  0A8E  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  1018  0A93                     l3100:
  1019                           
  1020                           ;main.c: 80:     PORTDbits.RD0 = 0;
  1021  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0A95  1008               	bcf	8,0	;volatile
  1024  0A96                     l3102:
  1025                           
  1026                           ;main.c: 81:     PORTBbits.RB7 = 1;
  1027  0A96  1786               	bsf	6,7	;volatile
  1028  0A97                     l137:	
  1029                           ;main.c: 82:     while (1) {
  1030                           
  1031  0A97  0064               	clrwdt	;# 
  1032  0A98                     l3104:
  1033                           
  1034                           ;main.c: 84:         if (!PORTBbits.RB3) {
  1035  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0A9A  1986               	btfsc	6,3	;volatile
  1038  0A9B  2A9D               	goto	u3931
  1039  0A9C  2A9E               	goto	u3930
  1040  0A9D                     u3931:
  1041  0A9D  2A97               	goto	l137
  1042  0A9E                     u3930:
  1043  0A9E                     l3106:
  1044                           
  1045                           ;main.c: 85:             SH_ativo = 1;
  1046  0A9E  157C               	bsf	_SH_ativo/(0+8),_SH_ativo& (0+7)
  1047  0A9F                     l3108:
  1048                           
  1049                           ;main.c: 86:             Lcd_Clear();
  1050  0A9F  160A  118A  2573  120A  158A  	fcall	_Lcd_Clear
  1051                           
  1052                           ;main.c: 87:             Lcd_Set_Cursor(1, 1);
  1053  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0AA6  01AB               	clrf	Lcd_Set_Cursor@b
  1056  0AA7  0AAB               	incf	Lcd_Set_Cursor@b,f
  1057  0AA8  3001               	movlw	1
  1058  0AA9  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  1059  0AAE                     l3110:
  1060                           
  1061                           ;main.c: 88:             Lcd_Write_String("Safe Home");
  1062  0AAE  3062               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1063  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0AB1  00AC               	movwf	Lcd_Write_String@a
  1066  0AB2  3080               	movlw	128
  1067  0AB3  00AD               	movwf	Lcd_Write_String@a+1
  1068  0AB4  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  1069  0AB9                     l3112:
  1070                           
  1071                           ;main.c: 89:             Lcd_Set_Cursor(2, 1);
  1072  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0ABB  01AB               	clrf	Lcd_Set_Cursor@b
  1075  0ABC  0AAB               	incf	Lcd_Set_Cursor@b,f
  1076  0ABD  3002               	movlw	2
  1077  0ABE  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  1078                           
  1079                           ;main.c: 90:             Lcd_Write_String("foi ativado! ");
  1080  0AC3  303B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1081  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0AC6  00AC               	movwf	Lcd_Write_String@a
  1084  0AC7  3080               	movlw	128
  1085  0AC8  00AD               	movwf	Lcd_Write_String@a+1
  1086  0AC9  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  1087  0ACE                     l3114:
  1088                           
  1089                           ;main.c: 91:             Lcd_Set_Cursor(1, 1);
  1090  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0AD0  01AB               	clrf	Lcd_Set_Cursor@b
  1093  0AD1  0AAB               	incf	Lcd_Set_Cursor@b,f
  1094  0AD2  3001               	movlw	1
  1095  0AD3  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  1096  0AD8  0064               	clrwdt	;# 
  1097  0AD9                     l3116:
  1098                           
  1099                           ;main.c: 93:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1100  0AD9  3006               	movlw	6
  1101  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0ADB  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0ADC  00D1               	movwf	(??_main^(0+128)+2)
  1104  0ADD  3013               	movlw	19
  1105  0ADE  00D0               	movwf	(??_main^(0+128)+1)
  1106  0ADF  30AD               	movlw	173
  1107  0AE0  00CF               	movwf	??_main^(0+128)
  1108  0AE1                     u3957:
  1109  0AE1  0BCF               	decfsz	??_main^(0+128),f
  1110  0AE2  2AE1               	goto	u3957
  1111  0AE3  0BD0               	decfsz	(??_main^(0+128)+1),f
  1112  0AE4  2AE1               	goto	u3957
  1113  0AE5  0BD1               	decfsz	(??_main^(0+128)+2),f
  1114  0AE6  2AE1               	goto	u3957
  1115                           
  1116                           ;main.c: 94:             while (SH_ativo) {
  1117  0AE7  2AF3               	goto	l3120
  1118  0AE8                     l3118:
  1119                           
  1120                           ;main.c: 95:                 alarme();
  1121  0AE8  120A  158A  2399  120A  158A  	fcall	_alarme
  1122                           
  1123                           ;main.c: 96:                 termometro();
  1124  0AED  120A  158A  21C8  120A  158A  	fcall	_termometro
  1125  0AF2  0064               	clrwdt	;# 
  1126  0AF3                     l3120:
  1127                           
  1128                           ;main.c: 94:             while (SH_ativo) {
  1129  0AF3  197C               	btfsc	_SH_ativo/(0+8),_SH_ativo& (0+7)
  1130  0AF4  2AF6               	goto	u3941
  1131  0AF5  2AF7               	goto	u3940
  1132  0AF6                     u3941:
  1133  0AF6  2AE8               	goto	l3118
  1134  0AF7                     u3940:
  1135  0AF7  2A97               	goto	l137
  1136  0AF8  120A  118A  2812   	ljmp	start
  1137  0AFB                     __end_of_main:
  1138                           
  1139                           	psect	text1
  1140  09C8                     __ptext1:	
  1141 ;; *************** function _termometro *****************
  1142 ;; Defined at:
  1143 ;;		line 151 in file "main.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  buffer         20   27[BANK1 ] unsigned char [20]
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         0       0      20       0       0
  1159 ;;      Temps:          0       0       3       0       0
  1160 ;;      Totals:         0       0      23       0       0
  1161 ;;Total ram usage:       23 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 7
  1164 ;; This function calls:
  1165 ;;		_Lcd_Clear
  1166 ;;		_Lcd_Set_Cursor
  1167 ;;		_Lcd_Write_String
  1168 ;;		___xxtofl
  1169 ;;		_mapToCelsius
  1170 ;;		_sprintf
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _termometro
  1178  09C8                     _termometro:
  1179  09C8                     l3078:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _termometro: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1182                           
  1183  09C8  0064               	clrwdt	;# 
  1184  09C9                     l3080:
  1185                           
  1186                           ;main.c: 153:     char buffer[20];;main.c: 154:     Lcd_Clear();
  1187  09C9  160A  118A  2573  120A  158A  	fcall	_Lcd_Clear
  1188                           
  1189                           ;main.c: 155:     Lcd_Set_Cursor(1, 1);
  1190  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  1191  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  1192  09D0  01AB               	clrf	Lcd_Set_Cursor@b
  1193  09D1  0AAB               	incf	Lcd_Set_Cursor@b,f
  1194  09D2  3001               	movlw	1
  1195  09D3  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  1196  09D8                     l3082:
  1197                           
  1198                           ;main.c: 156:     Lcd_Write_String("Temp Atual:");
  1199  09D8  3056               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1200  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  1201  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  1202  09DB  00AC               	movwf	Lcd_Write_String@a
  1203  09DC  3080               	movlw	128
  1204  09DD  00AD               	movwf	Lcd_Write_String@a+1
  1205  09DE  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  1206  09E3                     l3084:
  1207                           
  1208                           ;main.c: 157:     Lcd_Set_Cursor(2, 1);
  1209  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  1210  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  1211  09E5  01AB               	clrf	Lcd_Set_Cursor@b
  1212  09E6  0AAB               	incf	Lcd_Set_Cursor@b,f
  1213  09E7  3002               	movlw	2
  1214  09E8  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  1215  09ED                     l3086:
  1216                           
  1217                           ;main.c: 159:     ADCON0bits.GO = 1;
  1218  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  1219  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  1220  09EF  151F               	bsf	31,2	;volatile
  1221  09F0                     l3088:
  1222                           
  1223                           ;main.c: 160:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1224  09F0  3005               	movlw	5
  1225  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  1226  09F2  1303               	bcf	3,6	;RP1=0, select bank1
  1227  09F3  00B8               	movwf	??_termometro^(0+128)
  1228  09F4                     u3967:
  1229  09F4  0BB8               	decfsz	??_termometro^(0+128),f
  1230  09F5  29F4               	goto	u3967
  1231  09F6  29F7               	nop2
  1232  09F7                     l3090:
  1233                           
  1234                           ;main.c: 161:     valor = ADRESH;
  1235  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  1236  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  1237  09F9  081E               	movf	30,w	;volatile
  1238  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  1239  09FB  1303               	bcf	3,6	;RP1=0, select bank1
  1240  09FC  00B8               	movwf	??_termometro^(0+128)
  1241  09FD  01B9               	clrf	(??_termometro^(0+128)+1)
  1242  09FE  0838               	movf	??_termometro^(0+128),w
  1243  09FF  00DA               	movwf	_valor^(0+128)
  1244  0A00  0839               	movf	(??_termometro+1)^(0+128),w
  1245  0A01  00DB               	movwf	(_valor+1)^(0+128)
  1246                           
  1247                           ;main.c: 162:     sprintf(buffer, "%d", mapToCelsius(valor));
  1248  0A02  3085               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1249  0A03  00B8               	movwf	??_termometro^(0+128)
  1250  0A04  0838               	movf	??_termometro^(0+128),w
  1251  0A05  00AB               	movwf	sprintf@f^(0+128)
  1252  0A06  085A               	movf	_valor^(0+128),w
  1253  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0A09  00A7               	movwf	___xxtofl@val
  1256  0A0A  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0A0B  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0A0C  085B               	movf	(_valor+1)^(0+128),w
  1259  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0A0F  00A8               	movwf	___xxtofl@val+1
  1262  0A10  3000               	movlw	0
  1263  0A11  1BA8               	btfsc	___xxtofl@val+1,7
  1264  0A12  30FF               	movlw	255
  1265  0A13  00A9               	movwf	___xxtofl@val+2
  1266  0A14  00AA               	movwf	___xxtofl@val+3
  1267  0A15  3001               	movlw	1
  1268  0A16  120A  118A  2723  120A  158A  	fcall	___xxtofl
  1269  0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0A1D  082A               	movf	?___xxtofl+3,w
  1272  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0A1F  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0A20  00AA               	movwf	(mapToCelsius@value+3)^(0+128)
  1275  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0A23  0829               	movf	?___xxtofl+2,w
  1278  0A24  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0A25  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0A26  00A9               	movwf	(mapToCelsius@value+2)^(0+128)
  1281  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0A29  0828               	movf	?___xxtofl+1,w
  1284  0A2A  1683               	bsf	3,5	;RP0=1, select bank1
  1285  0A2B  1303               	bcf	3,6	;RP1=0, select bank1
  1286  0A2C  00A8               	movwf	(mapToCelsius@value+1)^(0+128)
  1287  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0A2F  0827               	movf	?___xxtofl,w
  1290  0A30  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0A31  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0A32  00A7               	movwf	mapToCelsius@value^(0+128)
  1293  0A33  120A  158A  210D  120A  158A  	fcall	_mapToCelsius
  1294  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  1295  0A39  1303               	bcf	3,6	;RP1=0, select bank1
  1296  0A3A  0828               	movf	(?_mapToCelsius+1)^(0+128),w
  1297  0A3B  00AD               	movwf	((?_sprintf+1)^(0+128)+1)
  1298  0A3C  0827               	movf	?_mapToCelsius^(0+128),w
  1299  0A3D  00AC               	movwf	(?_sprintf^(0+128)+1)
  1300  0A3E  30BB               	movlw	(low (termometro@buffer| 0))& (0+255)
  1301  0A3F  120A  158A  24F2  120A  158A  	fcall	_sprintf
  1302                           
  1303                           ;main.c: 163:     Lcd_Write_String(buffer);
  1304  0A44  30BB               	movlw	(low (termometro@buffer| 0))& (0+255)
  1305  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0A47  00AC               	movwf	Lcd_Write_String@a
  1308  0A48  3000               	movlw	0
  1309  0A49  00AD               	movwf	Lcd_Write_String@a+1
  1310  0A4A  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  1311  0A4F  0064               	clrwdt	;# 
  1312  0A50                     l3092:
  1313                           
  1314                           ;main.c: 165:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1315  0A50  3003               	movlw	3
  1316  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  1317  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  1318  0A53  00BA               	movwf	(??_termometro^(0+128)+2)
  1319  0A54  308A               	movlw	138
  1320  0A55  00B9               	movwf	(??_termometro^(0+128)+1)
  1321  0A56  3055               	movlw	85
  1322  0A57  00B8               	movwf	??_termometro^(0+128)
  1323  0A58                     u3977:
  1324  0A58  0BB8               	decfsz	??_termometro^(0+128),f
  1325  0A59  2A58               	goto	u3977
  1326  0A5A  0BB9               	decfsz	(??_termometro^(0+128)+1),f
  1327  0A5B  2A58               	goto	u3977
  1328  0A5C  0BBA               	decfsz	(??_termometro^(0+128)+2),f
  1329  0A5D  2A58               	goto	u3977
  1330  0A5E                     l160:
  1331  0A5E  0008               	return
  1332  0A5F                     __end_of_termometro:
  1333                           
  1334                           	psect	text2
  1335  0CF2                     __ptext2:	
  1336 ;; *************** function _sprintf *****************
  1337 ;; Defined at:
  1338 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  sp              1    wreg     PTR unsigned char 
  1341 ;;		 -> termometro@buffer(20), 
  1342 ;;  f               1   11[BANK1 ] PTR const unsigned char 
  1343 ;;		 -> STR_8(3), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  1346 ;;		 -> termometro@buffer(20), 
  1347 ;;  tmpval          4    0        struct .
  1348 ;;  val             2   20[BANK1 ] unsigned int 
  1349 ;;  cp              2    0        PTR const unsigned char 
  1350 ;;  len             2    0        unsigned int 
  1351 ;;  c               1   23[BANK1 ] unsigned char 
  1352 ;;  prec            1   19[BANK1 ] char 
  1353 ;;  flag            1   18[BANK1 ] unsigned char 
  1354 ;;  ap              1   17[BANK1 ] PTR void [1]
  1355 ;;		 -> ?_sprintf(2), 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  2   11[BANK1 ] int 
  1358 ;; Registers used:
  1359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1365 ;;      Params:         0       0       3       0       0
  1366 ;;      Locals:         0       0       7       0       0
  1367 ;;      Temps:          0       0       3       0       0
  1368 ;;      Totals:         0       0      13       0       0
  1369 ;;Total ram usage:       13 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 5
  1372 ;; This function calls:
  1373 ;;		___lwdiv
  1374 ;;		___lwmod
  1375 ;; This function is called by:
  1376 ;;		_termometro
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _sprintf
  1382  0CF2                     _sprintf:
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1386                           ;sprintf@sp stored from wreg
  1387  0CF2  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0CF3  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0CF4  00B6               	movwf	sprintf@sp^(0+128)
  1390  0CF5                     l2700:
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1393  0CF5  30AC               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1394  0CF6  00AE               	movwf	??_sprintf^(0+128)
  1395  0CF7  082E               	movf	??_sprintf^(0+128),w
  1396  0CF8  00B1               	movwf	sprintf@ap^(0+128)
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1399  0CF9  2DD5               	goto	l2752
  1400  0CFA                     l2702:
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1403  0CFA  3025               	movlw	37
  1404  0CFB  0637               	xorwf	sprintf@c^(0+128),w
  1405  0CFC  1903               	btfsc	3,2
  1406  0CFD  2CFF               	goto	u3351
  1407  0CFE  2D00               	goto	u3350
  1408  0CFF                     u3351:
  1409  0CFF  2D0C               	goto	l2708
  1410  0D00                     u3350:
  1411  0D00                     l2704:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1414  0D00  0837               	movf	sprintf@c^(0+128),w
  1415  0D01  00AE               	movwf	??_sprintf^(0+128)
  1416  0D02  0836               	movf	sprintf@sp^(0+128),w
  1417  0D03  0084               	movwf	4
  1418  0D04  082E               	movf	??_sprintf^(0+128),w
  1419  0D05  1383               	bcf	3,7	;select IRP bank0
  1420  0D06  0080               	movwf	0
  1421  0D07                     l2706:
  1422  0D07  3001               	movlw	1
  1423  0D08  00AE               	movwf	??_sprintf^(0+128)
  1424  0D09  082E               	movf	??_sprintf^(0+128),w
  1425  0D0A  07B6               	addwf	sprintf@sp^(0+128),f
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1428  0D0B  2DD5               	goto	l2752
  1429  0D0C                     l2708:
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1432  0D0C  01B2               	clrf	sprintf@flag^(0+128)
  1433  0D0D                     l2712:	
  1434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1435                           
  1436  0D0D  3001               	movlw	1
  1437  0D0E  07AB               	addwf	sprintf@f^(0+128),f
  1438  0D0F  30FF               	movlw	-1
  1439  0D10  072B               	addwf	sprintf@f^(0+128),w
  1440  0D11  0084               	movwf	4
  1441  0D12  120A  158A  200A  120A  158A  	fcall	stringdir
  1442  0D17  00B7               	movwf	sprintf@c^(0+128)
  1443  0D18  00AE               	movwf	??_sprintf^(0+128)
  1444  0D19  01AF               	clrf	(??_sprintf^(0+128)+1)
  1445                           
  1446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 1, Range of values is 0 to 0
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            4     3 (average)
  1452                           ; direct_byte           11     8 (fixed)
  1453                           ; jumptable            260     6 (fixed)
  1454                           ;	Chosen strategy is simple_byte
  1455  0D1A  082F               	movf	(??_sprintf+1)^(0+128),w
  1456  0D1B  3A00               	xorlw	0	; case 0
  1457  0D1C  1903               	skipnz
  1458  0D1D  2D1F               	goto	l3142
  1459  0D1E  2DD5               	goto	l2752
  1460  0D1F                     l3142:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 3, Range of values is 0 to 105
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte           10     6 (average)
  1467                           ; jumptable            260     6 (fixed)
  1468                           ;	Chosen strategy is simple_byte
  1469  0D1F  082E               	movf	??_sprintf^(0+128),w
  1470  0D20  3A00               	xorlw	0	; case 0
  1471  0D21  1903               	skipnz
  1472  0D22  2DE7               	goto	l2754
  1473  0D23  3A64               	xorlw	100	; case 100
  1474  0D24  1903               	skipnz
  1475  0D25  2D2A               	goto	l2714
  1476  0D26  3A0D               	xorlw	13	; case 105
  1477  0D27  1903               	skipnz
  1478  0D28  2D2A               	goto	l2714
  1479  0D29  2DD5               	goto	l2752
  1480  0D2A                     l2714:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1483  0D2A  0831               	movf	sprintf@ap^(0+128),w
  1484  0D2B  0084               	movwf	4
  1485  0D2C  1383               	bcf	3,7	;select IRP bank0
  1486  0D2D  0800               	movf	0,w
  1487  0D2E  00B4               	movwf	sprintf@val^(0+128)
  1488  0D2F  0A84               	incf	4,f
  1489  0D30  0800               	movf	0,w
  1490  0D31  00B5               	movwf	(sprintf@val+1)^(0+128)
  1491  0D32                     l2716:
  1492  0D32  3002               	movlw	2
  1493  0D33  00AE               	movwf	??_sprintf^(0+128)
  1494  0D34  082E               	movf	??_sprintf^(0+128),w
  1495  0D35  07B1               	addwf	sprintf@ap^(0+128),f
  1496  0D36                     l2718:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1499  0D36  1FB5               	btfss	(sprintf@val+1)^(0+128),7
  1500  0D37  2D39               	goto	u3361
  1501  0D38  2D3A               	goto	u3360
  1502  0D39                     u3361:
  1503  0D39  2D43               	goto	l2724
  1504  0D3A                     u3360:
  1505  0D3A                     l2720:
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1508  0D3A  3003               	movlw	3
  1509  0D3B  00AE               	movwf	??_sprintf^(0+128)
  1510  0D3C  082E               	movf	??_sprintf^(0+128),w
  1511  0D3D  04B2               	iorwf	sprintf@flag^(0+128),f
  1512  0D3E                     l2722:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1515  0D3E  09B4               	comf	sprintf@val^(0+128),f
  1516  0D3F  09B5               	comf	(sprintf@val+1)^(0+128),f
  1517  0D40  0AB4               	incf	sprintf@val^(0+128),f
  1518  0D41  1903               	skipnz
  1519  0D42  0AB5               	incf	(sprintf@val+1)^(0+128),f
  1520  0D43                     l2724:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1523  0D43  01B7               	clrf	sprintf@c^(0+128)
  1524  0D44  0AB7               	incf	sprintf@c^(0+128),f
  1525  0D45                     l2730:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1528  0D45  0837               	movf	sprintf@c^(0+128),w
  1529  0D46  00AE               	movwf	??_sprintf^(0+128)
  1530  0D47  072E               	addwf	??_sprintf^(0+128),w
  1531  0D48  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1532  0D49  0084               	movwf	4
  1533  0D4A  120A  158A  200A  120A  158A  	fcall	stringdir
  1534  0D4F  00AF               	movwf	(??_sprintf+1)^(0+128)
  1535  0D50  120A  158A  200A  120A  158A  	fcall	stringdir
  1536  0D55  00B0               	movwf	((??_sprintf+1)^(0+128)+1)
  1537  0D56  0830               	movf	(??_sprintf+2)^(0+128),w
  1538  0D57  0235               	subwf	(sprintf@val+1)^(0+128),w
  1539  0D58  1D03               	skipz
  1540  0D59  2D5C               	goto	u3375
  1541  0D5A  082F               	movf	(??_sprintf+1)^(0+128),w
  1542  0D5B  0234               	subwf	sprintf@val^(0+128),w
  1543  0D5C                     u3375:
  1544  0D5C  1803               	skipnc
  1545  0D5D  2D5F               	goto	u3371
  1546  0D5E  2D60               	goto	u3370
  1547  0D5F                     u3371:
  1548  0D5F  2D61               	goto	l2734
  1549  0D60                     u3370:
  1550  0D60  2D6B               	goto	l2736
  1551  0D61                     l2734:
  1552  0D61  3001               	movlw	1
  1553  0D62  00AE               	movwf	??_sprintf^(0+128)
  1554  0D63  082E               	movf	??_sprintf^(0+128),w
  1555  0D64  07B7               	addwf	sprintf@c^(0+128),f
  1556  0D65  3005               	movlw	5
  1557  0D66  0637               	xorwf	sprintf@c^(0+128),w
  1558  0D67  1D03               	btfss	3,2
  1559  0D68  2D6A               	goto	u3381
  1560  0D69  2D6B               	goto	u3380
  1561  0D6A                     u3381:
  1562  0D6A  2D45               	goto	l2730
  1563  0D6B                     u3380:
  1564  0D6B                     l2736:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1567  0D6B  0832               	movf	sprintf@flag^(0+128),w
  1568  0D6C  3903               	andlw	3
  1569  0D6D  1903               	btfsc	3,2
  1570  0D6E  2D70               	goto	u3391
  1571  0D6F  2D71               	goto	u3390
  1572  0D70                     u3391:
  1573  0D70  2D7C               	goto	l2742
  1574  0D71                     u3390:
  1575  0D71                     l2738:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1578  0D71  302D               	movlw	45
  1579  0D72  00AE               	movwf	??_sprintf^(0+128)
  1580  0D73  0836               	movf	sprintf@sp^(0+128),w
  1581  0D74  0084               	movwf	4
  1582  0D75  082E               	movf	??_sprintf^(0+128),w
  1583  0D76  1383               	bcf	3,7	;select IRP bank0
  1584  0D77  0080               	movwf	0
  1585  0D78                     l2740:
  1586  0D78  3001               	movlw	1
  1587  0D79  00AE               	movwf	??_sprintf^(0+128)
  1588  0D7A  082E               	movf	??_sprintf^(0+128),w
  1589  0D7B  07B6               	addwf	sprintf@sp^(0+128),f
  1590  0D7C                     l2742:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1593  0D7C  0837               	movf	sprintf@c^(0+128),w
  1594  0D7D  00AE               	movwf	??_sprintf^(0+128)
  1595  0D7E  082E               	movf	??_sprintf^(0+128),w
  1596  0D7F  00B3               	movwf	sprintf@prec^(0+128)
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1599  0D80  2DCC               	goto	l2750
  1600  0D81                     l2744:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1603  0D81  300A               	movlw	10
  1604  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0D84  00AF               	movwf	___lwmod@divisor
  1607  0D85  3000               	movlw	0
  1608  0D86  00B0               	movwf	___lwmod@divisor+1
  1609  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0D89  0833               	movf	sprintf@prec^(0+128),w
  1612  0D8A  00AE               	movwf	??_sprintf^(0+128)
  1613  0D8B  072E               	addwf	??_sprintf^(0+128),w
  1614  0D8C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1615  0D8D  0084               	movwf	4
  1616  0D8E  120A  158A  200A  120A  158A  	fcall	stringdir
  1617  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0D95  00A7               	movwf	___lwdiv@divisor
  1620  0D96  120A  158A  200A  120A  158A  	fcall	stringdir
  1621  0D9B  00A8               	movwf	___lwdiv@divisor+1
  1622  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0D9E  0835               	movf	(sprintf@val+1)^(0+128),w
  1625  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0DA1  00AA               	movwf	___lwdiv@dividend+1
  1628  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0DA3  1303               	bcf	3,6	;RP1=0, select bank1
  1630  0DA4  0834               	movf	sprintf@val^(0+128),w
  1631  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0DA7  00A9               	movwf	___lwdiv@dividend
  1634  0DA8  160A  118A  2768  120A  158A  	fcall	___lwdiv
  1635  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0DAF  0828               	movf	?___lwdiv+1,w
  1638  0DB0  00B2               	movwf	___lwmod@dividend+1
  1639  0DB1  0827               	movf	?___lwdiv,w
  1640  0DB2  00B1               	movwf	___lwmod@dividend
  1641  0DB3  160A  118A  2667  120A  158A  	fcall	___lwmod
  1642  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0DBA  082F               	movf	?___lwmod,w
  1645  0DBB  3E30               	addlw	48
  1646  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  1648  0DBE  00AF               	movwf	(??_sprintf+1)^(0+128)
  1649  0DBF  082F               	movf	(??_sprintf+1)^(0+128),w
  1650  0DC0  00B7               	movwf	sprintf@c^(0+128)
  1651  0DC1                     l2746:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1654  0DC1  0837               	movf	sprintf@c^(0+128),w
  1655  0DC2  00AE               	movwf	??_sprintf^(0+128)
  1656  0DC3  0836               	movf	sprintf@sp^(0+128),w
  1657  0DC4  0084               	movwf	4
  1658  0DC5  082E               	movf	??_sprintf^(0+128),w
  1659  0DC6  1383               	bcf	3,7	;select IRP bank0
  1660  0DC7  0080               	movwf	0
  1661  0DC8                     l2748:
  1662  0DC8  3001               	movlw	1
  1663  0DC9  00AE               	movwf	??_sprintf^(0+128)
  1664  0DCA  082E               	movf	??_sprintf^(0+128),w
  1665  0DCB  07B6               	addwf	sprintf@sp^(0+128),f
  1666  0DCC                     l2750:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1669  0DCC  30FF               	movlw	255
  1670  0DCD  00AE               	movwf	??_sprintf^(0+128)
  1671  0DCE  082E               	movf	??_sprintf^(0+128),w
  1672  0DCF  07B3               	addwf	sprintf@prec^(0+128),f
  1673  0DD0  0A33               	incf	sprintf@prec^(0+128),w
  1674  0DD1  1D03               	btfss	3,2
  1675  0DD2  2DD4               	goto	u3401
  1676  0DD3  2DD5               	goto	u3400
  1677  0DD4                     u3401:
  1678  0DD4  2D81               	goto	l2744
  1679  0DD5                     u3400:
  1680  0DD5                     l2752:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1683  0DD5  3001               	movlw	1
  1684  0DD6  07AB               	addwf	sprintf@f^(0+128),f
  1685  0DD7  30FF               	movlw	-1
  1686  0DD8  072B               	addwf	sprintf@f^(0+128),w
  1687  0DD9  0084               	movwf	4
  1688  0DDA  120A  158A  200A  120A  158A  	fcall	stringdir
  1689  0DDF  00AE               	movwf	??_sprintf^(0+128)
  1690  0DE0  082E               	movf	??_sprintf^(0+128),w
  1691  0DE1  00B7               	movwf	sprintf@c^(0+128)
  1692  0DE2  0837               	movf	sprintf@c^(0+128),w
  1693  0DE3  1D03               	btfss	3,2
  1694  0DE4  2DE6               	goto	u3411
  1695  0DE5  2DE7               	goto	u3410
  1696  0DE6                     u3411:
  1697  0DE6  2CFA               	goto	l2702
  1698  0DE7                     u3410:
  1699  0DE7                     l2754:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1702  0DE7  0836               	movf	sprintf@sp^(0+128),w
  1703  0DE8  0084               	movwf	4
  1704  0DE9  1383               	bcf	3,7	;select IRP bank0
  1705  0DEA  0180               	clrf	0
  1706  0DEB                     l308:
  1707  0DEB  0008               	return
  1708  0DEC                     __end_of_sprintf:
  1709                           
  1710                           	psect	text3
  1711  1667                     __ptext3:	
  1712 ;; *************** function ___lwmod *****************
  1713 ;; Defined at:
  1714 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  divisor         2   15[BANK0 ] unsigned int 
  1717 ;;  dividend        2   17[BANK0 ] unsigned int 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  counter         1   20[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2   15[BANK0 ] unsigned int 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       4       0       0       0
  1730 ;;      Locals:         0       1       0       0       0
  1731 ;;      Temps:          0       1       0       0       0
  1732 ;;      Totals:         0       6       0       0       0
  1733 ;;Total ram usage:        6 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 4
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_sprintf
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function ___lwmod
  1745  1667                     ___lwmod:
  1746  1667                     l2074:	
  1747                           ;incstack = 0
  1748                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1749                           
  1750  1667  1283               	bcf	3,5	;RP0=0, select bank0
  1751  1668  1303               	bcf	3,6	;RP1=0, select bank0
  1752  1669  082F               	movf	___lwmod@divisor,w
  1753  166A  0430               	iorwf	___lwmod@divisor+1,w
  1754  166B  1903               	btfsc	3,2
  1755  166C  2E6E               	goto	u2241
  1756  166D  2E6F               	goto	u2240
  1757  166E                     u2241:
  1758  166E  2E9E               	goto	l2092
  1759  166F                     u2240:
  1760  166F                     l2076:
  1761  166F  01B4               	clrf	___lwmod@counter
  1762  1670  0AB4               	incf	___lwmod@counter,f
  1763  1671  2E7D               	goto	l2082
  1764  1672                     l2078:
  1765  1672  3001               	movlw	1
  1766  1673                     u2255:
  1767  1673  1003               	clrc
  1768  1674  0DAF               	rlf	___lwmod@divisor,f
  1769  1675  0DB0               	rlf	___lwmod@divisor+1,f
  1770  1676  3EFF               	addlw	-1
  1771  1677  1D03               	skipz
  1772  1678  2E73               	goto	u2255
  1773  1679                     l2080:
  1774  1679  3001               	movlw	1
  1775  167A  00B3               	movwf	??___lwmod
  1776  167B  0833               	movf	??___lwmod,w
  1777  167C  07B4               	addwf	___lwmod@counter,f
  1778  167D                     l2082:
  1779  167D  1FB0               	btfss	___lwmod@divisor+1,7
  1780  167E  2E80               	goto	u2261
  1781  167F  2E81               	goto	u2260
  1782  1680                     u2261:
  1783  1680  2E72               	goto	l2078
  1784  1681                     u2260:
  1785  1681                     l2084:
  1786  1681  0830               	movf	___lwmod@divisor+1,w
  1787  1682  0232               	subwf	___lwmod@dividend+1,w
  1788  1683  1D03               	skipz
  1789  1684  2E87               	goto	u2275
  1790  1685  082F               	movf	___lwmod@divisor,w
  1791  1686  0231               	subwf	___lwmod@dividend,w
  1792  1687                     u2275:
  1793  1687  1C03               	skipc
  1794  1688  2E8A               	goto	u2271
  1795  1689  2E8B               	goto	u2270
  1796  168A                     u2271:
  1797  168A  2E91               	goto	l2088
  1798  168B                     u2270:
  1799  168B                     l2086:
  1800  168B  082F               	movf	___lwmod@divisor,w
  1801  168C  02B1               	subwf	___lwmod@dividend,f
  1802  168D  0830               	movf	___lwmod@divisor+1,w
  1803  168E  1C03               	skipc
  1804  168F  03B2               	decf	___lwmod@dividend+1,f
  1805  1690  02B2               	subwf	___lwmod@dividend+1,f
  1806  1691                     l2088:
  1807  1691  3001               	movlw	1
  1808  1692                     u2285:
  1809  1692  1003               	clrc
  1810  1693  0CB0               	rrf	___lwmod@divisor+1,f
  1811  1694  0CAF               	rrf	___lwmod@divisor,f
  1812  1695  3EFF               	addlw	-1
  1813  1696  1D03               	skipz
  1814  1697  2E92               	goto	u2285
  1815  1698                     l2090:
  1816  1698  3001               	movlw	1
  1817  1699  02B4               	subwf	___lwmod@counter,f
  1818  169A  1D03               	btfss	3,2
  1819  169B  2E9D               	goto	u2291
  1820  169C  2E9E               	goto	u2290
  1821  169D                     u2291:
  1822  169D  2E81               	goto	l2084
  1823  169E                     u2290:
  1824  169E                     l2092:
  1825  169E  0832               	movf	___lwmod@dividend+1,w
  1826  169F  00B0               	movwf	?___lwmod+1
  1827  16A0  0831               	movf	___lwmod@dividend,w
  1828  16A1  00AF               	movwf	?___lwmod
  1829  16A2                     l594:
  1830  16A2  0008               	return
  1831  16A3                     __end_of___lwmod:
  1832                           
  1833                           	psect	text4
  1834  1768                     __ptext4:	
  1835 ;; *************** function ___lwdiv *****************
  1836 ;; Defined at:
  1837 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  divisor         2    7[BANK0 ] unsigned int 
  1840 ;;  dividend        2    9[BANK0 ] unsigned int 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  quotient        2   12[BANK0 ] unsigned int 
  1843 ;;  counter         1   14[BANK0 ] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  2    7[BANK0 ] unsigned int 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       4       0       0       0
  1854 ;;      Locals:         0       3       0       0       0
  1855 ;;      Temps:          0       1       0       0       0
  1856 ;;      Totals:         0       8       0       0       0
  1857 ;;Total ram usage:        8 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; Hardware stack levels required when called: 4
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_sprintf
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function ___lwdiv
  1869  1768                     ___lwdiv:
  1870  1768                     l2048:	
  1871                           ;incstack = 0
  1872                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1873                           
  1874  1768  1283               	bcf	3,5	;RP0=0, select bank0
  1875  1769  1303               	bcf	3,6	;RP1=0, select bank0
  1876  176A  01AC               	clrf	___lwdiv@quotient
  1877  176B  01AD               	clrf	___lwdiv@quotient+1
  1878  176C                     l2050:
  1879  176C  0827               	movf	___lwdiv@divisor,w
  1880  176D  0428               	iorwf	___lwdiv@divisor+1,w
  1881  176E  1903               	btfsc	3,2
  1882  176F  2F71               	goto	u2171
  1883  1770  2F72               	goto	u2170
  1884  1771                     u2171:
  1885  1771  2FA9               	goto	l2070
  1886  1772                     u2170:
  1887  1772                     l2052:
  1888  1772  01AE               	clrf	___lwdiv@counter
  1889  1773  0AAE               	incf	___lwdiv@counter,f
  1890  1774  2F80               	goto	l2058
  1891  1775                     l2054:
  1892  1775  3001               	movlw	1
  1893  1776                     u2185:
  1894  1776  1003               	clrc
  1895  1777  0DA7               	rlf	___lwdiv@divisor,f
  1896  1778  0DA8               	rlf	___lwdiv@divisor+1,f
  1897  1779  3EFF               	addlw	-1
  1898  177A  1D03               	skipz
  1899  177B  2F76               	goto	u2185
  1900  177C                     l2056:
  1901  177C  3001               	movlw	1
  1902  177D  00AB               	movwf	??___lwdiv
  1903  177E  082B               	movf	??___lwdiv,w
  1904  177F  07AE               	addwf	___lwdiv@counter,f
  1905  1780                     l2058:
  1906  1780  1FA8               	btfss	___lwdiv@divisor+1,7
  1907  1781  2F83               	goto	u2191
  1908  1782  2F84               	goto	u2190
  1909  1783                     u2191:
  1910  1783  2F75               	goto	l2054
  1911  1784                     u2190:
  1912  1784                     l2060:
  1913  1784  3001               	movlw	1
  1914  1785                     u2205:
  1915  1785  1003               	clrc
  1916  1786  0DAC               	rlf	___lwdiv@quotient,f
  1917  1787  0DAD               	rlf	___lwdiv@quotient+1,f
  1918  1788  3EFF               	addlw	-1
  1919  1789  1D03               	skipz
  1920  178A  2F85               	goto	u2205
  1921  178B  0828               	movf	___lwdiv@divisor+1,w
  1922  178C  022A               	subwf	___lwdiv@dividend+1,w
  1923  178D  1D03               	skipz
  1924  178E  2F91               	goto	u2215
  1925  178F  0827               	movf	___lwdiv@divisor,w
  1926  1790  0229               	subwf	___lwdiv@dividend,w
  1927  1791                     u2215:
  1928  1791  1C03               	skipc
  1929  1792  2F94               	goto	u2211
  1930  1793  2F95               	goto	u2210
  1931  1794                     u2211:
  1932  1794  2F9C               	goto	l2066
  1933  1795                     u2210:
  1934  1795                     l2062:
  1935  1795  0827               	movf	___lwdiv@divisor,w
  1936  1796  02A9               	subwf	___lwdiv@dividend,f
  1937  1797  0828               	movf	___lwdiv@divisor+1,w
  1938  1798  1C03               	skipc
  1939  1799  03AA               	decf	___lwdiv@dividend+1,f
  1940  179A  02AA               	subwf	___lwdiv@dividend+1,f
  1941  179B                     l2064:
  1942  179B  142C               	bsf	___lwdiv@quotient,0
  1943  179C                     l2066:
  1944  179C  3001               	movlw	1
  1945  179D                     u2225:
  1946  179D  1003               	clrc
  1947  179E  0CA8               	rrf	___lwdiv@divisor+1,f
  1948  179F  0CA7               	rrf	___lwdiv@divisor,f
  1949  17A0  3EFF               	addlw	-1
  1950  17A1  1D03               	skipz
  1951  17A2  2F9D               	goto	u2225
  1952  17A3                     l2068:
  1953  17A3  3001               	movlw	1
  1954  17A4  02AE               	subwf	___lwdiv@counter,f
  1955  17A5  1D03               	btfss	3,2
  1956  17A6  2FA8               	goto	u2231
  1957  17A7  2FA9               	goto	u2230
  1958  17A8                     u2231:
  1959  17A8  2F84               	goto	l2060
  1960  17A9                     u2230:
  1961  17A9                     l2070:
  1962  17A9  082D               	movf	___lwdiv@quotient+1,w
  1963  17AA  00A8               	movwf	?___lwdiv+1
  1964  17AB  082C               	movf	___lwdiv@quotient,w
  1965  17AC  00A7               	movwf	?___lwdiv
  1966  17AD                     l584:
  1967  17AD  0008               	return
  1968  17AE                     __end_of___lwdiv:
  1969                           
  1970                           	psect	text5
  1971  090D                     __ptext5:	
  1972 ;; *************** function _mapToCelsius *****************
  1973 ;; Defined at:
  1974 ;;		line 46 in file "main.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  value           4    7[BANK1 ] unsigned int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2    7[BANK1 ] int 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       0       4       0       0
  1989 ;;      Locals:         0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0
  1991 ;;      Totals:         0       0       4       0       0
  1992 ;;Total ram usage:        4 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 6
  1995 ;; This function calls:
  1996 ;;		___fladd
  1997 ;;		___flmul
  1998 ;;		___fltol
  1999 ;; This function is called by:
  2000 ;;		_termometro
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _mapToCelsius
  2006  090D                     _mapToCelsius:
  2007  090D                     l3074:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _mapToCelsius: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2010                           
  2011                           
  2012                           ;main.c: 47:     return ( -55.0 + ((150.0 + 55.0) / (255.0 - 0.0)) * (value - 0.0));
  2013  090D  1683               	bsf	3,5	;RP0=1, select bank1
  2014  090E  1303               	bcf	3,6	;RP1=0, select bank1
  2015  090F  082A               	movf	(mapToCelsius@value+3)^(0+128),w
  2016  0910  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0911  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0912  00B7               	movwf	___flmul@a+3
  2019  0913  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0914  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0915  0829               	movf	(mapToCelsius@value+2)^(0+128),w
  2022  0916  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0917  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0918  00B6               	movwf	___flmul@a+2
  2025  0919  1683               	bsf	3,5	;RP0=1, select bank1
  2026  091A  1303               	bcf	3,6	;RP1=0, select bank1
  2027  091B  0828               	movf	(mapToCelsius@value+1)^(0+128),w
  2028  091C  1283               	bcf	3,5	;RP0=0, select bank0
  2029  091D  1303               	bcf	3,6	;RP1=0, select bank0
  2030  091E  00B5               	movwf	___flmul@a+1
  2031  091F  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0920  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0921  0827               	movf	mapToCelsius@value^(0+128),w
  2034  0922  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0923  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0924  00B4               	movwf	___flmul@a
  2037  0925  303F               	movlw	63
  2038  0926  00B3               	movwf	___flmul@b+3
  2039  0927  304D               	movlw	77
  2040  0928  00B2               	movwf	___flmul@b+2
  2041  0929  30CD               	movlw	205
  2042  092A  00B1               	movwf	___flmul@b+1
  2043  092B  30CE               	movlw	206
  2044  092C  00B0               	movwf	___flmul@b
  2045  092D  120A  118A  202E  120A  158A  	fcall	___flmul
  2046  0932  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0933  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0934  0833               	movf	?___flmul+3,w
  2049  0935  00D1               	movwf	___fladd@a+3
  2050  0936  0832               	movf	?___flmul+2,w
  2051  0937  00D0               	movwf	___fladd@a+2
  2052  0938  0831               	movf	?___flmul+1,w
  2053  0939  00CF               	movwf	___fladd@a+1
  2054  093A  0830               	movf	?___flmul,w
  2055  093B  00CE               	movwf	___fladd@a
  2056  093C  30C2               	movlw	194
  2057  093D  00CD               	movwf	___fladd@b+3
  2058  093E  305C               	movlw	92
  2059  093F  00CC               	movwf	___fladd@b+2
  2060  0940  3000               	movlw	0
  2061  0941  00CB               	movwf	___fladd@b+1
  2062  0942  3000               	movlw	0
  2063  0943  00CA               	movwf	___fladd@b
  2064  0944  120A  118A  238F  120A  158A  	fcall	___fladd
  2065  0949  1283               	bcf	3,5	;RP0=0, select bank0
  2066  094A  1303               	bcf	3,6	;RP1=0, select bank0
  2067  094B  084D               	movf	?___fladd+3,w
  2068  094C  00E1               	movwf	___fltol@f1+3
  2069  094D  084C               	movf	?___fladd+2,w
  2070  094E  00E0               	movwf	___fltol@f1+2
  2071  094F  084B               	movf	?___fladd+1,w
  2072  0950  00DF               	movwf	___fltol@f1+1
  2073  0951  084A               	movf	?___fladd,w
  2074  0952  00DE               	movwf	___fltol@f1
  2075  0953  120A  158A  22FB  120A  158A  	fcall	___fltol
  2076  0958  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0959  1303               	bcf	3,6	;RP1=0, select bank0
  2078  095A  085F               	movf	?___fltol+1,w
  2079  095B  1683               	bsf	3,5	;RP0=1, select bank1
  2080  095C  1303               	bcf	3,6	;RP1=0, select bank1
  2081  095D  00A8               	movwf	(?_mapToCelsius+1)^(0+128)
  2082  095E  1283               	bcf	3,5	;RP0=0, select bank0
  2083  095F  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0960  085E               	movf	?___fltol,w
  2085  0961  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0962  1303               	bcf	3,6	;RP1=0, select bank1
  2087  0963  00A7               	movwf	?_mapToCelsius^(0+128)
  2088  0964                     l116:
  2089  0964  0008               	return
  2090  0965                     __end_of_mapToCelsius:
  2091                           
  2092                           	psect	text6
  2093  0AFB                     __ptext6:	
  2094 ;; *************** function ___fltol *****************
  2095 ;; Defined at:
  2096 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  f1              4   62[BANK0 ] int 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  exp1            1    6[BANK1 ] unsigned char 
  2101 ;;  sign1           1    5[BANK1 ] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  4   62[BANK0 ] long 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       4       0       0       0
  2112 ;;      Locals:         0       0       2       0       0
  2113 ;;      Temps:          0       0       5       0       0
  2114 ;;      Totals:         0       4       7       0       0
  2115 ;;Total ram usage:       11 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 4
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_mapToCelsius
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function ___fltol
  2127  0AFB                     ___fltol:
  2128  0AFB                     l3038:	
  2129                           ;incstack = 0
  2130                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2131                           
  2132  0AFB  1003               	clrc
  2133  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0AFE  0D60               	rlf	___fltol@f1+2,w
  2136  0AFF  0D61               	rlf	___fltol@f1+3,w
  2137  0B00  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0B01  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0B02  00A0               	movwf	??___fltol^(0+128)
  2140  0B03  0820               	movf	??___fltol^(0+128),w
  2141  0B04  00A6               	movwf	___fltol@exp1^(0+128)
  2142  0B05  0826               	movf	___fltol@exp1^(0+128),w
  2143  0B06  1D03               	btfss	3,2
  2144  0B07  2B09               	goto	u3831
  2145  0B08  2B0A               	goto	u3830
  2146  0B09                     u3831:
  2147  0B09  2B15               	goto	l3044
  2148  0B0A                     u3830:
  2149  0B0A                     l3040:
  2150  0B0A  3000               	movlw	0
  2151  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0B0D  00E1               	movwf	?___fltol+3
  2154  0B0E  3000               	movlw	0
  2155  0B0F  00E0               	movwf	?___fltol+2
  2156  0B10  3000               	movlw	0
  2157  0B11  00DF               	movwf	?___fltol+1
  2158  0B12  3000               	movlw	0
  2159  0B13  00DE               	movwf	?___fltol
  2160  0B14  2B98               	goto	l498
  2161  0B15                     l3044:
  2162  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0B17  085E               	movf	___fltol@f1,w
  2165  0B18  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0B1A  00A0               	movwf	??___fltol^(0+128)
  2168  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0B1D  085F               	movf	___fltol@f1+1,w
  2171  0B1E  1683               	bsf	3,5	;RP0=1, select bank1
  2172  0B1F  1303               	bcf	3,6	;RP1=0, select bank1
  2173  0B20  00A1               	movwf	(??___fltol^(0+128)+1)
  2174  0B21  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0B22  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0B23  0860               	movf	___fltol@f1+2,w
  2177  0B24  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0B25  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0B26  00A2               	movwf	(??___fltol^(0+128)+2)
  2180  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0B29  0861               	movf	___fltol@f1+3,w
  2183  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0B2C  00A3               	movwf	(??___fltol^(0+128)+3)
  2186  0B2D  301F               	movlw	31
  2187  0B2E                     u3845:
  2188  0B2E  1003               	clrc
  2189  0B2F  0CA3               	rrf	(??___fltol^(0+128)+3),f
  2190  0B30  0CA2               	rrf	(??___fltol^(0+128)+2),f
  2191  0B31  0CA1               	rrf	(??___fltol^(0+128)+1),f
  2192  0B32  0CA0               	rrf	??___fltol^(0+128),f
  2193  0B33                     u3840:
  2194  0B33  3EFF               	addlw	-1
  2195  0B34  1D03               	skipz
  2196  0B35  2B2E               	goto	u3845
  2197  0B36  0820               	movf	??___fltol^(0+128),w
  2198  0B37  00A4               	movwf	(??___fltol+4)^(0+128)
  2199  0B38  0824               	movf	(??___fltol+4)^(0+128),w
  2200  0B39  00A5               	movwf	___fltol@sign1^(0+128)
  2201  0B3A                     l3046:
  2202  0B3A  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0B3B  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0B3C  17E0               	bsf	___fltol@f1+2,7
  2205  0B3D                     l3048:
  2206  0B3D  30FF               	movlw	255
  2207  0B3E  05DE               	andwf	___fltol@f1,f
  2208  0B3F  30FF               	movlw	255
  2209  0B40  05DF               	andwf	___fltol@f1+1,f
  2210  0B41  30FF               	movlw	255
  2211  0B42  05E0               	andwf	___fltol@f1+2,f
  2212  0B43  3000               	movlw	0
  2213  0B44  05E1               	andwf	___fltol@f1+3,f
  2214  0B45                     l3050:
  2215  0B45  3096               	movlw	150
  2216  0B46  1683               	bsf	3,5	;RP0=1, select bank1
  2217  0B47  1303               	bcf	3,6	;RP1=0, select bank1
  2218  0B48  02A6               	subwf	___fltol@exp1^(0+128),f
  2219  0B49                     l3052:
  2220  0B49  1FA6               	btfss	___fltol@exp1^(0+128),7
  2221  0B4A  2B4C               	goto	u3851
  2222  0B4B  2B4D               	goto	u3850
  2223  0B4C                     u3851:
  2224  0B4C  2B6B               	goto	l3062
  2225  0B4D                     u3850:
  2226  0B4D                     l3054:
  2227  0B4D  0826               	movf	___fltol@exp1^(0+128),w
  2228  0B4E  3A80               	xorlw	128
  2229  0B4F  3E97               	addlw	151
  2230  0B50  1803               	skipnc
  2231  0B51  2B53               	goto	u3861
  2232  0B52  2B54               	goto	u3860
  2233  0B53                     u3861:
  2234  0B53  2B55               	goto	l3060
  2235  0B54                     u3860:
  2236  0B54  2B0A               	goto	l3040
  2237  0B55                     l3060:
  2238  0B55  3001               	movlw	1
  2239  0B56                     u3875:
  2240  0B56  1003               	clrc
  2241  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0B59  0CE1               	rrf	___fltol@f1+3,f
  2244  0B5A  0CE0               	rrf	___fltol@f1+2,f
  2245  0B5B  0CDF               	rrf	___fltol@f1+1,f
  2246  0B5C  0CDE               	rrf	___fltol@f1,f
  2247  0B5D  3EFF               	addlw	-1
  2248  0B5E  1D03               	skipz
  2249  0B5F  2B56               	goto	u3875
  2250  0B60  3001               	movlw	1
  2251  0B61  1683               	bsf	3,5	;RP0=1, select bank1
  2252  0B62  1303               	bcf	3,6	;RP1=0, select bank1
  2253  0B63  00A0               	movwf	??___fltol^(0+128)
  2254  0B64  0820               	movf	??___fltol^(0+128),w
  2255  0B65  07A6               	addwf	___fltol@exp1^(0+128),f
  2256  0B66  1D03               	btfss	3,2
  2257  0B67  2B69               	goto	u3881
  2258  0B68  2B6A               	goto	u3880
  2259  0B69                     u3881:
  2260  0B69  2B55               	goto	l3060
  2261  0B6A                     u3880:
  2262  0B6A  2B86               	goto	l3070
  2263  0B6B                     l3062:
  2264  0B6B  3020               	movlw	32
  2265  0B6C  0226               	subwf	___fltol@exp1^(0+128),w
  2266  0B6D  1C03               	skipc
  2267  0B6E  2B70               	goto	u3891
  2268  0B6F  2B71               	goto	u3890
  2269  0B70                     u3891:
  2270  0B70  2B81               	goto	l505
  2271  0B71                     u3890:
  2272  0B71  2B0A               	goto	l3040
  2273  0B72                     l3068:
  2274  0B72  3001               	movlw	1
  2275  0B73  00A0               	movwf	??___fltol^(0+128)
  2276  0B74                     u3905:
  2277  0B74  1003               	clrc
  2278  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0B77  0DDE               	rlf	___fltol@f1,f
  2281  0B78  0DDF               	rlf	___fltol@f1+1,f
  2282  0B79  0DE0               	rlf	___fltol@f1+2,f
  2283  0B7A  0DE1               	rlf	___fltol@f1+3,f
  2284  0B7B  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0B7C  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0B7D  0BA0               	decfsz	??___fltol^(0+128),f
  2287  0B7E  2B74               	goto	u3905
  2288  0B7F  3001               	movlw	1
  2289  0B80  02A6               	subwf	___fltol@exp1^(0+128),f
  2290  0B81                     l505:
  2291  0B81  0826               	movf	___fltol@exp1^(0+128),w
  2292  0B82  1D03               	btfss	3,2
  2293  0B83  2B85               	goto	u3911
  2294  0B84  2B86               	goto	u3910
  2295  0B85                     u3911:
  2296  0B85  2B72               	goto	l3068
  2297  0B86                     u3910:
  2298  0B86                     l3070:
  2299  0B86  0825               	movf	___fltol@sign1^(0+128),w
  2300  0B87  1903               	btfsc	3,2
  2301  0B88  2B8A               	goto	u3921
  2302  0B89  2B8B               	goto	u3920
  2303  0B8A                     u3921:
  2304  0B8A  2B98               	goto	l508
  2305  0B8B                     u3920:
  2306  0B8B                     l3072:
  2307  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0B8D  09DE               	comf	___fltol@f1,f
  2310  0B8E  09DF               	comf	___fltol@f1+1,f
  2311  0B8F  09E0               	comf	___fltol@f1+2,f
  2312  0B90  09E1               	comf	___fltol@f1+3,f
  2313  0B91  0ADE               	incf	___fltol@f1,f
  2314  0B92  1903               	skipnz
  2315  0B93  0ADF               	incf	___fltol@f1+1,f
  2316  0B94  1903               	skipnz
  2317  0B95  0AE0               	incf	___fltol@f1+2,f
  2318  0B96  1903               	skipnz
  2319  0B97  0AE1               	incf	___fltol@f1+3,f
  2320  0B98                     l508:
  2321  0B98                     l498:
  2322  0B98  0008               	return
  2323  0B99                     __end_of___fltol:
  2324                           
  2325                           	psect	text7
  2326  002E                     __ptext7:	
  2327 ;; *************** function ___flmul *****************
  2328 ;; Defined at:
  2329 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  b               4   16[BANK0 ] long 
  2332 ;;  a               4   20[BANK0 ] long 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  prod            4   36[BANK0 ] struct .
  2335 ;;  grs             4   30[BANK0 ] unsigned long 
  2336 ;;  temp            2   40[BANK0 ] struct .
  2337 ;;  bexp            1   35[BANK0 ] unsigned char 
  2338 ;;  aexp            1   34[BANK0 ] unsigned char 
  2339 ;;  sign            1   29[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  4   16[BANK0 ] unsigned char 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       8       0       0       0
  2350 ;;      Locals:         0      13       0       0       0
  2351 ;;      Temps:          0       5       0       0       0
  2352 ;;      Totals:         0      26       0       0       0
  2353 ;;Total ram usage:       26 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 5
  2356 ;; This function calls:
  2357 ;;		__Umul8_16
  2358 ;; This function is called by:
  2359 ;;		_mapToCelsius
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function ___flmul
  2365  002E                     ___flmul:
  2366  002E                     l2290:	
  2367                           ;incstack = 0
  2368                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2369                           
  2370  002E  1283               	bcf	3,5	;RP0=0, select bank0
  2371  002F  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0030  0833               	movf	___flmul@b+3,w
  2373  0031  3980               	andlw	128
  2374  0032  00B8               	movwf	??___flmul
  2375  0033  0838               	movf	??___flmul,w
  2376  0034  00BD               	movwf	___flmul@sign
  2377  0035                     l2292:
  2378  0035  0833               	movf	___flmul@b+3,w
  2379  0036  00B8               	movwf	??___flmul
  2380  0037  0738               	addwf	??___flmul,w
  2381  0038  00B9               	movwf	??___flmul+1
  2382  0039  0839               	movf	??___flmul+1,w
  2383  003A  00C3               	movwf	___flmul@bexp
  2384  003B                     l2294:
  2385  003B  1FB2               	btfss	___flmul@b+2,7
  2386  003C  283E               	goto	u2761
  2387  003D  283F               	goto	u2760
  2388  003E                     u2761:
  2389  003E  2840               	goto	l2298
  2390  003F                     u2760:
  2391  003F                     l2296:
  2392  003F  1443               	bsf	___flmul@bexp,0
  2393  0040                     l2298:
  2394  0040  0843               	movf	___flmul@bexp,w
  2395  0041  1903               	btfsc	3,2
  2396  0042  2844               	goto	u2771
  2397  0043  2845               	goto	u2770
  2398  0044                     u2771:
  2399  0044  2854               	goto	l2306
  2400  0045                     u2770:
  2401  0045                     l2300:
  2402  0045  0A43               	incf	___flmul@bexp,w
  2403  0046  1D03               	btfss	3,2
  2404  0047  2849               	goto	u2781
  2405  0048  284A               	goto	u2780
  2406  0049                     u2781:
  2407  0049  2852               	goto	l2304
  2408  004A                     u2780:
  2409  004A                     l2302:
  2410  004A  3000               	movlw	0
  2411  004B  00B3               	movwf	___flmul@b+3
  2412  004C  3000               	movlw	0
  2413  004D  00B2               	movwf	___flmul@b+2
  2414  004E  3000               	movlw	0
  2415  004F  00B1               	movwf	___flmul@b+1
  2416  0050  3000               	movlw	0
  2417  0051  00B0               	movwf	___flmul@b
  2418  0052                     l2304:
  2419  0052  17B2               	bsf	___flmul@b+2,7
  2420  0053  285C               	goto	l2308
  2421  0054                     l2306:
  2422  0054  3000               	movlw	0
  2423  0055  00B3               	movwf	___flmul@b+3
  2424  0056  3000               	movlw	0
  2425  0057  00B2               	movwf	___flmul@b+2
  2426  0058  3000               	movlw	0
  2427  0059  00B1               	movwf	___flmul@b+1
  2428  005A  3000               	movlw	0
  2429  005B  00B0               	movwf	___flmul@b
  2430  005C                     l2308:
  2431  005C  0837               	movf	___flmul@a+3,w
  2432  005D  3980               	andlw	128
  2433  005E  00B8               	movwf	??___flmul
  2434  005F  0838               	movf	??___flmul,w
  2435  0060  06BD               	xorwf	___flmul@sign,f
  2436  0061                     l2310:
  2437  0061  0837               	movf	___flmul@a+3,w
  2438  0062  00B8               	movwf	??___flmul
  2439  0063  0738               	addwf	??___flmul,w
  2440  0064  00B9               	movwf	??___flmul+1
  2441  0065  0839               	movf	??___flmul+1,w
  2442  0066  00C2               	movwf	___flmul@aexp
  2443  0067                     l2312:
  2444  0067  1FB6               	btfss	___flmul@a+2,7
  2445  0068  286A               	goto	u2791
  2446  0069  286B               	goto	u2790
  2447  006A                     u2791:
  2448  006A  286C               	goto	l2316
  2449  006B                     u2790:
  2450  006B                     l2314:
  2451  006B  1442               	bsf	___flmul@aexp,0
  2452  006C                     l2316:
  2453  006C  0842               	movf	___flmul@aexp,w
  2454  006D  1903               	btfsc	3,2
  2455  006E  2870               	goto	u2801
  2456  006F  2871               	goto	u2800
  2457  0070                     u2801:
  2458  0070  2880               	goto	l2324
  2459  0071                     u2800:
  2460  0071                     l2318:
  2461  0071  0A42               	incf	___flmul@aexp,w
  2462  0072  1D03               	btfss	3,2
  2463  0073  2875               	goto	u2811
  2464  0074  2876               	goto	u2810
  2465  0075                     u2811:
  2466  0075  287E               	goto	l2322
  2467  0076                     u2810:
  2468  0076                     l2320:
  2469  0076  3000               	movlw	0
  2470  0077  00B7               	movwf	___flmul@a+3
  2471  0078  3000               	movlw	0
  2472  0079  00B6               	movwf	___flmul@a+2
  2473  007A  3000               	movlw	0
  2474  007B  00B5               	movwf	___flmul@a+1
  2475  007C  3000               	movlw	0
  2476  007D  00B4               	movwf	___flmul@a
  2477  007E                     l2322:
  2478  007E  17B6               	bsf	___flmul@a+2,7
  2479  007F  2888               	goto	l2326
  2480  0080                     l2324:
  2481  0080  3000               	movlw	0
  2482  0081  00B7               	movwf	___flmul@a+3
  2483  0082  3000               	movlw	0
  2484  0083  00B6               	movwf	___flmul@a+2
  2485  0084  3000               	movlw	0
  2486  0085  00B5               	movwf	___flmul@a+1
  2487  0086  3000               	movlw	0
  2488  0087  00B4               	movwf	___flmul@a
  2489  0088                     l2326:
  2490  0088  0842               	movf	___flmul@aexp,w
  2491  0089  1903               	btfsc	3,2
  2492  008A  288C               	goto	u2821
  2493  008B  288D               	goto	u2820
  2494  008C                     u2821:
  2495  008C  2892               	goto	l2330
  2496  008D                     u2820:
  2497  008D                     l2328:
  2498  008D  0843               	movf	___flmul@bexp,w
  2499  008E  1D03               	btfss	3,2
  2500  008F  2891               	goto	u2831
  2501  0090  2892               	goto	u2830
  2502  0091                     u2831:
  2503  0091  289B               	goto	l2334
  2504  0092                     u2830:
  2505  0092                     l2330:
  2506  0092  3000               	movlw	0
  2507  0093  00B3               	movwf	?___flmul+3
  2508  0094  3000               	movlw	0
  2509  0095  00B2               	movwf	?___flmul+2
  2510  0096  3000               	movlw	0
  2511  0097  00B1               	movwf	?___flmul+1
  2512  0098  3000               	movlw	0
  2513  0099  00B0               	movwf	?___flmul
  2514  009A  2B8E               	goto	l701
  2515  009B                     l2334:
  2516  009B  0830               	movf	___flmul@b,w
  2517  009C  00B8               	movwf	??___flmul
  2518  009D  0838               	movf	??___flmul,w
  2519  009E  00A7               	movwf	__Umul8_16@multiplicand
  2520  009F  0836               	movf	___flmul@a+2,w
  2521  00A0  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2522  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  2523  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  2524  00A7  0828               	movf	?__Umul8_16+1,w
  2525  00A8  00C9               	movwf	___flmul@temp+1
  2526  00A9  0827               	movf	?__Umul8_16,w
  2527  00AA  00C8               	movwf	___flmul@temp
  2528  00AB                     l2336:
  2529  00AB  0848               	movf	___flmul@temp,w
  2530  00AC  00B8               	movwf	??___flmul
  2531  00AD  01B9               	clrf	??___flmul+1
  2532  00AE  01BA               	clrf	??___flmul+2
  2533  00AF  01BB               	clrf	??___flmul+3
  2534  00B0  083B               	movf	??___flmul+3,w
  2535  00B1  00C1               	movwf	___flmul@grs+3
  2536  00B2  083A               	movf	??___flmul+2,w
  2537  00B3  00C0               	movwf	___flmul@grs+2
  2538  00B4  0839               	movf	??___flmul+1,w
  2539  00B5  00BF               	movwf	___flmul@grs+1
  2540  00B6  0838               	movf	??___flmul,w
  2541  00B7  00BE               	movwf	___flmul@grs
  2542  00B8                     l2338:
  2543  00B8  0849               	movf	___flmul@temp+1,w
  2544  00B9  00B8               	movwf	??___flmul
  2545  00BA  01B9               	clrf	??___flmul+1
  2546  00BB  01BA               	clrf	??___flmul+2
  2547  00BC  01BB               	clrf	??___flmul+3
  2548  00BD  083B               	movf	??___flmul+3,w
  2549  00BE  00C7               	movwf	___flmul@prod+3
  2550  00BF  083A               	movf	??___flmul+2,w
  2551  00C0  00C6               	movwf	___flmul@prod+2
  2552  00C1  0839               	movf	??___flmul+1,w
  2553  00C2  00C5               	movwf	___flmul@prod+1
  2554  00C3  0838               	movf	??___flmul,w
  2555  00C4  00C4               	movwf	___flmul@prod
  2556  00C5  0831               	movf	___flmul@b+1,w
  2557  00C6  00B8               	movwf	??___flmul
  2558  00C7  0838               	movf	??___flmul,w
  2559  00C8  00A7               	movwf	__Umul8_16@multiplicand
  2560  00C9  0835               	movf	___flmul@a+1,w
  2561  00CA  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2562  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2563  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2564  00D1  0828               	movf	?__Umul8_16+1,w
  2565  00D2  00C9               	movwf	___flmul@temp+1
  2566  00D3  0827               	movf	?__Umul8_16,w
  2567  00D4  00C8               	movwf	___flmul@temp
  2568  00D5                     l2340:
  2569  00D5  0848               	movf	___flmul@temp,w
  2570  00D6  00B8               	movwf	??___flmul
  2571  00D7  01B9               	clrf	??___flmul+1
  2572  00D8  01BA               	clrf	??___flmul+2
  2573  00D9  01BB               	clrf	??___flmul+3
  2574  00DA  0838               	movf	??___flmul,w
  2575  00DB  07BE               	addwf	___flmul@grs,f
  2576  00DC  0839               	movf	??___flmul+1,w
  2577  00DD  1103               	clrz
  2578  00DE  1803               	skipnc
  2579  00DF  3E01               	addlw	1
  2580  00E0  1903               	skipnz
  2581  00E1  28E3               	goto	u2841
  2582  00E2  07BF               	addwf	___flmul@grs+1,f
  2583  00E3                     u2841:
  2584  00E3  083A               	movf	??___flmul+2,w
  2585  00E4  1103               	clrz
  2586  00E5  1803               	skipnc
  2587  00E6  3E01               	addlw	1
  2588  00E7  1903               	skipnz
  2589  00E8  28EA               	goto	u2842
  2590  00E9  07C0               	addwf	___flmul@grs+2,f
  2591  00EA                     u2842:
  2592  00EA  083B               	movf	??___flmul+3,w
  2593  00EB  1103               	clrz
  2594  00EC  1803               	skipnc
  2595  00ED  3E01               	addlw	1
  2596  00EE  1903               	skipnz
  2597  00EF  28F1               	goto	u2843
  2598  00F0  07C1               	addwf	___flmul@grs+3,f
  2599  00F1                     u2843:
  2600  00F1                     l2342:
  2601  00F1  0849               	movf	___flmul@temp+1,w
  2602  00F2  00B8               	movwf	??___flmul
  2603  00F3  01B9               	clrf	??___flmul+1
  2604  00F4  01BA               	clrf	??___flmul+2
  2605  00F5  01BB               	clrf	??___flmul+3
  2606  00F6  0838               	movf	??___flmul,w
  2607  00F7  07C4               	addwf	___flmul@prod,f
  2608  00F8  0839               	movf	??___flmul+1,w
  2609  00F9  1103               	clrz
  2610  00FA  1803               	skipnc
  2611  00FB  3E01               	addlw	1
  2612  00FC  1903               	skipnz
  2613  00FD  28FF               	goto	u2851
  2614  00FE  07C5               	addwf	___flmul@prod+1,f
  2615  00FF                     u2851:
  2616  00FF  083A               	movf	??___flmul+2,w
  2617  0100  1103               	clrz
  2618  0101  1803               	skipnc
  2619  0102  3E01               	addlw	1
  2620  0103  1903               	skipnz
  2621  0104  2906               	goto	u2852
  2622  0105  07C6               	addwf	___flmul@prod+2,f
  2623  0106                     u2852:
  2624  0106  083B               	movf	??___flmul+3,w
  2625  0107  1103               	clrz
  2626  0108  1803               	skipnc
  2627  0109  3E01               	addlw	1
  2628  010A  1903               	skipnz
  2629  010B  290D               	goto	u2853
  2630  010C  07C7               	addwf	___flmul@prod+3,f
  2631  010D                     u2853:
  2632  010D  0832               	movf	___flmul@b+2,w
  2633  010E  00B8               	movwf	??___flmul
  2634  010F  0838               	movf	??___flmul,w
  2635  0110  00A7               	movwf	__Umul8_16@multiplicand
  2636  0111  0834               	movf	___flmul@a,w
  2637  0112  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2638  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0119  0828               	movf	?__Umul8_16+1,w
  2641  011A  00C9               	movwf	___flmul@temp+1
  2642  011B  0827               	movf	?__Umul8_16,w
  2643  011C  00C8               	movwf	___flmul@temp
  2644  011D                     l2344:
  2645  011D  0848               	movf	___flmul@temp,w
  2646  011E  00B8               	movwf	??___flmul
  2647  011F  01B9               	clrf	??___flmul+1
  2648  0120  01BA               	clrf	??___flmul+2
  2649  0121  01BB               	clrf	??___flmul+3
  2650  0122  0838               	movf	??___flmul,w
  2651  0123  07BE               	addwf	___flmul@grs,f
  2652  0124  0839               	movf	??___flmul+1,w
  2653  0125  1103               	clrz
  2654  0126  1803               	skipnc
  2655  0127  3E01               	addlw	1
  2656  0128  1903               	skipnz
  2657  0129  292B               	goto	u2861
  2658  012A  07BF               	addwf	___flmul@grs+1,f
  2659  012B                     u2861:
  2660  012B  083A               	movf	??___flmul+2,w
  2661  012C  1103               	clrz
  2662  012D  1803               	skipnc
  2663  012E  3E01               	addlw	1
  2664  012F  1903               	skipnz
  2665  0130  2932               	goto	u2862
  2666  0131  07C0               	addwf	___flmul@grs+2,f
  2667  0132                     u2862:
  2668  0132  083B               	movf	??___flmul+3,w
  2669  0133  1103               	clrz
  2670  0134  1803               	skipnc
  2671  0135  3E01               	addlw	1
  2672  0136  1903               	skipnz
  2673  0137  2939               	goto	u2863
  2674  0138  07C1               	addwf	___flmul@grs+3,f
  2675  0139                     u2863:
  2676  0139                     l2346:
  2677  0139  0849               	movf	___flmul@temp+1,w
  2678  013A  00B8               	movwf	??___flmul
  2679  013B  01B9               	clrf	??___flmul+1
  2680  013C  01BA               	clrf	??___flmul+2
  2681  013D  01BB               	clrf	??___flmul+3
  2682  013E  0838               	movf	??___flmul,w
  2683  013F  07C4               	addwf	___flmul@prod,f
  2684  0140  0839               	movf	??___flmul+1,w
  2685  0141  1103               	clrz
  2686  0142  1803               	skipnc
  2687  0143  3E01               	addlw	1
  2688  0144  1903               	skipnz
  2689  0145  2947               	goto	u2871
  2690  0146  07C5               	addwf	___flmul@prod+1,f
  2691  0147                     u2871:
  2692  0147  083A               	movf	??___flmul+2,w
  2693  0148  1103               	clrz
  2694  0149  1803               	skipnc
  2695  014A  3E01               	addlw	1
  2696  014B  1903               	skipnz
  2697  014C  294E               	goto	u2872
  2698  014D  07C6               	addwf	___flmul@prod+2,f
  2699  014E                     u2872:
  2700  014E  083B               	movf	??___flmul+3,w
  2701  014F  1103               	clrz
  2702  0150  1803               	skipnc
  2703  0151  3E01               	addlw	1
  2704  0152  1903               	skipnz
  2705  0153  2955               	goto	u2873
  2706  0154  07C7               	addwf	___flmul@prod+3,f
  2707  0155                     u2873:
  2708  0155                     l2348:
  2709  0155  3008               	movlw	8
  2710  0156  00B8               	movwf	??___flmul
  2711  0157                     u2885:
  2712  0157  1003               	clrc
  2713  0158  0DBE               	rlf	___flmul@grs,f
  2714  0159  0DBF               	rlf	___flmul@grs+1,f
  2715  015A  0DC0               	rlf	___flmul@grs+2,f
  2716  015B  0DC1               	rlf	___flmul@grs+3,f
  2717  015C  0BB8               	decfsz	??___flmul,f
  2718  015D  2957               	goto	u2885
  2719  015E                     l2350:
  2720  015E  0831               	movf	___flmul@b+1,w
  2721  015F  00B8               	movwf	??___flmul
  2722  0160  0838               	movf	??___flmul,w
  2723  0161  00A7               	movwf	__Umul8_16@multiplicand
  2724  0162  0834               	movf	___flmul@a,w
  2725  0163  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2726  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2728  016A  0828               	movf	?__Umul8_16+1,w
  2729  016B  00C9               	movwf	___flmul@temp+1
  2730  016C  0827               	movf	?__Umul8_16,w
  2731  016D  00C8               	movwf	___flmul@temp
  2732  016E                     l2352:
  2733  016E  0848               	movf	___flmul@temp,w
  2734  016F  00B8               	movwf	??___flmul
  2735  0170  0849               	movf	___flmul@temp+1,w
  2736  0171  00B9               	movwf	??___flmul+1
  2737  0172  01BA               	clrf	??___flmul+2
  2738  0173  01BB               	clrf	??___flmul+3
  2739  0174  0838               	movf	??___flmul,w
  2740  0175  07BE               	addwf	___flmul@grs,f
  2741  0176  0839               	movf	??___flmul+1,w
  2742  0177  1103               	clrz
  2743  0178  1803               	skipnc
  2744  0179  3E01               	addlw	1
  2745  017A  1903               	skipnz
  2746  017B  297D               	goto	u2891
  2747  017C  07BF               	addwf	___flmul@grs+1,f
  2748  017D                     u2891:
  2749  017D  083A               	movf	??___flmul+2,w
  2750  017E  1103               	clrz
  2751  017F  1803               	skipnc
  2752  0180  3E01               	addlw	1
  2753  0181  1903               	skipnz
  2754  0182  2984               	goto	u2892
  2755  0183  07C0               	addwf	___flmul@grs+2,f
  2756  0184                     u2892:
  2757  0184  083B               	movf	??___flmul+3,w
  2758  0185  1103               	clrz
  2759  0186  1803               	skipnc
  2760  0187  3E01               	addlw	1
  2761  0188  1903               	skipnz
  2762  0189  298B               	goto	u2893
  2763  018A  07C1               	addwf	___flmul@grs+3,f
  2764  018B                     u2893:
  2765  018B                     l2354:
  2766  018B  0830               	movf	___flmul@b,w
  2767  018C  00B8               	movwf	??___flmul
  2768  018D  0838               	movf	??___flmul,w
  2769  018E  00A7               	movwf	__Umul8_16@multiplicand
  2770  018F  0835               	movf	___flmul@a+1,w
  2771  0190  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2772  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0197  0828               	movf	?__Umul8_16+1,w
  2775  0198  00C9               	movwf	___flmul@temp+1
  2776  0199  0827               	movf	?__Umul8_16,w
  2777  019A  00C8               	movwf	___flmul@temp
  2778  019B                     l2356:
  2779  019B  0848               	movf	___flmul@temp,w
  2780  019C  00B8               	movwf	??___flmul
  2781  019D  0849               	movf	___flmul@temp+1,w
  2782  019E  00B9               	movwf	??___flmul+1
  2783  019F  01BA               	clrf	??___flmul+2
  2784  01A0  01BB               	clrf	??___flmul+3
  2785  01A1  0838               	movf	??___flmul,w
  2786  01A2  07BE               	addwf	___flmul@grs,f
  2787  01A3  0839               	movf	??___flmul+1,w
  2788  01A4  1103               	clrz
  2789  01A5  1803               	skipnc
  2790  01A6  3E01               	addlw	1
  2791  01A7  1903               	skipnz
  2792  01A8  29AA               	goto	u2901
  2793  01A9  07BF               	addwf	___flmul@grs+1,f
  2794  01AA                     u2901:
  2795  01AA  083A               	movf	??___flmul+2,w
  2796  01AB  1103               	clrz
  2797  01AC  1803               	skipnc
  2798  01AD  3E01               	addlw	1
  2799  01AE  1903               	skipnz
  2800  01AF  29B1               	goto	u2902
  2801  01B0  07C0               	addwf	___flmul@grs+2,f
  2802  01B1                     u2902:
  2803  01B1  083B               	movf	??___flmul+3,w
  2804  01B2  1103               	clrz
  2805  01B3  1803               	skipnc
  2806  01B4  3E01               	addlw	1
  2807  01B5  1903               	skipnz
  2808  01B6  29B8               	goto	u2903
  2809  01B7  07C1               	addwf	___flmul@grs+3,f
  2810  01B8                     u2903:
  2811  01B8                     l2358:
  2812  01B8  3008               	movlw	8
  2813  01B9  00B8               	movwf	??___flmul
  2814  01BA                     u2915:
  2815  01BA  1003               	clrc
  2816  01BB  0DBE               	rlf	___flmul@grs,f
  2817  01BC  0DBF               	rlf	___flmul@grs+1,f
  2818  01BD  0DC0               	rlf	___flmul@grs+2,f
  2819  01BE  0DC1               	rlf	___flmul@grs+3,f
  2820  01BF  0BB8               	decfsz	??___flmul,f
  2821  01C0  29BA               	goto	u2915
  2822  01C1  0830               	movf	___flmul@b,w
  2823  01C2  00B8               	movwf	??___flmul
  2824  01C3  0838               	movf	??___flmul,w
  2825  01C4  00A7               	movwf	__Umul8_16@multiplicand
  2826  01C5  0834               	movf	___flmul@a,w
  2827  01C6  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2828  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2829  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2830  01CD  0828               	movf	?__Umul8_16+1,w
  2831  01CE  00C9               	movwf	___flmul@temp+1
  2832  01CF  0827               	movf	?__Umul8_16,w
  2833  01D0  00C8               	movwf	___flmul@temp
  2834  01D1                     l2360:
  2835  01D1  0848               	movf	___flmul@temp,w
  2836  01D2  00B8               	movwf	??___flmul
  2837  01D3  0849               	movf	___flmul@temp+1,w
  2838  01D4  00B9               	movwf	??___flmul+1
  2839  01D5  01BA               	clrf	??___flmul+2
  2840  01D6  01BB               	clrf	??___flmul+3
  2841  01D7  0838               	movf	??___flmul,w
  2842  01D8  07BE               	addwf	___flmul@grs,f
  2843  01D9  0839               	movf	??___flmul+1,w
  2844  01DA  1103               	clrz
  2845  01DB  1803               	skipnc
  2846  01DC  3E01               	addlw	1
  2847  01DD  1903               	skipnz
  2848  01DE  29E0               	goto	u2921
  2849  01DF  07BF               	addwf	___flmul@grs+1,f
  2850  01E0                     u2921:
  2851  01E0  083A               	movf	??___flmul+2,w
  2852  01E1  1103               	clrz
  2853  01E2  1803               	skipnc
  2854  01E3  3E01               	addlw	1
  2855  01E4  1903               	skipnz
  2856  01E5  29E7               	goto	u2922
  2857  01E6  07C0               	addwf	___flmul@grs+2,f
  2858  01E7                     u2922:
  2859  01E7  083B               	movf	??___flmul+3,w
  2860  01E8  1103               	clrz
  2861  01E9  1803               	skipnc
  2862  01EA  3E01               	addlw	1
  2863  01EB  1903               	skipnz
  2864  01EC  29EE               	goto	u2923
  2865  01ED  07C1               	addwf	___flmul@grs+3,f
  2866  01EE                     u2923:
  2867  01EE                     l2362:
  2868  01EE  0831               	movf	___flmul@b+1,w
  2869  01EF  00B8               	movwf	??___flmul
  2870  01F0  0838               	movf	??___flmul,w
  2871  01F1  00A7               	movwf	__Umul8_16@multiplicand
  2872  01F2  0836               	movf	___flmul@a+2,w
  2873  01F3  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2874  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2875  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2876  01FA  0828               	movf	?__Umul8_16+1,w
  2877  01FB  00C9               	movwf	___flmul@temp+1
  2878  01FC  0827               	movf	?__Umul8_16,w
  2879  01FD  00C8               	movwf	___flmul@temp
  2880  01FE  0848               	movf	___flmul@temp,w
  2881  01FF  00B8               	movwf	??___flmul
  2882  0200  0849               	movf	___flmul@temp+1,w
  2883  0201  00B9               	movwf	??___flmul+1
  2884  0202  01BA               	clrf	??___flmul+2
  2885  0203  01BB               	clrf	??___flmul+3
  2886  0204  0838               	movf	??___flmul,w
  2887  0205  07C4               	addwf	___flmul@prod,f
  2888  0206  0839               	movf	??___flmul+1,w
  2889  0207  1103               	clrz
  2890  0208  1803               	skipnc
  2891  0209  3E01               	addlw	1
  2892  020A  1903               	skipnz
  2893  020B  2A0D               	goto	u2931
  2894  020C  07C5               	addwf	___flmul@prod+1,f
  2895  020D                     u2931:
  2896  020D  083A               	movf	??___flmul+2,w
  2897  020E  1103               	clrz
  2898  020F  1803               	skipnc
  2899  0210  3E01               	addlw	1
  2900  0211  1903               	skipnz
  2901  0212  2A14               	goto	u2932
  2902  0213  07C6               	addwf	___flmul@prod+2,f
  2903  0214                     u2932:
  2904  0214  083B               	movf	??___flmul+3,w
  2905  0215  1103               	clrz
  2906  0216  1803               	skipnc
  2907  0217  3E01               	addlw	1
  2908  0218  1903               	skipnz
  2909  0219  2A1B               	goto	u2933
  2910  021A  07C7               	addwf	___flmul@prod+3,f
  2911  021B                     u2933:
  2912  021B                     l2364:
  2913  021B  0832               	movf	___flmul@b+2,w
  2914  021C  00B8               	movwf	??___flmul
  2915  021D  0838               	movf	??___flmul,w
  2916  021E  00A7               	movwf	__Umul8_16@multiplicand
  2917  021F  0835               	movf	___flmul@a+1,w
  2918  0220  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2919  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0227  0828               	movf	?__Umul8_16+1,w
  2922  0228  00C9               	movwf	___flmul@temp+1
  2923  0229  0827               	movf	?__Umul8_16,w
  2924  022A  00C8               	movwf	___flmul@temp
  2925  022B                     l2366:
  2926  022B  0848               	movf	___flmul@temp,w
  2927  022C  00B8               	movwf	??___flmul
  2928  022D  0849               	movf	___flmul@temp+1,w
  2929  022E  00B9               	movwf	??___flmul+1
  2930  022F  01BA               	clrf	??___flmul+2
  2931  0230  01BB               	clrf	??___flmul+3
  2932  0231  0838               	movf	??___flmul,w
  2933  0232  07C4               	addwf	___flmul@prod,f
  2934  0233  0839               	movf	??___flmul+1,w
  2935  0234  1103               	clrz
  2936  0235  1803               	skipnc
  2937  0236  3E01               	addlw	1
  2938  0237  1903               	skipnz
  2939  0238  2A3A               	goto	u2941
  2940  0239  07C5               	addwf	___flmul@prod+1,f
  2941  023A                     u2941:
  2942  023A  083A               	movf	??___flmul+2,w
  2943  023B  1103               	clrz
  2944  023C  1803               	skipnc
  2945  023D  3E01               	addlw	1
  2946  023E  1903               	skipnz
  2947  023F  2A41               	goto	u2942
  2948  0240  07C6               	addwf	___flmul@prod+2,f
  2949  0241                     u2942:
  2950  0241  083B               	movf	??___flmul+3,w
  2951  0242  1103               	clrz
  2952  0243  1803               	skipnc
  2953  0244  3E01               	addlw	1
  2954  0245  1903               	skipnz
  2955  0246  2A48               	goto	u2943
  2956  0247  07C7               	addwf	___flmul@prod+3,f
  2957  0248                     u2943:
  2958  0248  0832               	movf	___flmul@b+2,w
  2959  0249  00B8               	movwf	??___flmul
  2960  024A  0838               	movf	??___flmul,w
  2961  024B  00A7               	movwf	__Umul8_16@multiplicand
  2962  024C  0836               	movf	___flmul@a+2,w
  2963  024D  160A  118A  2607  120A  118A  	fcall	__Umul8_16
  2964  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0254  0828               	movf	?__Umul8_16+1,w
  2967  0255  00C9               	movwf	___flmul@temp+1
  2968  0256  0827               	movf	?__Umul8_16,w
  2969  0257  00C8               	movwf	___flmul@temp
  2970  0258                     l2368:
  2971  0258  0848               	movf	___flmul@temp,w
  2972  0259  00B8               	movwf	??___flmul
  2973  025A  0849               	movf	___flmul@temp+1,w
  2974  025B  00B9               	movwf	??___flmul+1
  2975  025C  01BA               	clrf	??___flmul+2
  2976  025D  01BB               	clrf	??___flmul+3
  2977  025E  3008               	movlw	8
  2978  025F                     u2955:
  2979  025F  1003               	clrc
  2980  0260  0DB8               	rlf	??___flmul,f
  2981  0261  0DB9               	rlf	??___flmul+1,f
  2982  0262  0DBA               	rlf	??___flmul+2,f
  2983  0263  0DBB               	rlf	??___flmul+3,f
  2984  0264                     u2950:
  2985  0264  3EFF               	addlw	-1
  2986  0265  1D03               	skipz
  2987  0266  2A5F               	goto	u2955
  2988  0267  0838               	movf	??___flmul,w
  2989  0268  07C4               	addwf	___flmul@prod,f
  2990  0269  0839               	movf	??___flmul+1,w
  2991  026A  1103               	clrz
  2992  026B  1803               	skipnc
  2993  026C  3E01               	addlw	1
  2994  026D  1903               	skipnz
  2995  026E  2A70               	goto	u2961
  2996  026F  07C5               	addwf	___flmul@prod+1,f
  2997  0270                     u2961:
  2998  0270  083A               	movf	??___flmul+2,w
  2999  0271  1103               	clrz
  3000  0272  1803               	skipnc
  3001  0273  3E01               	addlw	1
  3002  0274  1903               	skipnz
  3003  0275  2A77               	goto	u2962
  3004  0276  07C6               	addwf	___flmul@prod+2,f
  3005  0277                     u2962:
  3006  0277  083B               	movf	??___flmul+3,w
  3007  0278  1103               	clrz
  3008  0279  1803               	skipnc
  3009  027A  3E01               	addlw	1
  3010  027B  1903               	skipnz
  3011  027C  2A7E               	goto	u2963
  3012  027D  07C7               	addwf	___flmul@prod+3,f
  3013  027E                     u2963:
  3014  027E                     l2370:
  3015  027E  083E               	movf	___flmul@grs,w
  3016  027F  00B8               	movwf	??___flmul
  3017  0280  083F               	movf	___flmul@grs+1,w
  3018  0281  00B9               	movwf	??___flmul+1
  3019  0282  0840               	movf	___flmul@grs+2,w
  3020  0283  00BA               	movwf	??___flmul+2
  3021  0284  0841               	movf	___flmul@grs+3,w
  3022  0285  00BB               	movwf	??___flmul+3
  3023  0286  3018               	movlw	24
  3024  0287                     u2975:
  3025  0287  1003               	clrc
  3026  0288  0CBB               	rrf	??___flmul+3,f
  3027  0289  0CBA               	rrf	??___flmul+2,f
  3028  028A  0CB9               	rrf	??___flmul+1,f
  3029  028B  0CB8               	rrf	??___flmul,f
  3030  028C                     u2970:
  3031  028C  3EFF               	addlw	-1
  3032  028D  1D03               	skipz
  3033  028E  2A87               	goto	u2975
  3034  028F  0838               	movf	??___flmul,w
  3035  0290  07C4               	addwf	___flmul@prod,f
  3036  0291  0839               	movf	??___flmul+1,w
  3037  0292  1103               	clrz
  3038  0293  1803               	skipnc
  3039  0294  3E01               	addlw	1
  3040  0295  1903               	skipnz
  3041  0296  2A98               	goto	u2981
  3042  0297  07C5               	addwf	___flmul@prod+1,f
  3043  0298                     u2981:
  3044  0298  083A               	movf	??___flmul+2,w
  3045  0299  1103               	clrz
  3046  029A  1803               	skipnc
  3047  029B  3E01               	addlw	1
  3048  029C  1903               	skipnz
  3049  029D  2A9F               	goto	u2982
  3050  029E  07C6               	addwf	___flmul@prod+2,f
  3051  029F                     u2982:
  3052  029F  083B               	movf	??___flmul+3,w
  3053  02A0  1103               	clrz
  3054  02A1  1803               	skipnc
  3055  02A2  3E01               	addlw	1
  3056  02A3  1903               	skipnz
  3057  02A4  2AA6               	goto	u2983
  3058  02A5  07C7               	addwf	___flmul@prod+3,f
  3059  02A6                     u2983:
  3060  02A6                     l2372:
  3061  02A6  3008               	movlw	8
  3062  02A7  00B8               	movwf	??___flmul
  3063  02A8                     u2995:
  3064  02A8  1003               	clrc
  3065  02A9  0DBE               	rlf	___flmul@grs,f
  3066  02AA  0DBF               	rlf	___flmul@grs+1,f
  3067  02AB  0DC0               	rlf	___flmul@grs+2,f
  3068  02AC  0DC1               	rlf	___flmul@grs+3,f
  3069  02AD  0BB8               	decfsz	??___flmul,f
  3070  02AE  2AA8               	goto	u2995
  3071  02AF                     l2374:
  3072  02AF  0843               	movf	___flmul@bexp,w
  3073  02B0  0742               	addwf	___flmul@aexp,w
  3074  02B1  00B8               	movwf	??___flmul
  3075  02B2  01B9               	clrf	??___flmul+1
  3076  02B3  0DB9               	rlf	??___flmul+1,f
  3077  02B4  0838               	movf	??___flmul,w
  3078  02B5  3E82               	addlw	130
  3079  02B6  00C8               	movwf	___flmul@temp
  3080  02B7  0839               	movf	??___flmul+1,w
  3081  02B8  1803               	skipnc
  3082  02B9  3E01               	addlw	1
  3083  02BA  3EFF               	addlw	255
  3084  02BB  00C9               	movwf	___flmul@temp+1
  3085  02BC  2ADA               	goto	l2386
  3086  02BD                     l2376:
  3087  02BD  3001               	movlw	1
  3088  02BE  00B8               	movwf	??___flmul
  3089  02BF                     u3005:
  3090  02BF  1003               	clrc
  3091  02C0  0DC4               	rlf	___flmul@prod,f
  3092  02C1  0DC5               	rlf	___flmul@prod+1,f
  3093  02C2  0DC6               	rlf	___flmul@prod+2,f
  3094  02C3  0DC7               	rlf	___flmul@prod+3,f
  3095  02C4  0BB8               	decfsz	??___flmul,f
  3096  02C5  2ABF               	goto	u3005
  3097  02C6                     l2378:
  3098  02C6  1FC1               	btfss	___flmul@grs+3,7
  3099  02C7  2AC9               	goto	u3011
  3100  02C8  2ACA               	goto	u3010
  3101  02C9                     u3011:
  3102  02C9  2ACB               	goto	l2382
  3103  02CA                     u3010:
  3104  02CA                     l2380:
  3105  02CA  1444               	bsf	___flmul@prod,0
  3106  02CB                     l2382:
  3107  02CB  3001               	movlw	1
  3108  02CC  00B8               	movwf	??___flmul
  3109  02CD                     u3025:
  3110  02CD  1003               	clrc
  3111  02CE  0DBE               	rlf	___flmul@grs,f
  3112  02CF  0DBF               	rlf	___flmul@grs+1,f
  3113  02D0  0DC0               	rlf	___flmul@grs+2,f
  3114  02D1  0DC1               	rlf	___flmul@grs+3,f
  3115  02D2  0BB8               	decfsz	??___flmul,f
  3116  02D3  2ACD               	goto	u3025
  3117  02D4                     l2384:
  3118  02D4  30FF               	movlw	255
  3119  02D5  07C8               	addwf	___flmul@temp,f
  3120  02D6  1803               	skipnc
  3121  02D7  0AC9               	incf	___flmul@temp+1,f
  3122  02D8  30FF               	movlw	255
  3123  02D9  07C9               	addwf	___flmul@temp+1,f
  3124  02DA                     l2386:
  3125  02DA  1FC6               	btfss	___flmul@prod+2,7
  3126  02DB  2ADD               	goto	u3031
  3127  02DC  2ADE               	goto	u3030
  3128  02DD                     u3031:
  3129  02DD  2ABD               	goto	l2376
  3130  02DE                     u3030:
  3131  02DE                     l2388:
  3132  02DE  01C2               	clrf	___flmul@aexp
  3133  02DF                     l2390:
  3134  02DF  1FC1               	btfss	___flmul@grs+3,7
  3135  02E0  2AE2               	goto	u3041
  3136  02E1  2AE3               	goto	u3040
  3137  02E2                     u3041:
  3138  02E2  2AFF               	goto	l2398
  3139  02E3                     u3040:
  3140  02E3                     l2392:
  3141  02E3  30FF               	movlw	255
  3142  02E4  053E               	andwf	___flmul@grs,w
  3143  02E5  00B8               	movwf	??___flmul
  3144  02E6  30FF               	movlw	255
  3145  02E7  053F               	andwf	___flmul@grs+1,w
  3146  02E8  00B9               	movwf	??___flmul+1
  3147  02E9  30FF               	movlw	255
  3148  02EA  0540               	andwf	___flmul@grs+2,w
  3149  02EB  00BA               	movwf	??___flmul+2
  3150  02EC  307F               	movlw	127
  3151  02ED  0541               	andwf	___flmul@grs+3,w
  3152  02EE  00BB               	movwf	??___flmul+3
  3153  02EF  083B               	movf	??___flmul+3,w
  3154  02F0  043A               	iorwf	??___flmul+2,w
  3155  02F1  0439               	iorwf	??___flmul+1,w
  3156  02F2  0438               	iorwf	??___flmul,w
  3157  02F3  1903               	skipnz
  3158  02F4  2AF6               	goto	u3051
  3159  02F5  2AF7               	goto	u3050
  3160  02F6                     u3051:
  3161  02F6  2AFA               	goto	l707
  3162  02F7                     u3050:
  3163  02F7                     l2394:
  3164  02F7  01C2               	clrf	___flmul@aexp
  3165  02F8  0AC2               	incf	___flmul@aexp,f
  3166  02F9  2AFF               	goto	l2398
  3167  02FA                     l707:
  3168  02FA  1C44               	btfss	___flmul@prod,0
  3169  02FB  2AFD               	goto	u3061
  3170  02FC  2AFE               	goto	u3060
  3171  02FD                     u3061:
  3172  02FD  2AFF               	goto	l2398
  3173  02FE                     u3060:
  3174  02FE  2AF7               	goto	l2394
  3175  02FF                     l2398:
  3176  02FF  0842               	movf	___flmul@aexp,w
  3177  0300  1903               	btfsc	3,2
  3178  0301  2B03               	goto	u3071
  3179  0302  2B04               	goto	u3070
  3180  0303                     u3071:
  3181  0303  2B35               	goto	l2408
  3182  0304                     u3070:
  3183  0304                     l2400:
  3184  0304  3001               	movlw	1
  3185  0305  07C4               	addwf	___flmul@prod,f
  3186  0306  3000               	movlw	0
  3187  0307  1803               	skipnc
  3188  0308  3001               	movlw	1
  3189  0309  07C5               	addwf	___flmul@prod+1,f
  3190  030A  3000               	movlw	0
  3191  030B  1803               	skipnc
  3192  030C  3001               	movlw	1
  3193  030D  07C6               	addwf	___flmul@prod+2,f
  3194  030E  3000               	movlw	0
  3195  030F  1803               	skipnc
  3196  0310  3001               	movlw	1
  3197  0311  07C7               	addwf	___flmul@prod+3,f
  3198  0312                     l2402:
  3199  0312  1C47               	btfss	___flmul@prod+3,0
  3200  0313  2B15               	goto	u3081
  3201  0314  2B16               	goto	u3080
  3202  0315                     u3081:
  3203  0315  2B35               	goto	l2408
  3204  0316                     u3080:
  3205  0316                     l2404:
  3206  0316  0844               	movf	___flmul@prod,w
  3207  0317  00B8               	movwf	??___flmul
  3208  0318  0845               	movf	___flmul@prod+1,w
  3209  0319  00B9               	movwf	??___flmul+1
  3210  031A  0846               	movf	___flmul@prod+2,w
  3211  031B  00BA               	movwf	??___flmul+2
  3212  031C  0847               	movf	___flmul@prod+3,w
  3213  031D  00BB               	movwf	??___flmul+3
  3214  031E  3001               	movlw	1
  3215  031F  00BC               	movwf	??___flmul+4
  3216  0320                     u3095:
  3217  0320  0D3B               	rlf	??___flmul+3,w
  3218  0321  0CBB               	rrf	??___flmul+3,f
  3219  0322  0CBA               	rrf	??___flmul+2,f
  3220  0323  0CB9               	rrf	??___flmul+1,f
  3221  0324  0CB8               	rrf	??___flmul,f
  3222  0325                     u3090:
  3223  0325  0BBC               	decfsz	??___flmul+4,f
  3224  0326  2B20               	goto	u3095
  3225  0327  083B               	movf	??___flmul+3,w
  3226  0328  00C7               	movwf	___flmul@prod+3
  3227  0329  083A               	movf	??___flmul+2,w
  3228  032A  00C6               	movwf	___flmul@prod+2
  3229  032B  0839               	movf	??___flmul+1,w
  3230  032C  00C5               	movwf	___flmul@prod+1
  3231  032D  0838               	movf	??___flmul,w
  3232  032E  00C4               	movwf	___flmul@prod
  3233  032F                     l2406:
  3234  032F  3001               	movlw	1
  3235  0330  07C8               	addwf	___flmul@temp,f
  3236  0331  1803               	skipnc
  3237  0332  0AC9               	incf	___flmul@temp+1,f
  3238  0333  3000               	movlw	0
  3239  0334  07C9               	addwf	___flmul@temp+1,f
  3240  0335                     l2408:
  3241  0335  0849               	movf	___flmul@temp+1,w
  3242  0336  3A80               	xorlw	128
  3243  0337  00FF               	movwf	btemp+1
  3244  0338  3080               	movlw	128
  3245  0339  027F               	subwf	btemp+1,w
  3246  033A  1D03               	skipz
  3247  033B  2B3E               	goto	u3105
  3248  033C  30FF               	movlw	255
  3249  033D  0248               	subwf	___flmul@temp,w
  3250  033E                     u3105:
  3251  033E  1C03               	skipc
  3252  033F  2B41               	goto	u3101
  3253  0340  2B42               	goto	u3100
  3254  0341                     u3101:
  3255  0341  2B4D               	goto	l2412
  3256  0342                     u3100:
  3257  0342                     l2410:
  3258  0342  307F               	movlw	127
  3259  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0345  00C7               	movwf	___flmul@prod+3
  3262  0346  3080               	movlw	128
  3263  0347  00C6               	movwf	___flmul@prod+2
  3264  0348  3000               	movlw	0
  3265  0349  00C5               	movwf	___flmul@prod+1
  3266  034A  3000               	movlw	0
  3267  034B  00C4               	movwf	___flmul@prod
  3268  034C  2B82               	goto	l713
  3269  034D                     l2412:
  3270  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3271  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3272  034F  0849               	movf	___flmul@temp+1,w
  3273  0350  3A80               	xorlw	128
  3274  0351  00FF               	movwf	btemp+1
  3275  0352  3080               	movlw	128
  3276  0353  027F               	subwf	btemp+1,w
  3277  0354  1D03               	skipz
  3278  0355  2B58               	goto	u3115
  3279  0356  3001               	movlw	1
  3280  0357  0248               	subwf	___flmul@temp,w
  3281  0358                     u3115:
  3282  0358  1803               	skipnc
  3283  0359  2B5B               	goto	u3111
  3284  035A  2B5C               	goto	u3110
  3285  035B                     u3111:
  3286  035B  2B68               	goto	l2418
  3287  035C                     u3110:
  3288  035C                     l2414:
  3289  035C  3000               	movlw	0
  3290  035D  1283               	bcf	3,5	;RP0=0, select bank0
  3291  035E  1303               	bcf	3,6	;RP1=0, select bank0
  3292  035F  00C7               	movwf	___flmul@prod+3
  3293  0360  3000               	movlw	0
  3294  0361  00C6               	movwf	___flmul@prod+2
  3295  0362  3000               	movlw	0
  3296  0363  00C5               	movwf	___flmul@prod+1
  3297  0364  3000               	movlw	0
  3298  0365  00C4               	movwf	___flmul@prod
  3299  0366                     l2416:
  3300  0366  01BD               	clrf	___flmul@sign
  3301  0367  2B82               	goto	l713
  3302  0368                     l2418:
  3303  0368  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0369  1303               	bcf	3,6	;RP1=0, select bank0
  3305  036A  0848               	movf	___flmul@temp,w
  3306  036B  00B8               	movwf	??___flmul
  3307  036C  0838               	movf	??___flmul,w
  3308  036D  00C3               	movwf	___flmul@bexp
  3309  036E  30FF               	movlw	255
  3310  036F  05C4               	andwf	___flmul@prod,f
  3311  0370  30FF               	movlw	255
  3312  0371  05C5               	andwf	___flmul@prod+1,f
  3313  0372  307F               	movlw	127
  3314  0373  05C6               	andwf	___flmul@prod+2,f
  3315  0374  3000               	movlw	0
  3316  0375  05C7               	andwf	___flmul@prod+3,f
  3317  0376                     l2420:
  3318  0376  1C43               	btfss	___flmul@bexp,0
  3319  0377  2B79               	goto	u3121
  3320  0378  2B7A               	goto	u3120
  3321  0379                     u3121:
  3322  0379  2B7B               	goto	l2424
  3323  037A                     u3120:
  3324  037A                     l2422:
  3325  037A  17C6               	bsf	___flmul@prod+2,7
  3326  037B                     l2424:
  3327  037B  0843               	movf	___flmul@bexp,w
  3328  037C  00B8               	movwf	??___flmul
  3329  037D  1003               	clrc
  3330  037E  0C38               	rrf	??___flmul,w
  3331  037F  00B9               	movwf	??___flmul+1
  3332  0380  0839               	movf	??___flmul+1,w
  3333  0381  00C7               	movwf	___flmul@prod+3
  3334  0382                     l713:
  3335  0382  083D               	movf	___flmul@sign,w
  3336  0383  00B8               	movwf	??___flmul
  3337  0384  0838               	movf	??___flmul,w
  3338  0385  04C7               	iorwf	___flmul@prod+3,f
  3339  0386                     l2426:
  3340  0386  0847               	movf	___flmul@prod+3,w
  3341  0387  00B3               	movwf	?___flmul+3
  3342  0388  0846               	movf	___flmul@prod+2,w
  3343  0389  00B2               	movwf	?___flmul+2
  3344  038A  0845               	movf	___flmul@prod+1,w
  3345  038B  00B1               	movwf	?___flmul+1
  3346  038C  0844               	movf	___flmul@prod,w
  3347  038D  00B0               	movwf	?___flmul
  3348  038E                     l701:
  3349  038E  0008               	return
  3350  038F                     __end_of___flmul:
  3351                           
  3352                           	psect	text8
  3353  1607                     __ptext8:	
  3354 ;; *************** function __Umul8_16 *****************
  3355 ;; Defined at:
  3356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  multiplier      1    wreg     unsigned char 
  3359 ;;  multiplicand    1    7[BANK0 ] unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  multiplier      1   15[BANK0 ] unsigned char 
  3362 ;;  word_mpld       2   13[BANK0 ] unsigned int 
  3363 ;;  product         2   11[BANK0 ] unsigned int 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  2    7[BANK0 ] unsigned int 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3373 ;;      Params:         0       2       0       0       0
  3374 ;;      Locals:         0       5       0       0       0
  3375 ;;      Temps:          0       2       0       0       0
  3376 ;;      Totals:         0       9       0       0       0
  3377 ;;Total ram usage:        9 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 4
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		___flmul
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function __Umul8_16
  3389  1607                     __Umul8_16:
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3393                           ;__Umul8_16@multiplier stored from wreg
  3394  1607  1283               	bcf	3,5	;RP0=0, select bank0
  3395  1608  1303               	bcf	3,6	;RP1=0, select bank0
  3396  1609  00AF               	movwf	__Umul8_16@multiplier
  3397  160A                     l1968:
  3398  160A  01AB               	clrf	__Umul8_16@product
  3399  160B  01AC               	clrf	__Umul8_16@product+1
  3400  160C                     l1970:
  3401  160C  0827               	movf	__Umul8_16@multiplicand,w
  3402  160D  00A9               	movwf	??__Umul8_16
  3403  160E  01AA               	clrf	??__Umul8_16+1
  3404  160F  0829               	movf	??__Umul8_16,w
  3405  1610  00AD               	movwf	__Umul8_16@word_mpld
  3406  1611  082A               	movf	??__Umul8_16+1,w
  3407  1612  00AE               	movwf	__Umul8_16@word_mpld+1
  3408  1613                     l1972:
  3409  1613  1C2F               	btfss	__Umul8_16@multiplier,0
  3410  1614  2E16               	goto	u1971
  3411  1615  2E17               	goto	u1970
  3412  1616                     u1971:
  3413  1616  2E1D               	goto	l720
  3414  1617                     u1970:
  3415  1617                     l1974:
  3416  1617  082D               	movf	__Umul8_16@word_mpld,w
  3417  1618  07AB               	addwf	__Umul8_16@product,f
  3418  1619  1803               	skipnc
  3419  161A  0AAC               	incf	__Umul8_16@product+1,f
  3420  161B  082E               	movf	__Umul8_16@word_mpld+1,w
  3421  161C  07AC               	addwf	__Umul8_16@product+1,f
  3422  161D                     l720:
  3423  161D  3001               	movlw	1
  3424  161E                     u1985:
  3425  161E  1003               	clrc
  3426  161F  0DAD               	rlf	__Umul8_16@word_mpld,f
  3427  1620  0DAE               	rlf	__Umul8_16@word_mpld+1,f
  3428  1621  3EFF               	addlw	-1
  3429  1622  1D03               	skipz
  3430  1623  2E1E               	goto	u1985
  3431  1624  1003               	clrc
  3432  1625  0CAF               	rrf	__Umul8_16@multiplier,f
  3433  1626                     l1976:
  3434  1626  082F               	movf	__Umul8_16@multiplier,w
  3435  1627  1D03               	btfss	3,2
  3436  1628  2E2A               	goto	u1991
  3437  1629  2E2B               	goto	u1990
  3438  162A                     u1991:
  3439  162A  2E13               	goto	l1972
  3440  162B                     u1990:
  3441  162B                     l1978:
  3442  162B  082C               	movf	__Umul8_16@product+1,w
  3443  162C  00A8               	movwf	?__Umul8_16+1
  3444  162D  082B               	movf	__Umul8_16@product,w
  3445  162E  00A7               	movwf	?__Umul8_16
  3446  162F                     l722:
  3447  162F  0008               	return
  3448  1630                     __end_of__Umul8_16:
  3449                           
  3450                           	psect	text9
  3451  038F                     __ptext9:	
  3452 ;; *************** function ___fladd *****************
  3453 ;; Defined at:
  3454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  b               4   42[BANK0 ] unsigned int 
  3457 ;;  a               4   46[BANK0 ] unsigned int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  grs             1   61[BANK0 ] unsigned char 
  3460 ;;  bexp            1   60[BANK0 ] unsigned char 
  3461 ;;  aexp            1   59[BANK0 ] unsigned char 
  3462 ;;  signs           1   58[BANK0 ] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  4   42[BANK0 ] unsigned char 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, btemp+1
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       8       0       0       0
  3473 ;;      Locals:         0       4       0       0       0
  3474 ;;      Temps:          0       8       0       0       0
  3475 ;;      Totals:         0      20       0       0       0
  3476 ;;Total ram usage:       20 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 4
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_mapToCelsius
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function ___fladd
  3488  038F                     ___fladd:
  3489  038F                     l2096:	
  3490                           ;incstack = 0
  3491                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3492                           
  3493  038F  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0390  1303               	bcf	3,6	;RP1=0, select bank0
  3495  0391  084D               	movf	___fladd@b+3,w
  3496  0392  3980               	andlw	128
  3497  0393  00D2               	movwf	??___fladd
  3498  0394  0852               	movf	??___fladd,w
  3499  0395  00DA               	movwf	___fladd@signs
  3500  0396                     l2098:
  3501  0396  084D               	movf	___fladd@b+3,w
  3502  0397  00D2               	movwf	??___fladd
  3503  0398  0752               	addwf	??___fladd,w
  3504  0399  00D3               	movwf	??___fladd+1
  3505  039A  0853               	movf	??___fladd+1,w
  3506  039B  00DC               	movwf	___fladd@bexp
  3507  039C                     l2100:
  3508  039C  1FCC               	btfss	___fladd@b+2,7
  3509  039D  2B9F               	goto	u2301
  3510  039E  2BA0               	goto	u2300
  3511  039F                     u2301:
  3512  039F  2BA1               	goto	l2104
  3513  03A0                     u2300:
  3514  03A0                     l2102:
  3515  03A0  145C               	bsf	___fladd@bexp,0
  3516  03A1                     l2104:
  3517  03A1  085C               	movf	___fladd@bexp,w
  3518  03A2  1903               	btfsc	3,2
  3519  03A3  2BA5               	goto	u2311
  3520  03A4  2BA6               	goto	u2310
  3521  03A5                     u2311:
  3522  03A5  2BB6               	goto	l2114
  3523  03A6                     u2310:
  3524  03A6                     l2106:
  3525  03A6  0A5C               	incf	___fladd@bexp,w
  3526  03A7  1D03               	btfss	3,2
  3527  03A8  2BAA               	goto	u2321
  3528  03A9  2BAB               	goto	u2320
  3529  03AA                     u2321:
  3530  03AA  2BB3               	goto	l2110
  3531  03AB                     u2320:
  3532  03AB                     l2108:
  3533  03AB  3000               	movlw	0
  3534  03AC  00CD               	movwf	___fladd@b+3
  3535  03AD  3000               	movlw	0
  3536  03AE  00CC               	movwf	___fladd@b+2
  3537  03AF  3000               	movlw	0
  3538  03B0  00CB               	movwf	___fladd@b+1
  3539  03B1  3000               	movlw	0
  3540  03B2  00CA               	movwf	___fladd@b
  3541  03B3                     l2110:
  3542  03B3  17CC               	bsf	___fladd@b+2,7
  3543  03B4                     l2112:
  3544  03B4  01CD               	clrf	___fladd@b+3
  3545  03B5  2BBE               	goto	l2116
  3546  03B6                     l2114:
  3547  03B6  3000               	movlw	0
  3548  03B7  00CD               	movwf	___fladd@b+3
  3549  03B8  3000               	movlw	0
  3550  03B9  00CC               	movwf	___fladd@b+2
  3551  03BA  3000               	movlw	0
  3552  03BB  00CB               	movwf	___fladd@b+1
  3553  03BC  3000               	movlw	0
  3554  03BD  00CA               	movwf	___fladd@b
  3555  03BE                     l2116:
  3556  03BE  0851               	movf	___fladd@a+3,w
  3557  03BF  3980               	andlw	128
  3558  03C0  00D2               	movwf	??___fladd
  3559  03C1  0852               	movf	??___fladd,w
  3560  03C2  00DB               	movwf	___fladd@aexp
  3561  03C3                     l2118:
  3562  03C3  085B               	movf	___fladd@aexp,w
  3563  03C4  065A               	xorwf	___fladd@signs,w
  3564  03C5  1903               	skipnz
  3565  03C6  2BC8               	goto	u2331
  3566  03C7  2BC9               	goto	u2330
  3567  03C8                     u2331:
  3568  03C8  2BCA               	goto	l2122
  3569  03C9                     u2330:
  3570  03C9                     l2120:
  3571  03C9  175A               	bsf	___fladd@signs,6
  3572  03CA                     l2122:
  3573  03CA  0851               	movf	___fladd@a+3,w
  3574  03CB  00D2               	movwf	??___fladd
  3575  03CC  0752               	addwf	??___fladd,w
  3576  03CD  00D3               	movwf	??___fladd+1
  3577  03CE  0853               	movf	??___fladd+1,w
  3578  03CF  00DB               	movwf	___fladd@aexp
  3579  03D0                     l2124:
  3580  03D0  1FD0               	btfss	___fladd@a+2,7
  3581  03D1  2BD3               	goto	u2341
  3582  03D2  2BD4               	goto	u2340
  3583  03D3                     u2341:
  3584  03D3  2BD5               	goto	l2128
  3585  03D4                     u2340:
  3586  03D4                     l2126:
  3587  03D4  145B               	bsf	___fladd@aexp,0
  3588  03D5                     l2128:
  3589  03D5  085B               	movf	___fladd@aexp,w
  3590  03D6  1903               	btfsc	3,2
  3591  03D7  2BD9               	goto	u2351
  3592  03D8  2BDA               	goto	u2350
  3593  03D9                     u2351:
  3594  03D9  2BEA               	goto	l2138
  3595  03DA                     u2350:
  3596  03DA                     l2130:
  3597  03DA  0A5B               	incf	___fladd@aexp,w
  3598  03DB  1D03               	btfss	3,2
  3599  03DC  2BDE               	goto	u2361
  3600  03DD  2BDF               	goto	u2360
  3601  03DE                     u2361:
  3602  03DE  2BE7               	goto	l2134
  3603  03DF                     u2360:
  3604  03DF                     l2132:
  3605  03DF  3000               	movlw	0
  3606  03E0  00D1               	movwf	___fladd@a+3
  3607  03E1  3000               	movlw	0
  3608  03E2  00D0               	movwf	___fladd@a+2
  3609  03E3  3000               	movlw	0
  3610  03E4  00CF               	movwf	___fladd@a+1
  3611  03E5  3000               	movlw	0
  3612  03E6  00CE               	movwf	___fladd@a
  3613  03E7                     l2134:
  3614  03E7  17D0               	bsf	___fladd@a+2,7
  3615  03E8                     l2136:
  3616  03E8  01D1               	clrf	___fladd@a+3
  3617  03E9  2BF2               	goto	l605
  3618  03EA                     l2138:
  3619  03EA  3000               	movlw	0
  3620  03EB  00D1               	movwf	___fladd@a+3
  3621  03EC  3000               	movlw	0
  3622  03ED  00D0               	movwf	___fladd@a+2
  3623  03EE  3000               	movlw	0
  3624  03EF  00CF               	movwf	___fladd@a+1
  3625  03F0  3000               	movlw	0
  3626  03F1  00CE               	movwf	___fladd@a
  3627  03F2                     l605:
  3628  03F2  085C               	movf	___fladd@bexp,w
  3629  03F3  025B               	subwf	___fladd@aexp,w
  3630  03F4  1803               	skipnc
  3631  03F5  2BF7               	goto	u2371
  3632  03F6  2BF8               	goto	u2370
  3633  03F7                     u2371:
  3634  03F7  2C3C               	goto	l2174
  3635  03F8                     u2370:
  3636  03F8                     l2140:
  3637  03F8  1F5A               	btfss	___fladd@signs,6
  3638  03F9  2BFB               	goto	u2381
  3639  03FA  2BFC               	goto	u2380
  3640  03FB                     u2381:
  3641  03FB  2C00               	goto	l2144
  3642  03FC                     u2380:
  3643  03FC                     l2142:
  3644  03FC  3080               	movlw	128
  3645  03FD  00D2               	movwf	??___fladd
  3646  03FE  0852               	movf	??___fladd,w
  3647  03FF  06DA               	xorwf	___fladd@signs,f
  3648  0400                     l2144:
  3649  0400  085C               	movf	___fladd@bexp,w
  3650  0401  00D2               	movwf	??___fladd
  3651  0402  0852               	movf	??___fladd,w
  3652  0403  00DD               	movwf	___fladd@grs
  3653  0404                     l2146:
  3654  0404  085B               	movf	___fladd@aexp,w
  3655  0405  00D2               	movwf	??___fladd
  3656  0406  0852               	movf	??___fladd,w
  3657  0407  00DC               	movwf	___fladd@bexp
  3658  0408                     l2148:
  3659  0408  085D               	movf	___fladd@grs,w
  3660  0409  00D2               	movwf	??___fladd
  3661  040A  0852               	movf	??___fladd,w
  3662  040B  00DB               	movwf	___fladd@aexp
  3663  040C                     l2150:
  3664  040C  084A               	movf	___fladd@b,w
  3665  040D  00D2               	movwf	??___fladd
  3666  040E  0852               	movf	??___fladd,w
  3667  040F  00DD               	movwf	___fladd@grs
  3668  0410                     l2152:
  3669  0410  084E               	movf	___fladd@a,w
  3670  0411  00D2               	movwf	??___fladd
  3671  0412  0852               	movf	??___fladd,w
  3672  0413  00CA               	movwf	___fladd@b
  3673  0414                     l2154:
  3674  0414  085D               	movf	___fladd@grs,w
  3675  0415  00D2               	movwf	??___fladd
  3676  0416  0852               	movf	??___fladd,w
  3677  0417  00CE               	movwf	___fladd@a
  3678  0418                     l2156:
  3679  0418  084B               	movf	___fladd@b+1,w
  3680  0419  00D2               	movwf	??___fladd
  3681  041A  0852               	movf	??___fladd,w
  3682  041B  00DD               	movwf	___fladd@grs
  3683  041C                     l2158:
  3684  041C  084F               	movf	___fladd@a+1,w
  3685  041D  00D2               	movwf	??___fladd
  3686  041E  0852               	movf	??___fladd,w
  3687  041F  00CB               	movwf	___fladd@b+1
  3688  0420                     l2160:
  3689  0420  085D               	movf	___fladd@grs,w
  3690  0421  00D2               	movwf	??___fladd
  3691  0422  0852               	movf	??___fladd,w
  3692  0423  00CF               	movwf	___fladd@a+1
  3693  0424                     l2162:
  3694  0424  084C               	movf	___fladd@b+2,w
  3695  0425  00D2               	movwf	??___fladd
  3696  0426  0852               	movf	??___fladd,w
  3697  0427  00DD               	movwf	___fladd@grs
  3698  0428                     l2164:
  3699  0428  0850               	movf	___fladd@a+2,w
  3700  0429  00D2               	movwf	??___fladd
  3701  042A  0852               	movf	??___fladd,w
  3702  042B  00CC               	movwf	___fladd@b+2
  3703  042C                     l2166:
  3704  042C  085D               	movf	___fladd@grs,w
  3705  042D  00D2               	movwf	??___fladd
  3706  042E  0852               	movf	??___fladd,w
  3707  042F  00D0               	movwf	___fladd@a+2
  3708  0430                     l2168:
  3709  0430  084D               	movf	___fladd@b+3,w
  3710  0431  00D2               	movwf	??___fladd
  3711  0432  0852               	movf	??___fladd,w
  3712  0433  00DD               	movwf	___fladd@grs
  3713  0434                     l2170:
  3714  0434  0851               	movf	___fladd@a+3,w
  3715  0435  00D2               	movwf	??___fladd
  3716  0436  0852               	movf	??___fladd,w
  3717  0437  00CD               	movwf	___fladd@b+3
  3718  0438                     l2172:
  3719  0438  085D               	movf	___fladd@grs,w
  3720  0439  00D2               	movwf	??___fladd
  3721  043A  0852               	movf	??___fladd,w
  3722  043B  00D1               	movwf	___fladd@a+3
  3723  043C                     l2174:
  3724  043C  01DD               	clrf	___fladd@grs
  3725  043D                     l2176:
  3726  043D  085B               	movf	___fladd@aexp,w
  3727  043E  00D2               	movwf	??___fladd
  3728  043F  01D3               	clrf	??___fladd+1
  3729  0440  0853               	movf	??___fladd+1,w
  3730  0441  00D5               	movwf	??___fladd+3
  3731  0442  085C               	movf	___fladd@bexp,w
  3732  0443  0252               	subwf	??___fladd,w
  3733  0444  00D4               	movwf	??___fladd+2
  3734  0445  1C03               	skipc
  3735  0446  03D5               	decf	??___fladd+3,f
  3736  0447  0855               	movf	??___fladd+3,w
  3737  0448  3A80               	xorlw	128
  3738  0449  00FF               	movwf	btemp+1
  3739  044A  3080               	movlw	128
  3740  044B  027F               	subwf	btemp+1,w
  3741  044C  1D03               	skipz
  3742  044D  2C50               	goto	u2395
  3743  044E  301A               	movlw	26
  3744  044F  0254               	subwf	??___fladd+2,w
  3745  0450                     u2395:
  3746  0450  1C03               	skipc
  3747  0451  2C53               	goto	u2391
  3748  0452  2C54               	goto	u2390
  3749  0453                     u2391:
  3750  0453  2C91               	goto	l2192
  3751  0454                     u2390:
  3752  0454                     l2178:
  3753  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0456  084D               	movf	___fladd@b+3,w
  3756  0457  044C               	iorwf	___fladd@b+2,w
  3757  0458  044B               	iorwf	___fladd@b+1,w
  3758  0459  044A               	iorwf	___fladd@b,w
  3759  045A  1D03               	skipz
  3760  045B  2C5D               	goto	u2401
  3761  045C  2C5F               	goto	u2400
  3762  045D                     u2401:
  3763  045D  3001               	movlw	1
  3764  045E  2C60               	goto	u2410
  3765  045F                     u2400:
  3766  045F  3000               	movlw	0
  3767  0460                     u2410:
  3768  0460  00D2               	movwf	??___fladd
  3769  0461  0852               	movf	??___fladd,w
  3770  0462  00DD               	movwf	___fladd@grs
  3771  0463  3000               	movlw	0
  3772  0464  00CD               	movwf	___fladd@b+3
  3773  0465  3000               	movlw	0
  3774  0466  00CC               	movwf	___fladd@b+2
  3775  0467  3000               	movlw	0
  3776  0468  00CB               	movwf	___fladd@b+1
  3777  0469  3000               	movlw	0
  3778  046A  00CA               	movwf	___fladd@b
  3779  046B  085B               	movf	___fladd@aexp,w
  3780  046C  00D2               	movwf	??___fladd
  3781  046D  0852               	movf	??___fladd,w
  3782  046E  00DC               	movwf	___fladd@bexp
  3783  046F  2C99               	goto	l609
  3784  0470                     l611:
  3785  0470  1C5D               	btfss	___fladd@grs,0
  3786  0471  2C73               	goto	u2421
  3787  0472  2C74               	goto	u2420
  3788  0473                     u2421:
  3789  0473  2C7D               	goto	l2182
  3790  0474                     u2420:
  3791  0474                     l2180:
  3792  0474  085D               	movf	___fladd@grs,w
  3793  0475  00D2               	movwf	??___fladd
  3794  0476  1003               	clrc
  3795  0477  0C52               	rrf	??___fladd,w
  3796  0478  3801               	iorlw	1
  3797  0479  00D3               	movwf	??___fladd+1
  3798  047A  0853               	movf	??___fladd+1,w
  3799  047B  00DD               	movwf	___fladd@grs
  3800  047C  2C7F               	goto	l2184
  3801  047D                     l2182:
  3802  047D  1003               	clrc
  3803  047E  0CDD               	rrf	___fladd@grs,f
  3804  047F                     l2184:
  3805  047F  1C4A               	btfss	___fladd@b,0
  3806  0480  2C82               	goto	u2431
  3807  0481  2C83               	goto	u2430
  3808  0482                     u2431:
  3809  0482  2C84               	goto	l2188
  3810  0483                     u2430:
  3811  0483                     l2186:
  3812  0483  17DD               	bsf	___fladd@grs,7
  3813  0484                     l2188:
  3814  0484  3001               	movlw	1
  3815  0485  00D2               	movwf	??___fladd
  3816  0486                     u2445:
  3817  0486  0D4D               	rlf	___fladd@b+3,w
  3818  0487  0CCD               	rrf	___fladd@b+3,f
  3819  0488  0CCC               	rrf	___fladd@b+2,f
  3820  0489  0CCB               	rrf	___fladd@b+1,f
  3821  048A  0CCA               	rrf	___fladd@b,f
  3822  048B  0BD2               	decfsz	??___fladd& (0+127),f
  3823  048C  2C86               	goto	u2445
  3824  048D                     l2190:
  3825  048D  3001               	movlw	1
  3826  048E  00D2               	movwf	??___fladd
  3827  048F  0852               	movf	??___fladd,w
  3828  0490  07DC               	addwf	___fladd@bexp,f
  3829  0491                     l2192:
  3830  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0493  085B               	movf	___fladd@aexp,w
  3833  0494  025C               	subwf	___fladd@bexp,w
  3834  0495  1C03               	skipc
  3835  0496  2C98               	goto	u2451
  3836  0497  2C99               	goto	u2450
  3837  0498                     u2451:
  3838  0498  2C70               	goto	l611
  3839  0499                     u2450:
  3840  0499                     l609:
  3841  0499  1B5A               	btfsc	___fladd@signs,6
  3842  049A  2C9C               	goto	u2461
  3843  049B  2C9D               	goto	u2460
  3844  049C                     u2461:
  3845  049C  2CE8               	goto	l2218
  3846  049D                     u2460:
  3847  049D                     l2194:
  3848  049D  085C               	movf	___fladd@bexp,w
  3849  049E  1D03               	btfss	3,2
  3850  049F  2CA1               	goto	u2471
  3851  04A0  2CA2               	goto	u2470
  3852  04A1                     u2471:
  3853  04A1  2CAB               	goto	l2200
  3854  04A2                     u2470:
  3855  04A2                     l2196:
  3856  04A2  3000               	movlw	0
  3857  04A3  00CD               	movwf	?___fladd+3
  3858  04A4  3000               	movlw	0
  3859  04A5  00CC               	movwf	?___fladd+2
  3860  04A6  3000               	movlw	0
  3861  04A7  00CB               	movwf	?___fladd+1
  3862  04A8  3000               	movlw	0
  3863  04A9  00CA               	movwf	?___fladd
  3864  04AA  2E16               	goto	l618
  3865  04AB                     l2200:
  3866  04AB  084E               	movf	___fladd@a,w
  3867  04AC  07CA               	addwf	___fladd@b,f
  3868  04AD  084F               	movf	___fladd@a+1,w
  3869  04AE  1103               	clrz
  3870  04AF  1803               	skipnc
  3871  04B0  3E01               	addlw	1
  3872  04B1  1903               	skipnz
  3873  04B2  2CB4               	goto	u2481
  3874  04B3  07CB               	addwf	___fladd@b+1,f
  3875  04B4                     u2481:
  3876  04B4  0850               	movf	___fladd@a+2,w
  3877  04B5  1103               	clrz
  3878  04B6  1803               	skipnc
  3879  04B7  3E01               	addlw	1
  3880  04B8  1903               	skipnz
  3881  04B9  2CBB               	goto	u2482
  3882  04BA  07CC               	addwf	___fladd@b+2,f
  3883  04BB                     u2482:
  3884  04BB  0851               	movf	___fladd@a+3,w
  3885  04BC  1103               	clrz
  3886  04BD  1803               	skipnc
  3887  04BE  3E01               	addlw	1
  3888  04BF  1903               	skipnz
  3889  04C0  2CC2               	goto	u2483
  3890  04C1  07CD               	addwf	___fladd@b+3,f
  3891  04C2                     u2483:
  3892  04C2                     l2202:
  3893  04C2  1C4D               	btfss	___fladd@b+3,0
  3894  04C3  2CC5               	goto	u2491
  3895  04C4  2CC6               	goto	u2490
  3896  04C5                     u2491:
  3897  04C5  2D9C               	goto	l2252
  3898  04C6                     u2490:
  3899  04C6                     l2204:
  3900  04C6  1C5D               	btfss	___fladd@grs,0
  3901  04C7  2CC9               	goto	u2501
  3902  04C8  2CCA               	goto	u2500
  3903  04C9                     u2501:
  3904  04C9  2CD3               	goto	l2208
  3905  04CA                     u2500:
  3906  04CA                     l2206:
  3907  04CA  085D               	movf	___fladd@grs,w
  3908  04CB  00D2               	movwf	??___fladd
  3909  04CC  1003               	clrc
  3910  04CD  0C52               	rrf	??___fladd,w
  3911  04CE  3801               	iorlw	1
  3912  04CF  00D3               	movwf	??___fladd+1
  3913  04D0  0853               	movf	??___fladd+1,w
  3914  04D1  00DD               	movwf	___fladd@grs
  3915  04D2  2CD5               	goto	l2210
  3916  04D3                     l2208:
  3917  04D3  1003               	clrc
  3918  04D4  0CDD               	rrf	___fladd@grs,f
  3919  04D5                     l2210:
  3920  04D5  1C4A               	btfss	___fladd@b,0
  3921  04D6  2CD8               	goto	u2511
  3922  04D7  2CD9               	goto	u2510
  3923  04D8                     u2511:
  3924  04D8  2CDA               	goto	l2214
  3925  04D9                     u2510:
  3926  04D9                     l2212:
  3927  04D9  17DD               	bsf	___fladd@grs,7
  3928  04DA                     l2214:
  3929  04DA  3001               	movlw	1
  3930  04DB  00D2               	movwf	??___fladd
  3931  04DC                     u2525:
  3932  04DC  0D4D               	rlf	___fladd@b+3,w
  3933  04DD  0CCD               	rrf	___fladd@b+3,f
  3934  04DE  0CCC               	rrf	___fladd@b+2,f
  3935  04DF  0CCB               	rrf	___fladd@b+1,f
  3936  04E0  0CCA               	rrf	___fladd@b,f
  3937  04E1  0BD2               	decfsz	??___fladd& (0+127),f
  3938  04E2  2CDC               	goto	u2525
  3939  04E3                     l2216:
  3940  04E3  3001               	movlw	1
  3941  04E4  00D2               	movwf	??___fladd
  3942  04E5  0852               	movf	??___fladd,w
  3943  04E6  07DC               	addwf	___fladd@bexp,f
  3944  04E7  2D9C               	goto	l2252
  3945  04E8                     l2218:
  3946  04E8  084D               	movf	___fladd@b+3,w
  3947  04E9  3A80               	xorlw	128
  3948  04EA  00FF               	movwf	btemp+1
  3949  04EB  0851               	movf	___fladd@a+3,w
  3950  04EC  3A80               	xorlw	128
  3951  04ED  027F               	subwf	btemp+1,w
  3952  04EE  1D03               	skipz
  3953  04EF  2CFA               	goto	u2533
  3954  04F0  0850               	movf	___fladd@a+2,w
  3955  04F1  024C               	subwf	___fladd@b+2,w
  3956  04F2  1D03               	skipz
  3957  04F3  2CFA               	goto	u2533
  3958  04F4  084F               	movf	___fladd@a+1,w
  3959  04F5  024B               	subwf	___fladd@b+1,w
  3960  04F6  1D03               	skipz
  3961  04F7  2CFA               	goto	u2533
  3962  04F8  084E               	movf	___fladd@a,w
  3963  04F9  024A               	subwf	___fladd@b,w
  3964  04FA                     u2533:
  3965  04FA  1803               	skipnc
  3966  04FB  2CFD               	goto	u2531
  3967  04FC  2CFE               	goto	u2530
  3968  04FD                     u2531:
  3969  04FD  2D56               	goto	l2228
  3970  04FE                     u2530:
  3971  04FE                     l2220:
  3972  04FE  30FF               	movlw	255
  3973  04FF  00D2               	movwf	??___fladd
  3974  0500  30FF               	movlw	255
  3975  0501  00D3               	movwf	??___fladd+1
  3976  0502  30FF               	movlw	255
  3977  0503  00D4               	movwf	??___fladd+2
  3978  0504  30FF               	movlw	255
  3979  0505  00D5               	movwf	??___fladd+3
  3980  0506  084E               	movf	___fladd@a,w
  3981  0507  00D6               	movwf	??___fladd+4
  3982  0508  084F               	movf	___fladd@a+1,w
  3983  0509  00D7               	movwf	??___fladd+5
  3984  050A  0850               	movf	___fladd@a+2,w
  3985  050B  00D8               	movwf	??___fladd+6
  3986  050C  0851               	movf	___fladd@a+3,w
  3987  050D  00D9               	movwf	??___fladd+7
  3988  050E  084A               	movf	___fladd@b,w
  3989  050F  02D6               	subwf	??___fladd+4,f
  3990  0510  084B               	movf	___fladd@b+1,w
  3991  0511  1C03               	skipc
  3992  0512  0F4B               	incfsz	___fladd@b+1,w
  3993  0513  2D15               	goto	u2541
  3994  0514  2D16               	goto	u2542
  3995  0515                     u2541:
  3996  0515  02D7               	subwf	??___fladd+5,f
  3997  0516                     u2542:
  3998  0516  084C               	movf	___fladd@b+2,w
  3999  0517  1C03               	skipc
  4000  0518  0F4C               	incfsz	___fladd@b+2,w
  4001  0519  2D1B               	goto	u2543
  4002  051A  2D1C               	goto	u2544
  4003  051B                     u2543:
  4004  051B  02D8               	subwf	??___fladd+6,f
  4005  051C                     u2544:
  4006  051C  084D               	movf	___fladd@b+3,w
  4007  051D  1C03               	skipc
  4008  051E  0F4D               	incfsz	___fladd@b+3,w
  4009  051F  2D21               	goto	u2545
  4010  0520  2D22               	goto	u2546
  4011  0521                     u2545:
  4012  0521  02D9               	subwf	??___fladd+7,f
  4013  0522                     u2546:
  4014  0522  0856               	movf	??___fladd+4,w
  4015  0523  07D2               	addwf	??___fladd,f
  4016  0524  0857               	movf	??___fladd+5,w
  4017  0525  1803               	skipnc
  4018  0526  0F57               	incfsz	??___fladd+5,w
  4019  0527  2D29               	goto	u2550
  4020  0528  2D2A               	goto	u2551
  4021  0529                     u2550:
  4022  0529  07D3               	addwf	??___fladd+1,f
  4023  052A                     u2551:
  4024  052A  0858               	movf	??___fladd+6,w
  4025  052B  1803               	skipnc
  4026  052C  0F58               	incfsz	??___fladd+6,w
  4027  052D  2D2F               	goto	u2552
  4028  052E  2D30               	goto	u2553
  4029  052F                     u2552:
  4030  052F  07D4               	addwf	??___fladd+2,f
  4031  0530                     u2553:
  4032  0530  0859               	movf	??___fladd+7,w
  4033  0531  1803               	skipnc
  4034  0532  0A59               	incf	??___fladd+7,w
  4035  0533  07D5               	addwf	??___fladd+3,f
  4036  0534  0855               	movf	??___fladd+3,w
  4037  0535  00CD               	movwf	___fladd@b+3
  4038  0536  0854               	movf	??___fladd+2,w
  4039  0537  00CC               	movwf	___fladd@b+2
  4040  0538  0853               	movf	??___fladd+1,w
  4041  0539  00CB               	movwf	___fladd@b+1
  4042  053A  0852               	movf	??___fladd,w
  4043  053B  00CA               	movwf	___fladd@b
  4044  053C                     l2222:
  4045  053C  3080               	movlw	128
  4046  053D  00D2               	movwf	??___fladd
  4047  053E  0852               	movf	??___fladd,w
  4048  053F  06DA               	xorwf	___fladd@signs,f
  4049  0540  09DD               	comf	___fladd@grs,f
  4050  0541  0ADD               	incf	___fladd@grs,f
  4051  0542                     l2224:
  4052  0542  085D               	movf	___fladd@grs,w
  4053  0543  1D03               	btfss	3,2
  4054  0544  2D46               	goto	u2561
  4055  0545  2D47               	goto	u2560
  4056  0546                     u2561:
  4057  0546  2D64               	goto	l626
  4058  0547                     u2560:
  4059  0547                     l2226:
  4060  0547  3001               	movlw	1
  4061  0548  07CA               	addwf	___fladd@b,f
  4062  0549  3000               	movlw	0
  4063  054A  1803               	skipnc
  4064  054B  3001               	movlw	1
  4065  054C  07CB               	addwf	___fladd@b+1,f
  4066  054D  3000               	movlw	0
  4067  054E  1803               	skipnc
  4068  054F  3001               	movlw	1
  4069  0550  07CC               	addwf	___fladd@b+2,f
  4070  0551  3000               	movlw	0
  4071  0552  1803               	skipnc
  4072  0553  3001               	movlw	1
  4073  0554  07CD               	addwf	___fladd@b+3,f
  4074  0555  2D64               	goto	l626
  4075  0556                     l2228:
  4076  0556  084E               	movf	___fladd@a,w
  4077  0557  02CA               	subwf	___fladd@b,f
  4078  0558  084F               	movf	___fladd@a+1,w
  4079  0559  1C03               	skipc
  4080  055A  0F4F               	incfsz	___fladd@a+1,w
  4081  055B  02CB               	subwf	___fladd@b+1,f
  4082  055C  0850               	movf	___fladd@a+2,w
  4083  055D  1C03               	skipc
  4084  055E  0F50               	incfsz	___fladd@a+2,w
  4085  055F  02CC               	subwf	___fladd@b+2,f
  4086  0560  0851               	movf	___fladd@a+3,w
  4087  0561  1C03               	skipc
  4088  0562  0F51               	incfsz	___fladd@a+3,w
  4089  0563  02CD               	subwf	___fladd@b+3,f
  4090  0564                     l626:
  4091  0564  084D               	movf	___fladd@b+3,w
  4092  0565  044C               	iorwf	___fladd@b+2,w
  4093  0566  044B               	iorwf	___fladd@b+1,w
  4094  0567  044A               	iorwf	___fladd@b,w
  4095  0568  1D03               	skipz
  4096  0569  2D6B               	goto	u2571
  4097  056A  2D6C               	goto	u2570
  4098  056B                     u2571:
  4099  056B  2D98               	goto	l2250
  4100  056C                     u2570:
  4101  056C                     l2230:
  4102  056C  085D               	movf	___fladd@grs,w
  4103  056D  1D03               	btfss	3,2
  4104  056E  2D70               	goto	u2581
  4105  056F  2D71               	goto	u2580
  4106  0570                     u2581:
  4107  0570  2D98               	goto	l2250
  4108  0571                     u2580:
  4109  0571                     l2232:
  4110  0571  3000               	movlw	0
  4111  0572  00CD               	movwf	?___fladd+3
  4112  0573  3000               	movlw	0
  4113  0574  00CC               	movwf	?___fladd+2
  4114  0575  3000               	movlw	0
  4115  0576  00CB               	movwf	?___fladd+1
  4116  0577  3000               	movlw	0
  4117  0578  00CA               	movwf	?___fladd
  4118  0579  2E16               	goto	l618
  4119  057A                     l2236:
  4120  057A  3001               	movlw	1
  4121  057B  00D2               	movwf	??___fladd
  4122  057C                     u2595:
  4123  057C  1003               	clrc
  4124  057D  0DCA               	rlf	___fladd@b,f
  4125  057E  0DCB               	rlf	___fladd@b+1,f
  4126  057F  0DCC               	rlf	___fladd@b+2,f
  4127  0580  0DCD               	rlf	___fladd@b+3,f
  4128  0581  0BD2               	decfsz	??___fladd,f
  4129  0582  2D7C               	goto	u2595
  4130  0583                     l2238:
  4131  0583  1FDD               	btfss	___fladd@grs,7
  4132  0584  2D86               	goto	u2601
  4133  0585  2D87               	goto	u2600
  4134  0586                     u2601:
  4135  0586  2D88               	goto	l630
  4136  0587                     u2600:
  4137  0587                     l2240:
  4138  0587  144A               	bsf	___fladd@b,0
  4139  0588                     l630:
  4140  0588  1C5D               	btfss	___fladd@grs,0
  4141  0589  2D8B               	goto	u2611
  4142  058A  2D8C               	goto	u2610
  4143  058B                     u2611:
  4144  058B  2D8F               	goto	l2244
  4145  058C                     u2610:
  4146  058C                     l2242:
  4147  058C  1403               	setc
  4148  058D  0DDD               	rlf	___fladd@grs,f
  4149  058E  2D91               	goto	l2246
  4150  058F                     l2244:
  4151  058F  1003               	clrc
  4152  0590  0DDD               	rlf	___fladd@grs,f
  4153  0591                     l2246:
  4154  0591  085C               	movf	___fladd@bexp,w
  4155  0592  1903               	btfsc	3,2
  4156  0593  2D95               	goto	u2621
  4157  0594  2D96               	goto	u2620
  4158  0595                     u2621:
  4159  0595  2D98               	goto	l2250
  4160  0596                     u2620:
  4161  0596                     l2248:
  4162  0596  3001               	movlw	1
  4163  0597  02DC               	subwf	___fladd@bexp,f
  4164  0598                     l2250:
  4165  0598  1FCC               	btfss	___fladd@b+2,7
  4166  0599  2D9B               	goto	u2631
  4167  059A  2D9C               	goto	u2630
  4168  059B                     u2631:
  4169  059B  2D7A               	goto	l2236
  4170  059C                     u2630:
  4171  059C                     l2252:
  4172  059C  01DB               	clrf	___fladd@aexp
  4173  059D                     l2254:
  4174  059D  1FDD               	btfss	___fladd@grs,7
  4175  059E  2DA0               	goto	u2641
  4176  059F  2DA1               	goto	u2640
  4177  05A0                     u2641:
  4178  05A0  2DAF               	goto	l2262
  4179  05A1                     u2640:
  4180  05A1                     l2256:
  4181  05A1  085D               	movf	___fladd@grs,w
  4182  05A2  397F               	andlw	127
  4183  05A3  1903               	btfsc	3,2
  4184  05A4  2DA6               	goto	u2651
  4185  05A5  2DA7               	goto	u2650
  4186  05A6                     u2651:
  4187  05A6  2DAA               	goto	l636
  4188  05A7                     u2650:
  4189  05A7                     l2258:
  4190  05A7  01DB               	clrf	___fladd@aexp
  4191  05A8  0ADB               	incf	___fladd@aexp,f
  4192  05A9  2DAF               	goto	l2262
  4193  05AA                     l636:
  4194  05AA  1C4A               	btfss	___fladd@b,0
  4195  05AB  2DAD               	goto	u2661
  4196  05AC  2DAE               	goto	u2660
  4197  05AD                     u2661:
  4198  05AD  2DAF               	goto	l2262
  4199  05AE                     u2660:
  4200  05AE  2DA7               	goto	l2258
  4201  05AF                     l2262:
  4202  05AF  085B               	movf	___fladd@aexp,w
  4203  05B0  1903               	btfsc	3,2
  4204  05B1  2DB3               	goto	u2671
  4205  05B2  2DB4               	goto	u2670
  4206  05B3                     u2671:
  4207  05B3  2DE8               	goto	l639
  4208  05B4                     u2670:
  4209  05B4                     l2264:
  4210  05B4  3001               	movlw	1
  4211  05B5  07CA               	addwf	___fladd@b,f
  4212  05B6  3000               	movlw	0
  4213  05B7  1803               	skipnc
  4214  05B8  3001               	movlw	1
  4215  05B9  07CB               	addwf	___fladd@b+1,f
  4216  05BA  3000               	movlw	0
  4217  05BB  1803               	skipnc
  4218  05BC  3001               	movlw	1
  4219  05BD  07CC               	addwf	___fladd@b+2,f
  4220  05BE  3000               	movlw	0
  4221  05BF  1803               	skipnc
  4222  05C0  3001               	movlw	1
  4223  05C1  07CD               	addwf	___fladd@b+3,f
  4224  05C2                     l2266:
  4225  05C2  1C4D               	btfss	___fladd@b+3,0
  4226  05C3  2DC5               	goto	u2681
  4227  05C4  2DC6               	goto	u2680
  4228  05C5                     u2681:
  4229  05C5  2DE8               	goto	l639
  4230  05C6                     u2680:
  4231  05C6                     l2268:
  4232  05C6  084A               	movf	___fladd@b,w
  4233  05C7  00D2               	movwf	??___fladd
  4234  05C8  084B               	movf	___fladd@b+1,w
  4235  05C9  00D3               	movwf	??___fladd+1
  4236  05CA  084C               	movf	___fladd@b+2,w
  4237  05CB  00D4               	movwf	??___fladd+2
  4238  05CC  084D               	movf	___fladd@b+3,w
  4239  05CD  00D5               	movwf	??___fladd+3
  4240  05CE  3001               	movlw	1
  4241  05CF  00D6               	movwf	??___fladd+4
  4242  05D0                     u2695:
  4243  05D0  0D55               	rlf	??___fladd+3,w
  4244  05D1  0CD5               	rrf	??___fladd+3,f
  4245  05D2  0CD4               	rrf	??___fladd+2,f
  4246  05D3  0CD3               	rrf	??___fladd+1,f
  4247  05D4  0CD2               	rrf	??___fladd,f
  4248  05D5                     u2690:
  4249  05D5  0BD6               	decfsz	??___fladd+4,f
  4250  05D6  2DD0               	goto	u2695
  4251  05D7  0855               	movf	??___fladd+3,w
  4252  05D8  00CD               	movwf	___fladd@b+3
  4253  05D9  0854               	movf	??___fladd+2,w
  4254  05DA  00CC               	movwf	___fladd@b+2
  4255  05DB  0853               	movf	??___fladd+1,w
  4256  05DC  00CB               	movwf	___fladd@b+1
  4257  05DD  0852               	movf	??___fladd,w
  4258  05DE  00CA               	movwf	___fladd@b
  4259  05DF  0A5C               	incf	___fladd@bexp,w
  4260  05E0  1903               	btfsc	3,2
  4261  05E1  2DE3               	goto	u2701
  4262  05E2  2DE4               	goto	u2700
  4263  05E3                     u2701:
  4264  05E3  2DE8               	goto	l639
  4265  05E4                     u2700:
  4266  05E4                     l2270:
  4267  05E4  3001               	movlw	1
  4268  05E5  00D2               	movwf	??___fladd
  4269  05E6  0852               	movf	??___fladd,w
  4270  05E7  07DC               	addwf	___fladd@bexp,f
  4271  05E8                     l639:
  4272  05E8  0A5C               	incf	___fladd@bexp,w
  4273  05E9  1903               	btfsc	3,2
  4274  05EA  2DEC               	goto	u2711
  4275  05EB  2DED               	goto	u2710
  4276  05EC                     u2711:
  4277  05EC  2DF2               	goto	l2274
  4278  05ED                     u2710:
  4279  05ED                     l2272:
  4280  05ED  085C               	movf	___fladd@bexp,w
  4281  05EE  1D03               	btfss	3,2
  4282  05EF  2DF1               	goto	u2721
  4283  05F0  2DF2               	goto	u2720
  4284  05F1                     u2721:
  4285  05F1  2E00               	goto	l2280
  4286  05F2                     u2720:
  4287  05F2                     l2274:
  4288  05F2  3000               	movlw	0
  4289  05F3  00CD               	movwf	___fladd@b+3
  4290  05F4  3000               	movlw	0
  4291  05F5  00CC               	movwf	___fladd@b+2
  4292  05F6  3000               	movlw	0
  4293  05F7  00CB               	movwf	___fladd@b+1
  4294  05F8  3000               	movlw	0
  4295  05F9  00CA               	movwf	___fladd@b
  4296  05FA                     l2276:
  4297  05FA  085C               	movf	___fladd@bexp,w
  4298  05FB  1D03               	btfss	3,2
  4299  05FC  2DFE               	goto	u2731
  4300  05FD  2DFF               	goto	u2730
  4301  05FE                     u2731:
  4302  05FE  2E00               	goto	l2280
  4303  05FF                     u2730:
  4304  05FF                     l2278:
  4305  05FF  01DA               	clrf	___fladd@signs
  4306  0600                     l2280:
  4307  0600  1C5C               	btfss	___fladd@bexp,0
  4308  0601  2E03               	goto	u2741
  4309  0602  2E04               	goto	u2740
  4310  0603                     u2741:
  4311  0603  2E06               	goto	l2284
  4312  0604                     u2740:
  4313  0604                     l2282:
  4314  0604  17CC               	bsf	___fladd@b+2,7
  4315  0605  2E0A               	goto	l647
  4316  0606                     l2284:
  4317  0606  307F               	movlw	127
  4318  0607  00D2               	movwf	??___fladd
  4319  0608  0852               	movf	??___fladd,w
  4320  0609  05CC               	andwf	___fladd@b+2,f
  4321  060A                     l647:
  4322  060A  085C               	movf	___fladd@bexp,w
  4323  060B  00D2               	movwf	??___fladd
  4324  060C  1003               	clrc
  4325  060D  0C52               	rrf	??___fladd,w
  4326  060E  00D3               	movwf	??___fladd+1
  4327  060F  0853               	movf	??___fladd+1,w
  4328  0610  00CD               	movwf	___fladd@b+3
  4329  0611                     l2286:
  4330  0611  1FDA               	btfss	___fladd@signs,7
  4331  0612  2E14               	goto	u2751
  4332  0613  2E15               	goto	u2750
  4333  0614                     u2751:
  4334  0614  2E16               	goto	l648
  4335  0615                     u2750:
  4336  0615                     l2288:
  4337  0615  17CD               	bsf	___fladd@b+3,7
  4338  0616                     l648:
  4339  0616                     l618:
  4340  0616  0008               	return
  4341  0617                     __end_of___fladd:
  4342                           
  4343                           	psect	text10
  4344  0723                     __ptext10:	
  4345 ;; *************** function ___xxtofl *****************
  4346 ;; Defined at:
  4347 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  sign            1    wreg     unsigned char 
  4350 ;;  val             4    7[BANK0 ] long 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  sign            1   15[BANK0 ] unsigned char 
  4353 ;;  arg             4   17[BANK0 ] unsigned long 
  4354 ;;  exp             1   16[BANK0 ] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  4    7[BANK0 ] unsigned char 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       4       0       0       0
  4365 ;;      Locals:         0       6       0       0       0
  4366 ;;      Temps:          0       4       0       0       0
  4367 ;;      Totals:         0      14       0       0       0
  4368 ;;Total ram usage:       14 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 4
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_termometro
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function ___xxtofl
  4380  0723                     ___xxtofl:
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4384                           ;___xxtofl@sign stored from wreg
  4385  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0724  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0725  00AF               	movwf	___xxtofl@sign
  4388  0726                     l2762:
  4389  0726  082F               	movf	___xxtofl@sign,w
  4390  0727  1903               	btfsc	3,2
  4391  0728  2F2A               	goto	u3421
  4392  0729  2F2B               	goto	u3420
  4393  072A                     u3421:
  4394  072A  2F3F               	goto	l2768
  4395  072B                     u3420:
  4396  072B                     l2764:
  4397  072B  1FAA               	btfss	___xxtofl@val+3,7
  4398  072C  2F2E               	goto	u3431
  4399  072D  2F2F               	goto	u3430
  4400  072E                     u3431:
  4401  072E  2F3F               	goto	l2768
  4402  072F                     u3430:
  4403  072F                     l2766:
  4404  072F  0927               	comf	___xxtofl@val,w
  4405  0730  00B1               	movwf	___xxtofl@arg
  4406  0731  0928               	comf	___xxtofl@val+1,w
  4407  0732  00B2               	movwf	___xxtofl@arg+1
  4408  0733  0929               	comf	___xxtofl@val+2,w
  4409  0734  00B3               	movwf	___xxtofl@arg+2
  4410  0735  092A               	comf	___xxtofl@val+3,w
  4411  0736  00B4               	movwf	___xxtofl@arg+3
  4412  0737  0AB1               	incf	___xxtofl@arg,f
  4413  0738  1903               	skipnz
  4414  0739  0AB2               	incf	___xxtofl@arg+1,f
  4415  073A  1903               	skipnz
  4416  073B  0AB3               	incf	___xxtofl@arg+2,f
  4417  073C  1903               	skipnz
  4418  073D  0AB4               	incf	___xxtofl@arg+3,f
  4419  073E  2F47               	goto	l745
  4420  073F                     l2768:
  4421  073F  082A               	movf	___xxtofl@val+3,w
  4422  0740  00B4               	movwf	___xxtofl@arg+3
  4423  0741  0829               	movf	___xxtofl@val+2,w
  4424  0742  00B3               	movwf	___xxtofl@arg+2
  4425  0743  0828               	movf	___xxtofl@val+1,w
  4426  0744  00B2               	movwf	___xxtofl@arg+1
  4427  0745  0827               	movf	___xxtofl@val,w
  4428  0746  00B1               	movwf	___xxtofl@arg
  4429  0747                     l745:
  4430  0747  082A               	movf	___xxtofl@val+3,w
  4431  0748  0429               	iorwf	___xxtofl@val+2,w
  4432  0749  0428               	iorwf	___xxtofl@val+1,w
  4433  074A  0427               	iorwf	___xxtofl@val,w
  4434  074B  1D03               	skipz
  4435  074C  2F4E               	goto	u3441
  4436  074D  2F4F               	goto	u3440
  4437  074E                     u3441:
  4438  074E  2F58               	goto	l2774
  4439  074F                     u3440:
  4440  074F                     l2770:
  4441  074F  3000               	movlw	0
  4442  0750  00AA               	movwf	?___xxtofl+3
  4443  0751  3000               	movlw	0
  4444  0752  00A9               	movwf	?___xxtofl+2
  4445  0753  3000               	movlw	0
  4446  0754  00A8               	movwf	?___xxtofl+1
  4447  0755  3000               	movlw	0
  4448  0756  00A7               	movwf	?___xxtofl
  4449  0757  2FDE               	goto	l747
  4450  0758                     l2774:
  4451  0758  3096               	movlw	150
  4452  0759  00AB               	movwf	??___xxtofl
  4453  075A  082B               	movf	??___xxtofl,w
  4454  075B  00B0               	movwf	___xxtofl@exp
  4455  075C  2F6A               	goto	l2778
  4456  075D                     l2776:
  4457  075D  3001               	movlw	1
  4458  075E  00AB               	movwf	??___xxtofl
  4459  075F  082B               	movf	??___xxtofl,w
  4460  0760  07B0               	addwf	___xxtofl@exp,f
  4461  0761  3001               	movlw	1
  4462  0762                     u3455:
  4463  0762  1003               	clrc
  4464  0763  0CB4               	rrf	___xxtofl@arg+3,f
  4465  0764  0CB3               	rrf	___xxtofl@arg+2,f
  4466  0765  0CB2               	rrf	___xxtofl@arg+1,f
  4467  0766  0CB1               	rrf	___xxtofl@arg,f
  4468  0767  3EFF               	addlw	-1
  4469  0768  1D03               	skipz
  4470  0769  2F62               	goto	u3455
  4471  076A                     l2778:
  4472  076A  30FE               	movlw	254
  4473  076B  0534               	andwf	___xxtofl@arg+3,w
  4474  076C  1D03               	btfss	3,2
  4475  076D  2F6F               	goto	u3461
  4476  076E  2F70               	goto	u3460
  4477  076F                     u3461:
  4478  076F  2F5D               	goto	l2776
  4479  0770                     u3460:
  4480  0770  2F8C               	goto	l751
  4481  0771                     l2780:
  4482  0771  3001               	movlw	1
  4483  0772  00AB               	movwf	??___xxtofl
  4484  0773  082B               	movf	??___xxtofl,w
  4485  0774  07B0               	addwf	___xxtofl@exp,f
  4486  0775                     l2782:
  4487  0775  3001               	movlw	1
  4488  0776  07B1               	addwf	___xxtofl@arg,f
  4489  0777  3000               	movlw	0
  4490  0778  1803               	skipnc
  4491  0779  3001               	movlw	1
  4492  077A  07B2               	addwf	___xxtofl@arg+1,f
  4493  077B  3000               	movlw	0
  4494  077C  1803               	skipnc
  4495  077D  3001               	movlw	1
  4496  077E  07B3               	addwf	___xxtofl@arg+2,f
  4497  077F  3000               	movlw	0
  4498  0780  1803               	skipnc
  4499  0781  3001               	movlw	1
  4500  0782  07B4               	addwf	___xxtofl@arg+3,f
  4501  0783                     l2784:
  4502  0783  3001               	movlw	1
  4503  0784                     u3475:
  4504  0784  1003               	clrc
  4505  0785  0CB4               	rrf	___xxtofl@arg+3,f
  4506  0786  0CB3               	rrf	___xxtofl@arg+2,f
  4507  0787  0CB2               	rrf	___xxtofl@arg+1,f
  4508  0788  0CB1               	rrf	___xxtofl@arg,f
  4509  0789  3EFF               	addlw	-1
  4510  078A  1D03               	skipz
  4511  078B  2F84               	goto	u3475
  4512  078C                     l751:
  4513  078C  30FF               	movlw	255
  4514  078D  0534               	andwf	___xxtofl@arg+3,w
  4515  078E  1D03               	btfss	3,2
  4516  078F  2F91               	goto	u3481
  4517  0790  2F92               	goto	u3480
  4518  0791                     u3481:
  4519  0791  2F71               	goto	l2780
  4520  0792                     u3480:
  4521  0792  2F9E               	goto	l2788
  4522  0793                     l2786:
  4523  0793  3001               	movlw	1
  4524  0794  02B0               	subwf	___xxtofl@exp,f
  4525  0795  3001               	movlw	1
  4526  0796  00AB               	movwf	??___xxtofl
  4527  0797                     u3495:
  4528  0797  1003               	clrc
  4529  0798  0DB1               	rlf	___xxtofl@arg,f
  4530  0799  0DB2               	rlf	___xxtofl@arg+1,f
  4531  079A  0DB3               	rlf	___xxtofl@arg+2,f
  4532  079B  0DB4               	rlf	___xxtofl@arg+3,f
  4533  079C  0BAB               	decfsz	??___xxtofl,f
  4534  079D  2F97               	goto	u3495
  4535  079E                     l2788:
  4536  079E  1BB3               	btfsc	___xxtofl@arg+2,7
  4537  079F  2FA1               	goto	u3501
  4538  07A0  2FA2               	goto	u3500
  4539  07A1                     u3501:
  4540  07A1  2FA8               	goto	l758
  4541  07A2                     u3500:
  4542  07A2                     l2790:
  4543  07A2  3002               	movlw	2
  4544  07A3  0230               	subwf	___xxtofl@exp,w
  4545  07A4  1803               	skipnc
  4546  07A5  2FA7               	goto	u3511
  4547  07A6  2FA8               	goto	u3510
  4548  07A7                     u3511:
  4549  07A7  2F93               	goto	l2786
  4550  07A8                     u3510:
  4551  07A8                     l758:
  4552  07A8  1830               	btfsc	___xxtofl@exp,0
  4553  07A9  2FAB               	goto	u3521
  4554  07AA  2FAC               	goto	u3520
  4555  07AB                     u3521:
  4556  07AB  2FB4               	goto	l759
  4557  07AC                     u3520:
  4558  07AC                     l2792:
  4559  07AC  30FF               	movlw	255
  4560  07AD  05B1               	andwf	___xxtofl@arg,f
  4561  07AE  30FF               	movlw	255
  4562  07AF  05B2               	andwf	___xxtofl@arg+1,f
  4563  07B0  307F               	movlw	127
  4564  07B1  05B3               	andwf	___xxtofl@arg+2,f
  4565  07B2  30FF               	movlw	255
  4566  07B3  05B4               	andwf	___xxtofl@arg+3,f
  4567  07B4                     l759:
  4568  07B4  1003               	clrc
  4569  07B5  0CB0               	rrf	___xxtofl@exp,f
  4570  07B6                     l2794:
  4571  07B6  0830               	movf	___xxtofl@exp,w
  4572  07B7  00AB               	movwf	??___xxtofl
  4573  07B8  01AC               	clrf	??___xxtofl+1
  4574  07B9  01AD               	clrf	??___xxtofl+2
  4575  07BA  01AE               	clrf	??___xxtofl+3
  4576  07BB  3018               	movlw	24
  4577  07BC                     u3535:
  4578  07BC  1003               	clrc
  4579  07BD  0DAB               	rlf	??___xxtofl,f
  4580  07BE  0DAC               	rlf	??___xxtofl+1,f
  4581  07BF  0DAD               	rlf	??___xxtofl+2,f
  4582  07C0  0DAE               	rlf	??___xxtofl+3,f
  4583  07C1                     u3530:
  4584  07C1  3EFF               	addlw	-1
  4585  07C2  1D03               	skipz
  4586  07C3  2FBC               	goto	u3535
  4587  07C4  082B               	movf	??___xxtofl,w
  4588  07C5  04B1               	iorwf	___xxtofl@arg,f
  4589  07C6  082C               	movf	??___xxtofl+1,w
  4590  07C7  04B2               	iorwf	___xxtofl@arg+1,f
  4591  07C8  082D               	movf	??___xxtofl+2,w
  4592  07C9  04B3               	iorwf	___xxtofl@arg+2,f
  4593  07CA  082E               	movf	??___xxtofl+3,w
  4594  07CB  04B4               	iorwf	___xxtofl@arg+3,f
  4595  07CC                     l2796:
  4596  07CC  082F               	movf	___xxtofl@sign,w
  4597  07CD  1903               	btfsc	3,2
  4598  07CE  2FD0               	goto	u3541
  4599  07CF  2FD1               	goto	u3540
  4600  07D0                     u3541:
  4601  07D0  2FD6               	goto	l2802
  4602  07D1                     u3540:
  4603  07D1                     l2798:
  4604  07D1  1FAA               	btfss	___xxtofl@val+3,7
  4605  07D2  2FD4               	goto	u3551
  4606  07D3  2FD5               	goto	u3550
  4607  07D4                     u3551:
  4608  07D4  2FD6               	goto	l2802
  4609  07D5                     u3550:
  4610  07D5                     l2800:
  4611  07D5  17B4               	bsf	___xxtofl@arg+3,7
  4612  07D6                     l2802:
  4613  07D6  0834               	movf	___xxtofl@arg+3,w
  4614  07D7  00AA               	movwf	?___xxtofl+3
  4615  07D8  0833               	movf	___xxtofl@arg+2,w
  4616  07D9  00A9               	movwf	?___xxtofl+2
  4617  07DA  0832               	movf	___xxtofl@arg+1,w
  4618  07DB  00A8               	movwf	?___xxtofl+1
  4619  07DC  0831               	movf	___xxtofl@arg,w
  4620  07DD  00A7               	movwf	?___xxtofl
  4621  07DE                     l747:
  4622  07DE  0008               	return
  4623  07DF                     __end_of___xxtofl:
  4624                           
  4625                           	psect	text11
  4626  158F                     __ptext11:	
  4627 ;; *************** function _config *****************
  4628 ;; Defined at:
  4629 ;;		line 61 in file "./configs.h"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, pclath, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4643 ;;      Params:         0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0
  4646 ;;      Totals:         0       0       0       0       0
  4647 ;;Total ram usage:        0 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 5
  4650 ;; This function calls:
  4651 ;;		_config_ac
  4652 ;;		_config_ports
  4653 ;;		_config_timer
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _config
  4661  158F                     _config:
  4662  158F                     l2846:	
  4663                           ;incstack = 0
  4664                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  4665                           
  4666                           
  4667                           ;./configs.h: 62:     config_ports();
  4668  158F  160A  118A  2580  160A  118A  	fcall	_config_ports
  4669  1594                     l2848:
  4670                           
  4671                           ;./configs.h: 63:     config_ac();
  4672  1594  160A  118A  259F  160A  118A  	fcall	_config_ac
  4673  1599                     l2850:
  4674                           
  4675                           ;./configs.h: 64:     config_timer();
  4676  1599  160A  118A  25B4  160A  118A  	fcall	_config_timer
  4677  159E                     l113:
  4678  159E  0008               	return
  4679  159F                     __end_of_config:
  4680                           
  4681                           	psect	text12
  4682  15B4                     __ptext12:	
  4683 ;; *************** function _config_timer *****************
  4684 ;; Defined at:
  4685 ;;		line 13 in file "./configs.h"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 4
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_config
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function _config_timer
  4715  15B4                     _config_timer:
  4716  15B4                     l2458:	
  4717                           ;incstack = 0
  4718                           ; Regs used in _config_timer: [wreg+status,2]
  4719                           
  4720                           
  4721                           ;./configs.h: 15:     T1CONbits.TMR1CS = 0;
  4722  15B4  1283               	bcf	3,5	;RP0=0, select bank0
  4723  15B5  1303               	bcf	3,6	;RP1=0, select bank0
  4724  15B6  1090               	bcf	16,1	;volatile
  4725                           
  4726                           ;./configs.h: 16:     T1CONbits.T1CKPS0 = 1;
  4727  15B7  1610               	bsf	16,4	;volatile
  4728                           
  4729                           ;./configs.h: 17:     T1CONbits.T1CKPS1 = 1;
  4730  15B8  1690               	bsf	16,5	;volatile
  4731  15B9                     l2460:
  4732                           
  4733                           ;./configs.h: 19:     TMR1L = 0xDC;
  4734  15B9  30DC               	movlw	220
  4735  15BA  008E               	movwf	14	;volatile
  4736                           
  4737                           ;./configs.h: 20:     TMR1H = 0x0B;
  4738  15BB  300B               	movlw	11
  4739  15BC  008F               	movwf	15	;volatile
  4740  15BD                     l2462:
  4741                           
  4742                           ;./configs.h: 22:     OPTION_REGbits.PSA = 1;
  4743  15BD  1683               	bsf	3,5	;RP0=1, select bank1
  4744  15BE  1303               	bcf	3,6	;RP1=0, select bank1
  4745  15BF  1581               	bsf	1,3	;volatile
  4746  15C0                     l2464:
  4747                           
  4748                           ;./configs.h: 23:     OPTION_REGbits.PS0 = 1;
  4749  15C0  1401               	bsf	1,0	;volatile
  4750  15C1                     l2466:
  4751                           
  4752                           ;./configs.h: 24:     OPTION_REGbits.PS1 = 1;
  4753  15C1  1481               	bsf	1,1	;volatile
  4754  15C2                     l2468:
  4755                           
  4756                           ;./configs.h: 25:     OPTION_REGbits.PS2 = 1;
  4757  15C2  1501               	bsf	1,2	;volatile
  4758  15C3                     l2470:
  4759                           
  4760                           ;./configs.h: 28:     TMR0 = 0;
  4761  15C3  1283               	bcf	3,5	;RP0=0, select bank0
  4762  15C4  1303               	bcf	3,6	;RP1=0, select bank0
  4763  15C5  0181               	clrf	1	;volatile
  4764  15C6                     l2472:
  4765                           
  4766                           ;./configs.h: 29:     T0CS = 0;
  4767  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  4768  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  4769  15C8  1281               	bcf	1,5	;volatile
  4770  15C9                     l2474:
  4771                           
  4772                           ;./configs.h: 30:     T0SE = 0;
  4773  15C9  1201               	bcf	1,4	;volatile
  4774  15CA                     l107:
  4775  15CA  0008               	return
  4776  15CB                     __end_of_config_timer:
  4777                           
  4778                           	psect	text13
  4779  1580                     __ptext13:	
  4780 ;; *************** function _config_ports *****************
  4781 ;; Defined at:
  4782 ;;		line 1 in file "./configs.h"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         0       0       0       0       0
  4797 ;;      Locals:         0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0
  4799 ;;      Totals:         0       0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 4
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_config
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _config_ports
  4812  1580                     _config_ports:
  4813  1580                     l2440:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _config_ports: [wreg+status,2]
  4816                           
  4817                           
  4818                           ;./configs.h: 2:     TRISB = 0b01111111;
  4819  1580  307F               	movlw	127
  4820  1581  1683               	bsf	3,5	;RP0=1, select bank1
  4821  1582  1303               	bcf	3,6	;RP1=0, select bank1
  4822  1583  0086               	movwf	6	;volatile
  4823  1584                     l2442:
  4824                           
  4825                           ;./configs.h: 3:     TRISD = 0;
  4826  1584  0188               	clrf	8	;volatile
  4827  1585                     l2444:
  4828                           
  4829                           ;./configs.h: 4:     TRISC = 0b00001111;
  4830  1585  300F               	movlw	15
  4831  1586  0087               	movwf	7	;volatile
  4832  1587                     l2446:
  4833                           
  4834                           ;./configs.h: 5:     OPTION_REG = 0b01111111;
  4835  1587  307F               	movlw	127
  4836  1588  0081               	movwf	1	;volatile
  4837  1589                     l2448:
  4838                           
  4839                           ;./configs.h: 6:     OPTION_REGbits.INTEDG = 1;
  4840  1589  1701               	bsf	1,6	;volatile
  4841  158A                     l2450:
  4842                           
  4843                           ;./configs.h: 7:     INTCONbits.GIE = 1;
  4844  158A  178B               	bsf	11,7	;volatile
  4845  158B                     l2452:
  4846                           
  4847                           ;./configs.h: 8:     INTCONbits.INTE=1;
  4848  158B  160B               	bsf	11,4	;volatile
  4849  158C                     l2454:
  4850                           
  4851                           ;./configs.h: 9:     INTCONbits.PEIE = 1;
  4852  158C  170B               	bsf	11,6	;volatile
  4853  158D                     l2456:
  4854                           
  4855                           ;./configs.h: 10:     PIE1bits.TMR1IE = 1;
  4856  158D  140C               	bsf	12,0	;volatile
  4857  158E                     l104:
  4858  158E  0008               	return
  4859  158F                     __end_of_config_ports:
  4860                           
  4861                           	psect	text14
  4862  159F                     __ptext14:	
  4863 ;; *************** function _config_ac *****************
  4864 ;; Defined at:
  4865 ;;		line 36 in file "./configs.h"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		status,2
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4879 ;;      Params:         0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 4
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_config
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _config_ac
  4895  159F                     _config_ac:
  4896  159F                     l2476:	
  4897                           ;incstack = 0
  4898                           ; Regs used in _config_ac: [status,2]
  4899                           
  4900                           
  4901                           ;./configs.h: 37:     ADCON1bits.PCFG0 = 1;
  4902  159F  1683               	bsf	3,5	;RP0=1, select bank1
  4903  15A0  1303               	bcf	3,6	;RP1=0, select bank1
  4904  15A1  141F               	bsf	31,0	;volatile
  4905                           
  4906                           ;./configs.h: 38:     ADCON1bits.PCFG1 = 1;
  4907  15A2  149F               	bsf	31,1	;volatile
  4908                           
  4909                           ;./configs.h: 39:     ADCON1bits.PCFG2 = 1;
  4910  15A3  151F               	bsf	31,2	;volatile
  4911                           
  4912                           ;./configs.h: 40:     ADCON1bits.PCFG3 = 1;
  4913  15A4  159F               	bsf	31,3	;volatile
  4914                           
  4915                           ;./configs.h: 43:     ADCON0bits.ADCS0 = 0;
  4916  15A5  1283               	bcf	3,5	;RP0=0, select bank0
  4917  15A6  1303               	bcf	3,6	;RP1=0, select bank0
  4918  15A7  131F               	bcf	31,6	;volatile
  4919                           
  4920                           ;./configs.h: 44:     ADCON0bits.ADCS1 = 0;
  4921  15A8  139F               	bcf	31,7	;volatile
  4922                           
  4923                           ;./configs.h: 46:     ADCON1bits.ADFM = 0;
  4924  15A9  1683               	bsf	3,5	;RP0=1, select bank1
  4925  15AA  1303               	bcf	3,6	;RP1=0, select bank1
  4926  15AB  139F               	bcf	31,7	;volatile
  4927  15AC                     l2478:
  4928                           
  4929                           ;./configs.h: 53:     ADRESH = 0x00;
  4930  15AC  1283               	bcf	3,5	;RP0=0, select bank0
  4931  15AD  1303               	bcf	3,6	;RP1=0, select bank0
  4932  15AE  019E               	clrf	30	;volatile
  4933  15AF                     l2480:
  4934                           
  4935                           ;./configs.h: 54:     ADCON0bits.ADON = 1;
  4936  15AF  141F               	bsf	31,0	;volatile
  4937  15B0                     l2482:
  4938                           
  4939                           ;./configs.h: 56:     ADCON0bits.CHS0 = 0;
  4940  15B0  119F               	bcf	31,3	;volatile
  4941  15B1                     l2484:
  4942                           
  4943                           ;./configs.h: 57:     ADCON0bits.CHS1 = 0;
  4944  15B1  121F               	bcf	31,4	;volatile
  4945  15B2                     l2486:
  4946                           
  4947                           ;./configs.h: 58:     ADCON0bits.CHS2 = 0;
  4948  15B2  129F               	bcf	31,5	;volatile
  4949  15B3                     l110:
  4950  15B3  0008               	return
  4951  15B4                     __end_of_config_ac:
  4952                           
  4953                           	psect	text15
  4954  0B99                     __ptext15:	
  4955 ;; *************** function _alarme *****************
  4956 ;; Defined at:
  4957 ;;		line 103 in file "main.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  i               2   31[BANK0 ] int 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4971 ;;      Params:         0       0       0       0       0
  4972 ;;      Locals:         0       2       0       0       0
  4973 ;;      Temps:          0       3       0       0       0
  4974 ;;      Totals:         0       5       0       0       0
  4975 ;;Total ram usage:        5 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 8
  4978 ;; This function calls:
  4979 ;;		_Lcd_Clear
  4980 ;;		_Lcd_Set_Cursor
  4981 ;;		_Lcd_Write_String
  4982 ;;		_password_validator
  4983 ;;		_teclado
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _alarme
  4991  0B99                     _alarme:
  4992  0B99                     l2852:	
  4993                           ;incstack = 0
  4994 ;; hardware stack exceeded
  4995                           ; Regs used in _alarme: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4996                           
  4997                           
  4998                           ;main.c: 105:     if (PORTBbits.RB4 || !Alarme_armado)
  4999  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0B9B  1A06               	btfsc	6,4	;volatile
  5002  0B9C  2B9E               	goto	u3571
  5003  0B9D  2B9F               	goto	u3570
  5004  0B9E                     u3571:
  5005  0B9E  2C42               	goto	l150
  5006  0B9F                     u3570:
  5007  0B9F                     l2854:
  5008  0B9F  18FC               	btfsc	_Alarme_armado/(0+8),_Alarme_armado& (0+7)
  5009  0BA0  2BA2               	goto	u3581
  5010  0BA1  2BA3               	goto	u3580
  5011  0BA2                     u3581:
  5012  0BA2  2BA4               	goto	l147
  5013  0BA3                     u3580:
  5014  0BA3  2C42               	goto	l150
  5015  0BA4                     l147:
  5016  0BA4  0064               	clrwdt	;# 
  5017                           
  5018                           ;main.c: 110:     if (!Alarme_ativo) {
  5019  0BA5  187C               	btfsc	_Alarme_ativo/(0+8),_Alarme_ativo& (0+7)
  5020  0BA6  2BA8               	goto	u3591
  5021  0BA7  2BA9               	goto	u3590
  5022  0BA8                     u3591:
  5023  0BA8  2BAD               	goto	l151
  5024  0BA9                     u3590:
  5025  0BA9                     l2856:
  5026                           
  5027                           ;main.c: 111:         T1CONbits.TMR1ON = 1;
  5028  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  5029  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  5030  0BAB  1410               	bsf	16,0	;volatile
  5031                           
  5032                           ;main.c: 112:         Alarme_ativo = 1;
  5033  0BAC  147C               	bsf	_Alarme_ativo/(0+8),_Alarme_ativo& (0+7)
  5034  0BAD                     l151:	
  5035                           ;main.c: 113:     }
  5036                           
  5037                           
  5038                           ;main.c: 115:     PORTBbits.RB7 = 0;
  5039  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0BAF  1386               	bcf	6,7	;volatile
  5042  0BB0  0064               	clrwdt	;# 
  5043                           
  5044                           ;main.c: 118:     PORTDbits.RD0 = 1;
  5045  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0BB3  1408               	bsf	8,0	;volatile
  5048  0BB4                     l2858:
  5049                           
  5050                           ;main.c: 119:     _delay((unsigned long)((400)*(4000000/4000.0)));
  5051  0BB4  3003               	movlw	3
  5052  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  5053  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  5054  0BB7  00BE               	movwf	??_alarme+2
  5055  0BB8  3008               	movlw	8
  5056  0BB9  00BD               	movwf	??_alarme+1
  5057  0BBA  3076               	movlw	118
  5058  0BBB  00BC               	movwf	??_alarme
  5059  0BBC                     u3987:
  5060  0BBC  0BBC               	decfsz	??_alarme,f
  5061  0BBD  2BBC               	goto	u3987
  5062  0BBE  0BBD               	decfsz	??_alarme+1,f
  5063  0BBF  2BBC               	goto	u3987
  5064  0BC0  0BBE               	decfsz	??_alarme+2,f
  5065  0BC1  2BBC               	goto	u3987
  5066  0BC2  0000               	nop
  5067  0BC3                     l2860:
  5068                           
  5069                           ;main.c: 120:     PORTBbits.RB7 = 1;
  5070  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0BC5  1786               	bsf	6,7	;volatile
  5073  0BC6                     l2862:
  5074                           
  5075                           ;main.c: 121:     PORTDbits.RD0 = 0;
  5076  0BC6  1008               	bcf	8,0	;volatile
  5077  0BC7  0064               	clrwdt	;# 
  5078  0BC8                     l2864:
  5079                           
  5080                           ;main.c: 124:     Lcd_Clear();
  5081  0BC8  160A  118A  2573  120A  158A  	fcall	_Lcd_Clear
  5082  0BCD                     l2866:
  5083                           
  5084                           ;main.c: 125:     Lcd_Set_Cursor(1, 1);
  5085  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0BCF  01AB               	clrf	Lcd_Set_Cursor@b
  5088  0BD0  0AAB               	incf	Lcd_Set_Cursor@b,f
  5089  0BD1  3001               	movlw	1
  5090  0BD2  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  5091  0BD7                     l2868:
  5092                           
  5093                           ;main.c: 126:     Lcd_Write_String("Digite a senha:");
  5094  0BD7  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5095  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5096  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5097  0BDA  00AC               	movwf	Lcd_Write_String@a
  5098  0BDB  3080               	movlw	128
  5099  0BDC  00AD               	movwf	Lcd_Write_String@a+1
  5100  0BDD  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  5101  0BE2                     l2870:
  5102                           
  5103                           ;main.c: 127:     Lcd_Set_Cursor(2, 1);
  5104  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  5105  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  5106  0BE4  01AB               	clrf	Lcd_Set_Cursor@b
  5107  0BE5  0AAB               	incf	Lcd_Set_Cursor@b,f
  5108  0BE6  3002               	movlw	2
  5109  0BE7  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  5110  0BEC                     l152:	
  5111                           ;main.c: 128:     while (1) {
  5112                           
  5113  0BEC  0064               	clrwdt	;# 
  5114  0BED                     l2872:
  5115                           
  5116                           ;main.c: 130:         if (size == 4) {
  5117  0BED  3004               	movlw	4
  5118  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0BF0  0666               	xorwf	_size,w
  5121  0BF1  0467               	iorwf	_size+1,w
  5122  0BF2  1D03               	btfss	3,2
  5123  0BF3  2BF5               	goto	u3601
  5124  0BF4  2BF6               	goto	u3600
  5125  0BF5                     u3601:
  5126  0BF5  2C2C               	goto	l2888
  5127  0BF6                     u3600:
  5128  0BF6                     l2874:
  5129                           
  5130                           ;main.c: 131:             int i = password_validator();
  5131  0BF6  120A  118A  2617  120A  158A  	fcall	_password_validator
  5132  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  5133  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  5134  0BFD  0834               	movf	?_password_validator+1,w
  5135  0BFE  00C0               	movwf	alarme@i+1
  5136  0BFF  0833               	movf	?_password_validator,w
  5137  0C00  00BF               	movwf	alarme@i
  5138  0C01                     l2876:
  5139                           
  5140                           ;main.c: 132:             if (i)
  5141  0C01  083F               	movf	alarme@i,w
  5142  0C02  0440               	iorwf	alarme@i+1,w
  5143  0C03  1903               	btfsc	3,2
  5144  0C04  2C06               	goto	u3611
  5145  0C05  2C07               	goto	u3610
  5146  0C06                     u3611:
  5147  0C06  2C08               	goto	l2882
  5148  0C07                     u3610:
  5149  0C07  2C32               	goto	l155
  5150  0C08                     l2882:
  5151                           
  5152                           ;main.c: 135:                 Lcd_Clear();
  5153  0C08  160A  118A  2573  120A  158A  	fcall	_Lcd_Clear
  5154                           
  5155                           ;main.c: 136:                 Lcd_Set_Cursor(1, 1);
  5156  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0C0F  01AB               	clrf	Lcd_Set_Cursor@b
  5159  0C10  0AAB               	incf	Lcd_Set_Cursor@b,f
  5160  0C11  3001               	movlw	1
  5161  0C12  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  5162  0C17                     l2884:
  5163                           
  5164                           ;main.c: 137:                 Lcd_Write_String("Digite a senha:");
  5165  0C17  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  5166  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  5167  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  5168  0C1A  00AC               	movwf	Lcd_Write_String@a
  5169  0C1B  3080               	movlw	128
  5170  0C1C  00AD               	movwf	Lcd_Write_String@a+1
  5171  0C1D  160A  118A  2722  120A  158A  	fcall	_Lcd_Write_String
  5172  0C22                     l2886:
  5173                           
  5174                           ;main.c: 138:                 Lcd_Set_Cursor(2, 1);
  5175  0C22  1283               	bcf	3,5	;RP0=0, select bank0
  5176  0C23  1303               	bcf	3,6	;RP1=0, select bank0
  5177  0C24  01AB               	clrf	Lcd_Set_Cursor@b
  5178  0C25  0AAB               	incf	Lcd_Set_Cursor@b,f
  5179  0C26  3002               	movlw	2
  5180  0C27  120A  158A  20B5  120A  158A  	fcall	_Lcd_Set_Cursor
  5181  0C2C                     l2888:
  5182                           
  5183                           ;main.c: 143:         teclado();
  5184  0C2C  120A  158A  25EC  120A  158A  	fcall	_teclado
  5185  0C31  2BEC               	goto	l152
  5186  0C32                     l155:
  5187  0C32  0064               	clrwdt	;# 
  5188  0C33                     l2890:
  5189                           
  5190                           ;main.c: 147:     _delay((unsigned long)((300)*(4000000/4000.0)));
  5191  0C33  3002               	movlw	2
  5192  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0C36  00BE               	movwf	??_alarme+2
  5195  0C37  3086               	movlw	134
  5196  0C38  00BD               	movwf	??_alarme+1
  5197  0C39  3098               	movlw	152
  5198  0C3A  00BC               	movwf	??_alarme
  5199  0C3B                     u3997:
  5200  0C3B  0BBC               	decfsz	??_alarme,f
  5201  0C3C  2C3B               	goto	u3997
  5202  0C3D  0BBD               	decfsz	??_alarme+1,f
  5203  0C3E  2C3B               	goto	u3997
  5204  0C3F  0BBE               	decfsz	??_alarme+2,f
  5205  0C40  2C3B               	goto	u3997
  5206  0C41  0000               	nop
  5207  0C42                     l150:
  5208  0C42  0008               	return
  5209  0C43                     __end_of_alarme:
  5210                           
  5211                           	psect	text16
  5212  0DEC                     __ptext16:	
  5213 ;; *************** function _teclado *****************
  5214 ;; Defined at:
  5215 ;;		line 222 in file "main.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         0       0       0       0       0
  5230 ;;      Locals:         0       0       0       0       0
  5231 ;;      Temps:          0       3       0       0       0
  5232 ;;      Totals:         0       3       0       0       0
  5233 ;;Total ram usage:        3 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 6
  5236 ;; This function calls:
  5237 ;;		_Lcd_Write_Char
  5238 ;; This function is called by:
  5239 ;;		_alarme
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function _teclado
  5245  0DEC                     _teclado:
  5246  0DEC                     l2568:	
  5247                           ;incstack = 0
  5248                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5249                           
  5250  0DEC  0064               	clrwdt	;# 
  5251                           
  5252                           ;main.c: 224:     PORTCbits.RC5 = PORTCbits.RC6 = PORTCbits.RC7 = 0;
  5253  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0DEF  1387               	bcf	7,7	;volatile
  5256  0DF0  1307               	bcf	7,6	;volatile
  5257  0DF1  1287               	bcf	7,5	;volatile
  5258                           
  5259                           ;main.c: 225:     PORTCbits.RC4 = 1;
  5260  0DF2  1607               	bsf	7,4	;volatile
  5261                           
  5262                           ;main.c: 226:     if (PORTCbits.RC3 == 1) {
  5263  0DF3  1D87               	btfss	7,3	;volatile
  5264  0DF4  2DF6               	goto	u3231
  5265  0DF5  2DF7               	goto	u3230
  5266  0DF6                     u3231:
  5267  0DF6  2E1C               	goto	l2578
  5268  0DF7                     u3230:
  5269  0DF7                     l2570:
  5270                           
  5271                           ;main.c: 227:         password[size] = 1;
  5272  0DF7  0866               	movf	_size,w
  5273  0DF8  00AC               	movwf	??_teclado
  5274  0DF9  072C               	addwf	??_teclado,w
  5275  0DFA  3ED2               	addlw	(low (_password| 0))& (0+255)
  5276  0DFB  0084               	movwf	4
  5277  0DFC  3001               	movlw	1
  5278  0DFD  1383               	bcf	3,7	;select IRP bank1
  5279  0DFE  0080               	movwf	0
  5280  0DFF  0A84               	incf	4,f
  5281  0E00  3000               	movlw	0
  5282  0E01  0080               	movwf	0
  5283  0E02                     l2572:
  5284                           
  5285                           ;main.c: 228:         size++;
  5286  0E02  3001               	movlw	1
  5287  0E03  07E6               	addwf	_size,f
  5288  0E04  1803               	skipnc
  5289  0E05  0AE7               	incf	_size+1,f
  5290  0E06  3000               	movlw	0
  5291  0E07  07E7               	addwf	_size+1,f
  5292  0E08                     l2574:
  5293                           
  5294                           ;main.c: 229:         Lcd_Write_Char('1');
  5295  0E08  3031               	movlw	49
  5296  0E09  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5297  0E0E                     l2576:
  5298                           
  5299                           ;main.c: 230:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5300  0E0E  3003               	movlw	3
  5301  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0E11  00AE               	movwf	??_teclado+2
  5304  0E12  308A               	movlw	138
  5305  0E13  00AD               	movwf	??_teclado+1
  5306  0E14  3055               	movlw	85
  5307  0E15  00AC               	movwf	??_teclado
  5308  0E16                     u4007:
  5309  0E16  0BAC               	decfsz	??_teclado,f
  5310  0E17  2E16               	goto	u4007
  5311  0E18  0BAD               	decfsz	??_teclado+1,f
  5312  0E19  2E16               	goto	u4007
  5313  0E1A  0BAE               	decfsz	??_teclado+2,f
  5314  0E1B  2E16               	goto	u4007
  5315  0E1C                     l2578:
  5316                           
  5317                           ;main.c: 232:     if (PORTCbits.RC1 == 1) {
  5318  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0E1E  1C87               	btfss	7,1	;volatile
  5321  0E1F  2E21               	goto	u3241
  5322  0E20  2E22               	goto	u3240
  5323  0E21                     u3241:
  5324  0E21  2E47               	goto	l2588
  5325  0E22                     u3240:
  5326  0E22                     l2580:
  5327                           
  5328                           ;main.c: 233:         password[size] = 2;
  5329  0E22  0866               	movf	_size,w
  5330  0E23  00AC               	movwf	??_teclado
  5331  0E24  072C               	addwf	??_teclado,w
  5332  0E25  3ED2               	addlw	(low (_password| 0))& (0+255)
  5333  0E26  0084               	movwf	4
  5334  0E27  3002               	movlw	2
  5335  0E28  1383               	bcf	3,7	;select IRP bank1
  5336  0E29  0080               	movwf	0
  5337  0E2A  0A84               	incf	4,f
  5338  0E2B  3000               	movlw	0
  5339  0E2C  0080               	movwf	0
  5340  0E2D                     l2582:
  5341                           
  5342                           ;main.c: 234:         size++;
  5343  0E2D  3001               	movlw	1
  5344  0E2E  07E6               	addwf	_size,f
  5345  0E2F  1803               	skipnc
  5346  0E30  0AE7               	incf	_size+1,f
  5347  0E31  3000               	movlw	0
  5348  0E32  07E7               	addwf	_size+1,f
  5349  0E33                     l2584:
  5350                           
  5351                           ;main.c: 235:         Lcd_Write_Char('2');
  5352  0E33  3032               	movlw	50
  5353  0E34  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5354  0E39                     l2586:
  5355                           
  5356                           ;main.c: 236:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5357  0E39  3003               	movlw	3
  5358  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  5359  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  5360  0E3C  00AE               	movwf	??_teclado+2
  5361  0E3D  308A               	movlw	138
  5362  0E3E  00AD               	movwf	??_teclado+1
  5363  0E3F  3055               	movlw	85
  5364  0E40  00AC               	movwf	??_teclado
  5365  0E41                     u4017:
  5366  0E41  0BAC               	decfsz	??_teclado,f
  5367  0E42  2E41               	goto	u4017
  5368  0E43  0BAD               	decfsz	??_teclado+1,f
  5369  0E44  2E41               	goto	u4017
  5370  0E45  0BAE               	decfsz	??_teclado+2,f
  5371  0E46  2E41               	goto	u4017
  5372  0E47                     l2588:
  5373                           
  5374                           ;main.c: 238:     if (PORTCbits.RC2 == 1) {
  5375  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  5376  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  5377  0E49  1D07               	btfss	7,2	;volatile
  5378  0E4A  2E4C               	goto	u3251
  5379  0E4B  2E4D               	goto	u3250
  5380  0E4C                     u3251:
  5381  0E4C  2E72               	goto	l2598
  5382  0E4D                     u3250:
  5383  0E4D                     l2590:
  5384                           
  5385                           ;main.c: 239:         password[size] = 3;
  5386  0E4D  0866               	movf	_size,w
  5387  0E4E  00AC               	movwf	??_teclado
  5388  0E4F  072C               	addwf	??_teclado,w
  5389  0E50  3ED2               	addlw	(low (_password| 0))& (0+255)
  5390  0E51  0084               	movwf	4
  5391  0E52  3003               	movlw	3
  5392  0E53  1383               	bcf	3,7	;select IRP bank1
  5393  0E54  0080               	movwf	0
  5394  0E55  0A84               	incf	4,f
  5395  0E56  3000               	movlw	0
  5396  0E57  0080               	movwf	0
  5397  0E58                     l2592:
  5398                           
  5399                           ;main.c: 240:         size++;
  5400  0E58  3001               	movlw	1
  5401  0E59  07E6               	addwf	_size,f
  5402  0E5A  1803               	skipnc
  5403  0E5B  0AE7               	incf	_size+1,f
  5404  0E5C  3000               	movlw	0
  5405  0E5D  07E7               	addwf	_size+1,f
  5406  0E5E                     l2594:
  5407                           
  5408                           ;main.c: 241:         Lcd_Write_Char('3');
  5409  0E5E  3033               	movlw	51
  5410  0E5F  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5411  0E64                     l2596:
  5412                           
  5413                           ;main.c: 242:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5414  0E64  3003               	movlw	3
  5415  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0E67  00AE               	movwf	??_teclado+2
  5418  0E68  308A               	movlw	138
  5419  0E69  00AD               	movwf	??_teclado+1
  5420  0E6A  3055               	movlw	85
  5421  0E6B  00AC               	movwf	??_teclado
  5422  0E6C                     u4027:
  5423  0E6C  0BAC               	decfsz	??_teclado,f
  5424  0E6D  2E6C               	goto	u4027
  5425  0E6E  0BAD               	decfsz	??_teclado+1,f
  5426  0E6F  2E6C               	goto	u4027
  5427  0E70  0BAE               	decfsz	??_teclado+2,f
  5428  0E71  2E6C               	goto	u4027
  5429  0E72                     l2598:
  5430                           
  5431                           ;main.c: 245:     PORTCbits.RC4 = PORTCbits.RC6 = PORTCbits.RC7 = 0;
  5432  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0E74  1387               	bcf	7,7	;volatile
  5435  0E75  1307               	bcf	7,6	;volatile
  5436  0E76  1207               	bcf	7,4	;volatile
  5437  0E77                     l2600:
  5438                           
  5439                           ;main.c: 246:     PORTCbits.RC5 = 1;
  5440  0E77  1687               	bsf	7,5	;volatile
  5441  0E78                     l2602:
  5442                           
  5443                           ;main.c: 247:     if (PORTCbits.RC3 == 1) {
  5444  0E78  1D87               	btfss	7,3	;volatile
  5445  0E79  2E7B               	goto	u3261
  5446  0E7A  2E7C               	goto	u3260
  5447  0E7B                     u3261:
  5448  0E7B  2EA1               	goto	l2612
  5449  0E7C                     u3260:
  5450  0E7C                     l2604:
  5451                           
  5452                           ;main.c: 248:         password[size] = 4;
  5453  0E7C  0866               	movf	_size,w
  5454  0E7D  00AC               	movwf	??_teclado
  5455  0E7E  072C               	addwf	??_teclado,w
  5456  0E7F  3ED2               	addlw	(low (_password| 0))& (0+255)
  5457  0E80  0084               	movwf	4
  5458  0E81  3004               	movlw	4
  5459  0E82  1383               	bcf	3,7	;select IRP bank1
  5460  0E83  0080               	movwf	0
  5461  0E84  0A84               	incf	4,f
  5462  0E85  3000               	movlw	0
  5463  0E86  0080               	movwf	0
  5464  0E87                     l2606:
  5465                           
  5466                           ;main.c: 249:         size++;
  5467  0E87  3001               	movlw	1
  5468  0E88  07E6               	addwf	_size,f
  5469  0E89  1803               	skipnc
  5470  0E8A  0AE7               	incf	_size+1,f
  5471  0E8B  3000               	movlw	0
  5472  0E8C  07E7               	addwf	_size+1,f
  5473  0E8D                     l2608:
  5474                           
  5475                           ;main.c: 250:         Lcd_Write_Char('4');
  5476  0E8D  3034               	movlw	52
  5477  0E8E  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5478  0E93                     l2610:
  5479                           
  5480                           ;main.c: 251:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5481  0E93  3003               	movlw	3
  5482  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0E96  00AE               	movwf	??_teclado+2
  5485  0E97  308A               	movlw	138
  5486  0E98  00AD               	movwf	??_teclado+1
  5487  0E99  3055               	movlw	85
  5488  0E9A  00AC               	movwf	??_teclado
  5489  0E9B                     u4037:
  5490  0E9B  0BAC               	decfsz	??_teclado,f
  5491  0E9C  2E9B               	goto	u4037
  5492  0E9D  0BAD               	decfsz	??_teclado+1,f
  5493  0E9E  2E9B               	goto	u4037
  5494  0E9F  0BAE               	decfsz	??_teclado+2,f
  5495  0EA0  2E9B               	goto	u4037
  5496  0EA1                     l2612:
  5497                           
  5498                           ;main.c: 253:     if (PORTCbits.RC1 == 1) {
  5499  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  5500  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  5501  0EA3  1C87               	btfss	7,1	;volatile
  5502  0EA4  2EA6               	goto	u3271
  5503  0EA5  2EA7               	goto	u3270
  5504  0EA6                     u3271:
  5505  0EA6  2ECC               	goto	l2622
  5506  0EA7                     u3270:
  5507  0EA7                     l2614:
  5508                           
  5509                           ;main.c: 254:         password[size] = 5;
  5510  0EA7  0866               	movf	_size,w
  5511  0EA8  00AC               	movwf	??_teclado
  5512  0EA9  072C               	addwf	??_teclado,w
  5513  0EAA  3ED2               	addlw	(low (_password| 0))& (0+255)
  5514  0EAB  0084               	movwf	4
  5515  0EAC  3005               	movlw	5
  5516  0EAD  1383               	bcf	3,7	;select IRP bank1
  5517  0EAE  0080               	movwf	0
  5518  0EAF  0A84               	incf	4,f
  5519  0EB0  3000               	movlw	0
  5520  0EB1  0080               	movwf	0
  5521  0EB2                     l2616:
  5522                           
  5523                           ;main.c: 255:         size++;
  5524  0EB2  3001               	movlw	1
  5525  0EB3  07E6               	addwf	_size,f
  5526  0EB4  1803               	skipnc
  5527  0EB5  0AE7               	incf	_size+1,f
  5528  0EB6  3000               	movlw	0
  5529  0EB7  07E7               	addwf	_size+1,f
  5530  0EB8                     l2618:
  5531                           
  5532                           ;main.c: 256:         Lcd_Write_Char('5');
  5533  0EB8  3035               	movlw	53
  5534  0EB9  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5535  0EBE                     l2620:
  5536                           
  5537                           ;main.c: 257:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5538  0EBE  3003               	movlw	3
  5539  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0EC1  00AE               	movwf	??_teclado+2
  5542  0EC2  308A               	movlw	138
  5543  0EC3  00AD               	movwf	??_teclado+1
  5544  0EC4  3055               	movlw	85
  5545  0EC5  00AC               	movwf	??_teclado
  5546  0EC6                     u4047:
  5547  0EC6  0BAC               	decfsz	??_teclado,f
  5548  0EC7  2EC6               	goto	u4047
  5549  0EC8  0BAD               	decfsz	??_teclado+1,f
  5550  0EC9  2EC6               	goto	u4047
  5551  0ECA  0BAE               	decfsz	??_teclado+2,f
  5552  0ECB  2EC6               	goto	u4047
  5553  0ECC                     l2622:
  5554                           
  5555                           ;main.c: 259:     if (PORTCbits.RC2 == 1) {
  5556  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  5557  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  5558  0ECE  1D07               	btfss	7,2	;volatile
  5559  0ECF  2ED1               	goto	u3281
  5560  0ED0  2ED2               	goto	u3280
  5561  0ED1                     u3281:
  5562  0ED1  2EF7               	goto	l2632
  5563  0ED2                     u3280:
  5564  0ED2                     l2624:
  5565                           
  5566                           ;main.c: 260:         password[size] = 6;
  5567  0ED2  0866               	movf	_size,w
  5568  0ED3  00AC               	movwf	??_teclado
  5569  0ED4  072C               	addwf	??_teclado,w
  5570  0ED5  3ED2               	addlw	(low (_password| 0))& (0+255)
  5571  0ED6  0084               	movwf	4
  5572  0ED7  3006               	movlw	6
  5573  0ED8  1383               	bcf	3,7	;select IRP bank1
  5574  0ED9  0080               	movwf	0
  5575  0EDA  0A84               	incf	4,f
  5576  0EDB  3000               	movlw	0
  5577  0EDC  0080               	movwf	0
  5578  0EDD                     l2626:
  5579                           
  5580                           ;main.c: 261:         size++;
  5581  0EDD  3001               	movlw	1
  5582  0EDE  07E6               	addwf	_size,f
  5583  0EDF  1803               	skipnc
  5584  0EE0  0AE7               	incf	_size+1,f
  5585  0EE1  3000               	movlw	0
  5586  0EE2  07E7               	addwf	_size+1,f
  5587  0EE3                     l2628:
  5588                           
  5589                           ;main.c: 262:         Lcd_Write_Char('6');
  5590  0EE3  3036               	movlw	54
  5591  0EE4  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5592  0EE9                     l2630:
  5593                           
  5594                           ;main.c: 263:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5595  0EE9  3003               	movlw	3
  5596  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  5597  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  5598  0EEC  00AE               	movwf	??_teclado+2
  5599  0EED  308A               	movlw	138
  5600  0EEE  00AD               	movwf	??_teclado+1
  5601  0EEF  3055               	movlw	85
  5602  0EF0  00AC               	movwf	??_teclado
  5603  0EF1                     u4057:
  5604  0EF1  0BAC               	decfsz	??_teclado,f
  5605  0EF2  2EF1               	goto	u4057
  5606  0EF3  0BAD               	decfsz	??_teclado+1,f
  5607  0EF4  2EF1               	goto	u4057
  5608  0EF5  0BAE               	decfsz	??_teclado+2,f
  5609  0EF6  2EF1               	goto	u4057
  5610  0EF7                     l2632:
  5611                           
  5612                           ;main.c: 266:     PORTCbits.RC4 = PORTCbits.RC5 = PORTCbits.RC7 = 0;
  5613  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  5614  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  5615  0EF9  1387               	bcf	7,7	;volatile
  5616  0EFA  1287               	bcf	7,5	;volatile
  5617  0EFB  1207               	bcf	7,4	;volatile
  5618  0EFC                     l2634:
  5619                           
  5620                           ;main.c: 267:     PORTCbits.RC6 = 1;
  5621  0EFC  1707               	bsf	7,6	;volatile
  5622  0EFD                     l2636:
  5623                           
  5624                           ;main.c: 268:     if (PORTCbits.RC3 == 1) {
  5625  0EFD  1D87               	btfss	7,3	;volatile
  5626  0EFE  2F00               	goto	u3291
  5627  0EFF  2F01               	goto	u3290
  5628  0F00                     u3291:
  5629  0F00  2F26               	goto	l2646
  5630  0F01                     u3290:
  5631  0F01                     l2638:
  5632                           
  5633                           ;main.c: 269:         password[size] = 7;
  5634  0F01  0866               	movf	_size,w
  5635  0F02  00AC               	movwf	??_teclado
  5636  0F03  072C               	addwf	??_teclado,w
  5637  0F04  3ED2               	addlw	(low (_password| 0))& (0+255)
  5638  0F05  0084               	movwf	4
  5639  0F06  3007               	movlw	7
  5640  0F07  1383               	bcf	3,7	;select IRP bank1
  5641  0F08  0080               	movwf	0
  5642  0F09  0A84               	incf	4,f
  5643  0F0A  3000               	movlw	0
  5644  0F0B  0080               	movwf	0
  5645  0F0C                     l2640:
  5646                           
  5647                           ;main.c: 270:         size++;
  5648  0F0C  3001               	movlw	1
  5649  0F0D  07E6               	addwf	_size,f
  5650  0F0E  1803               	skipnc
  5651  0F0F  0AE7               	incf	_size+1,f
  5652  0F10  3000               	movlw	0
  5653  0F11  07E7               	addwf	_size+1,f
  5654  0F12                     l2642:
  5655                           
  5656                           ;main.c: 271:         Lcd_Write_Char('7');
  5657  0F12  3037               	movlw	55
  5658  0F13  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5659  0F18                     l2644:
  5660                           
  5661                           ;main.c: 272:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5662  0F18  3003               	movlw	3
  5663  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  5664  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  5665  0F1B  00AE               	movwf	??_teclado+2
  5666  0F1C  308A               	movlw	138
  5667  0F1D  00AD               	movwf	??_teclado+1
  5668  0F1E  3055               	movlw	85
  5669  0F1F  00AC               	movwf	??_teclado
  5670  0F20                     u4067:
  5671  0F20  0BAC               	decfsz	??_teclado,f
  5672  0F21  2F20               	goto	u4067
  5673  0F22  0BAD               	decfsz	??_teclado+1,f
  5674  0F23  2F20               	goto	u4067
  5675  0F24  0BAE               	decfsz	??_teclado+2,f
  5676  0F25  2F20               	goto	u4067
  5677  0F26                     l2646:
  5678                           
  5679                           ;main.c: 274:     if (PORTCbits.RC1 == 1) {
  5680  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  5681  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  5682  0F28  1C87               	btfss	7,1	;volatile
  5683  0F29  2F2B               	goto	u3301
  5684  0F2A  2F2C               	goto	u3300
  5685  0F2B                     u3301:
  5686  0F2B  2F51               	goto	l2656
  5687  0F2C                     u3300:
  5688  0F2C                     l2648:
  5689                           
  5690                           ;main.c: 275:         password[size] = 8;
  5691  0F2C  0866               	movf	_size,w
  5692  0F2D  00AC               	movwf	??_teclado
  5693  0F2E  072C               	addwf	??_teclado,w
  5694  0F2F  3ED2               	addlw	(low (_password| 0))& (0+255)
  5695  0F30  0084               	movwf	4
  5696  0F31  3008               	movlw	8
  5697  0F32  1383               	bcf	3,7	;select IRP bank1
  5698  0F33  0080               	movwf	0
  5699  0F34  0A84               	incf	4,f
  5700  0F35  3000               	movlw	0
  5701  0F36  0080               	movwf	0
  5702  0F37                     l2650:
  5703                           
  5704                           ;main.c: 276:         size++;
  5705  0F37  3001               	movlw	1
  5706  0F38  07E6               	addwf	_size,f
  5707  0F39  1803               	skipnc
  5708  0F3A  0AE7               	incf	_size+1,f
  5709  0F3B  3000               	movlw	0
  5710  0F3C  07E7               	addwf	_size+1,f
  5711  0F3D                     l2652:
  5712                           
  5713                           ;main.c: 277:         Lcd_Write_Char('8');
  5714  0F3D  3038               	movlw	56
  5715  0F3E  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5716  0F43                     l2654:
  5717                           
  5718                           ;main.c: 278:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5719  0F43  3003               	movlw	3
  5720  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  5721  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  5722  0F46  00AE               	movwf	??_teclado+2
  5723  0F47  308A               	movlw	138
  5724  0F48  00AD               	movwf	??_teclado+1
  5725  0F49  3055               	movlw	85
  5726  0F4A  00AC               	movwf	??_teclado
  5727  0F4B                     u4077:
  5728  0F4B  0BAC               	decfsz	??_teclado,f
  5729  0F4C  2F4B               	goto	u4077
  5730  0F4D  0BAD               	decfsz	??_teclado+1,f
  5731  0F4E  2F4B               	goto	u4077
  5732  0F4F  0BAE               	decfsz	??_teclado+2,f
  5733  0F50  2F4B               	goto	u4077
  5734  0F51                     l2656:
  5735                           
  5736                           ;main.c: 280:     if (PORTCbits.RC2 == 1) {
  5737  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5738  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  5739  0F53  1D07               	btfss	7,2	;volatile
  5740  0F54  2F56               	goto	u3311
  5741  0F55  2F57               	goto	u3310
  5742  0F56                     u3311:
  5743  0F56  2F7C               	goto	l2666
  5744  0F57                     u3310:
  5745  0F57                     l2658:
  5746                           
  5747                           ;main.c: 281:         password[size] = 9;
  5748  0F57  0866               	movf	_size,w
  5749  0F58  00AC               	movwf	??_teclado
  5750  0F59  072C               	addwf	??_teclado,w
  5751  0F5A  3ED2               	addlw	(low (_password| 0))& (0+255)
  5752  0F5B  0084               	movwf	4
  5753  0F5C  3009               	movlw	9
  5754  0F5D  1383               	bcf	3,7	;select IRP bank1
  5755  0F5E  0080               	movwf	0
  5756  0F5F  0A84               	incf	4,f
  5757  0F60  3000               	movlw	0
  5758  0F61  0080               	movwf	0
  5759  0F62                     l2660:
  5760                           
  5761                           ;main.c: 282:         size++;
  5762  0F62  3001               	movlw	1
  5763  0F63  07E6               	addwf	_size,f
  5764  0F64  1803               	skipnc
  5765  0F65  0AE7               	incf	_size+1,f
  5766  0F66  3000               	movlw	0
  5767  0F67  07E7               	addwf	_size+1,f
  5768  0F68                     l2662:
  5769                           
  5770                           ;main.c: 283:         Lcd_Write_Char('9');
  5771  0F68  3039               	movlw	57
  5772  0F69  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5773  0F6E                     l2664:
  5774                           
  5775                           ;main.c: 284:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5776  0F6E  3003               	movlw	3
  5777  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  5778  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  5779  0F71  00AE               	movwf	??_teclado+2
  5780  0F72  308A               	movlw	138
  5781  0F73  00AD               	movwf	??_teclado+1
  5782  0F74  3055               	movlw	85
  5783  0F75  00AC               	movwf	??_teclado
  5784  0F76                     u4087:
  5785  0F76  0BAC               	decfsz	??_teclado,f
  5786  0F77  2F76               	goto	u4087
  5787  0F78  0BAD               	decfsz	??_teclado+1,f
  5788  0F79  2F76               	goto	u4087
  5789  0F7A  0BAE               	decfsz	??_teclado+2,f
  5790  0F7B  2F76               	goto	u4087
  5791  0F7C                     l2666:
  5792                           
  5793                           ;main.c: 287:     PORTCbits.RC4 = PORTCbits.RC5 = PORTCbits.RC6 = 0;
  5794  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  5795  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  5796  0F7E  1307               	bcf	7,6	;volatile
  5797  0F7F  1287               	bcf	7,5	;volatile
  5798  0F80  1207               	bcf	7,4	;volatile
  5799  0F81                     l2668:
  5800                           
  5801                           ;main.c: 288:     PORTCbits.RC7 = 1;
  5802  0F81  1787               	bsf	7,7	;volatile
  5803  0F82                     l2670:
  5804                           
  5805                           ;main.c: 289:     if (PORTCbits.RC3 == 1) {
  5806  0F82  1D87               	btfss	7,3	;volatile
  5807  0F83  2F85               	goto	u3321
  5808  0F84  2F86               	goto	u3320
  5809  0F85                     u3321:
  5810  0F85  2FAB               	goto	l2680
  5811  0F86                     u3320:
  5812  0F86                     l2672:
  5813                           
  5814                           ;main.c: 290:         password[size] = 10;
  5815  0F86  0866               	movf	_size,w
  5816  0F87  00AC               	movwf	??_teclado
  5817  0F88  072C               	addwf	??_teclado,w
  5818  0F89  3ED2               	addlw	(low (_password| 0))& (0+255)
  5819  0F8A  0084               	movwf	4
  5820  0F8B  300A               	movlw	10
  5821  0F8C  1383               	bcf	3,7	;select IRP bank1
  5822  0F8D  0080               	movwf	0
  5823  0F8E  0A84               	incf	4,f
  5824  0F8F  3000               	movlw	0
  5825  0F90  0080               	movwf	0
  5826  0F91                     l2674:
  5827                           
  5828                           ;main.c: 291:         size++;
  5829  0F91  3001               	movlw	1
  5830  0F92  07E6               	addwf	_size,f
  5831  0F93  1803               	skipnc
  5832  0F94  0AE7               	incf	_size+1,f
  5833  0F95  3000               	movlw	0
  5834  0F96  07E7               	addwf	_size+1,f
  5835  0F97                     l2676:
  5836                           
  5837                           ;main.c: 292:         Lcd_Write_Char('*');
  5838  0F97  302A               	movlw	42
  5839  0F98  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5840  0F9D                     l2678:
  5841                           
  5842                           ;main.c: 293:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5843  0F9D  3003               	movlw	3
  5844  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  5845  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  5846  0FA0  00AE               	movwf	??_teclado+2
  5847  0FA1  308A               	movlw	138
  5848  0FA2  00AD               	movwf	??_teclado+1
  5849  0FA3  3055               	movlw	85
  5850  0FA4  00AC               	movwf	??_teclado
  5851  0FA5                     u4097:
  5852  0FA5  0BAC               	decfsz	??_teclado,f
  5853  0FA6  2FA5               	goto	u4097
  5854  0FA7  0BAD               	decfsz	??_teclado+1,f
  5855  0FA8  2FA5               	goto	u4097
  5856  0FA9  0BAE               	decfsz	??_teclado+2,f
  5857  0FAA  2FA5               	goto	u4097
  5858  0FAB                     l2680:
  5859                           
  5860                           ;main.c: 295:     if (PORTCbits.RC1 == 1) {
  5861  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  5862  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  5863  0FAD  1C87               	btfss	7,1	;volatile
  5864  0FAE  2FB0               	goto	u3331
  5865  0FAF  2FB1               	goto	u3330
  5866  0FB0                     u3331:
  5867  0FB0  2FD4               	goto	l2690
  5868  0FB1                     u3330:
  5869  0FB1                     l2682:
  5870                           
  5871                           ;main.c: 296:         password[size] = 0;
  5872  0FB1  0866               	movf	_size,w
  5873  0FB2  00AC               	movwf	??_teclado
  5874  0FB3  072C               	addwf	??_teclado,w
  5875  0FB4  3ED2               	addlw	(low (_password| 0))& (0+255)
  5876  0FB5  0084               	movwf	4
  5877  0FB6  1383               	bcf	3,7	;select IRP bank1
  5878  0FB7  0180               	clrf	0
  5879  0FB8  0A84               	incf	4,f
  5880  0FB9  0180               	clrf	0
  5881  0FBA                     l2684:
  5882                           
  5883                           ;main.c: 297:         size++;
  5884  0FBA  3001               	movlw	1
  5885  0FBB  07E6               	addwf	_size,f
  5886  0FBC  1803               	skipnc
  5887  0FBD  0AE7               	incf	_size+1,f
  5888  0FBE  3000               	movlw	0
  5889  0FBF  07E7               	addwf	_size+1,f
  5890  0FC0                     l2686:
  5891                           
  5892                           ;main.c: 298:         Lcd_Write_Char('0');
  5893  0FC0  3030               	movlw	48
  5894  0FC1  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5895  0FC6                     l2688:
  5896                           
  5897                           ;main.c: 299:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5898  0FC6  3003               	movlw	3
  5899  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  5900  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  5901  0FC9  00AE               	movwf	??_teclado+2
  5902  0FCA  308A               	movlw	138
  5903  0FCB  00AD               	movwf	??_teclado+1
  5904  0FCC  3055               	movlw	85
  5905  0FCD  00AC               	movwf	??_teclado
  5906  0FCE                     u4107:
  5907  0FCE  0BAC               	decfsz	??_teclado,f
  5908  0FCF  2FCE               	goto	u4107
  5909  0FD0  0BAD               	decfsz	??_teclado+1,f
  5910  0FD1  2FCE               	goto	u4107
  5911  0FD2  0BAE               	decfsz	??_teclado+2,f
  5912  0FD3  2FCE               	goto	u4107
  5913  0FD4                     l2690:
  5914                           
  5915                           ;main.c: 301:     if (PORTCbits.RC2 == 1) {
  5916  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  5917  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  5918  0FD6  1D07               	btfss	7,2	;volatile
  5919  0FD7  2FD9               	goto	u3341
  5920  0FD8  2FDA               	goto	u3340
  5921  0FD9                     u3341:
  5922  0FD9  2FFF               	goto	l190
  5923  0FDA                     u3340:
  5924  0FDA                     l2692:
  5925                           
  5926                           ;main.c: 302:         password[size] = 12;
  5927  0FDA  0866               	movf	_size,w
  5928  0FDB  00AC               	movwf	??_teclado
  5929  0FDC  072C               	addwf	??_teclado,w
  5930  0FDD  3ED2               	addlw	(low (_password| 0))& (0+255)
  5931  0FDE  0084               	movwf	4
  5932  0FDF  300C               	movlw	12
  5933  0FE0  1383               	bcf	3,7	;select IRP bank1
  5934  0FE1  0080               	movwf	0
  5935  0FE2  0A84               	incf	4,f
  5936  0FE3  3000               	movlw	0
  5937  0FE4  0080               	movwf	0
  5938  0FE5                     l2694:
  5939                           
  5940                           ;main.c: 303:         size++;
  5941  0FE5  3001               	movlw	1
  5942  0FE6  07E6               	addwf	_size,f
  5943  0FE7  1803               	skipnc
  5944  0FE8  0AE7               	incf	_size+1,f
  5945  0FE9  3000               	movlw	0
  5946  0FEA  07E7               	addwf	_size+1,f
  5947  0FEB                     l2696:
  5948                           
  5949                           ;main.c: 304:         Lcd_Write_Char('#');
  5950  0FEB  3023               	movlw	35
  5951  0FEC  160A  118A  26A3  120A  158A  	fcall	_Lcd_Write_Char
  5952  0FF1                     l2698:
  5953                           
  5954                           ;main.c: 305:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5955  0FF1  3003               	movlw	3
  5956  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  5957  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  5958  0FF4  00AE               	movwf	??_teclado+2
  5959  0FF5  308A               	movlw	138
  5960  0FF6  00AD               	movwf	??_teclado+1
  5961  0FF7  3055               	movlw	85
  5962  0FF8  00AC               	movwf	??_teclado
  5963  0FF9                     u4117:
  5964  0FF9  0BAC               	decfsz	??_teclado,f
  5965  0FFA  2FF9               	goto	u4117
  5966  0FFB  0BAD               	decfsz	??_teclado+1,f
  5967  0FFC  2FF9               	goto	u4117
  5968  0FFD  0BAE               	decfsz	??_teclado+2,f
  5969  0FFE  2FF9               	goto	u4117
  5970  0FFF                     l190:
  5971  0FFF  0008               	return
  5972  1000                     __end_of_teclado:
  5973                           
  5974                           	psect	text17
  5975  0617                     __ptext17:	
  5976 ;; *************** function _password_validator *****************
  5977 ;; Defined at:
  5978 ;;		line 309 in file "main.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  i               2   24[BANK0 ] int 
  5983 ;;  i               2   26[BANK0 ] int 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  2   19[BANK0 ] int 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5993 ;;      Params:         0       2       0       0       0
  5994 ;;      Locals:         0       4       0       0       0
  5995 ;;      Temps:          0       3       0       0       0
  5996 ;;      Totals:         0       9       0       0       0
  5997 ;;Total ram usage:        9 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; Hardware stack levels required when called: 7
  6000 ;; This function calls:
  6001 ;;		_Lcd_Clear
  6002 ;;		_Lcd_Set_Cursor
  6003 ;;		_Lcd_Write_String
  6004 ;; This function is called by:
  6005 ;;		_alarme
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _password_validator
  6011  0617                     _password_validator:
  6012  0617                     l2492:	
  6013                           ;incstack = 0
  6014 ;; hardware stack exceeded
  6015                           ; Regs used in _password_validator: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6016                           
  6017  0617  0064               	clrwdt	;# 
  6018  0618                     l2494:
  6019                           
  6020                           ;main.c: 311:     if (password[0] == 1 && password[1] == 2 && password[2] == 3 && passwo
      +                          rd[3] == 4) {
  6021  0618  1683               	bsf	3,5	;RP0=1, select bank1
  6022  0619  1303               	bcf	3,6	;RP1=0, select bank1
  6023  061A  0352               	decf	_password^(0+128),w
  6024  061B  0453               	iorwf	(_password+1)^(0+128),w
  6025  061C  1D03               	btfss	3,2
  6026  061D  2E1F               	goto	u3171
  6027  061E  2E20               	goto	u3170
  6028  061F                     u3171:
  6029  061F  2ECF               	goto	l2542
  6030  0620                     u3170:
  6031  0620                     l2496:
  6032  0620  3002               	movlw	2
  6033  0621  0654               	xorwf	(_password^(0+128)+2),w
  6034  0622  0455               	iorwf	((_password+1)^(0+128)+2),w
  6035  0623  1D03               	btfss	3,2
  6036  0624  2E26               	goto	u3181
  6037  0625  2E27               	goto	u3180
  6038  0626                     u3181:
  6039  0626  2ECF               	goto	l2542
  6040  0627                     u3180:
  6041  0627                     l2498:
  6042  0627  3003               	movlw	3
  6043  0628  0656               	xorwf	(_password^(0+128)+4),w
  6044  0629  0457               	iorwf	((_password+1)^(0+128)+4),w
  6045  062A  1D03               	btfss	3,2
  6046  062B  2E2D               	goto	u3191
  6047  062C  2E2E               	goto	u3190
  6048  062D                     u3191:
  6049  062D  2ECF               	goto	l2542
  6050  062E                     u3190:
  6051  062E                     l2500:
  6052  062E  3004               	movlw	4
  6053  062F  0658               	xorwf	(_password^(0+128)+6),w
  6054  0630  0459               	iorwf	((_password+1)^(0+128)+6),w
  6055  0631  1D03               	btfss	3,2
  6056  0632  2E34               	goto	u3201
  6057  0633  2E35               	goto	u3200
  6058  0634                     u3201:
  6059  0634  2ECF               	goto	l2542
  6060  0635                     u3200:
  6061  0635                     l2502:
  6062                           
  6063                           ;main.c: 312:         TMR0IE = 0;
  6064  0635  128B               	bcf	11,5	;volatile
  6065                           
  6066                           ;main.c: 313:         PORTDbits.RD1 = 0;
  6067  0636  1283               	bcf	3,5	;RP0=0, select bank0
  6068  0637  1303               	bcf	3,6	;RP1=0, select bank0
  6069  0638  1088               	bcf	8,1	;volatile
  6070                           
  6071                           ;main.c: 314:         PORTBbits.RB7 = 1;
  6072  0639  1786               	bsf	6,7	;volatile
  6073                           
  6074                           ;main.c: 315:         PORTDbits.RD0 = 0;
  6075  063A  1008               	bcf	8,0	;volatile
  6076  063B                     l2504:
  6077                           
  6078                           ;main.c: 316:         Lcd_Clear();
  6079  063B  160A  118A  2573  120A  118A  	fcall	_Lcd_Clear
  6080                           
  6081                           ;main.c: 317:         Lcd_Set_Cursor(1, 1);
  6082  0640  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0641  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0642  01AB               	clrf	Lcd_Set_Cursor@b
  6085  0643  0AAB               	incf	Lcd_Set_Cursor@b,f
  6086  0644  3001               	movlw	1
  6087  0645  120A  158A  20B5  120A  118A  	fcall	_Lcd_Set_Cursor
  6088  064A                     l2506:
  6089                           
  6090                           ;main.c: 318:         Lcd_Write_String("Senha Correta!");
  6091  064A  302C               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  6092  064B  1283               	bcf	3,5	;RP0=0, select bank0
  6093  064C  1303               	bcf	3,6	;RP1=0, select bank0
  6094  064D  00AC               	movwf	Lcd_Write_String@a
  6095  064E  3080               	movlw	128
  6096  064F  00AD               	movwf	Lcd_Write_String@a+1
  6097  0650  160A  118A  2722  120A  118A  	fcall	_Lcd_Write_String
  6098  0655  0064               	clrwdt	;# 
  6099  0656                     l2508:
  6100                           
  6101                           ;main.c: 320:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  6102  0656  300B               	movlw	11
  6103  0657  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0658  1303               	bcf	3,6	;RP1=0, select bank0
  6105  0659  00B7               	movwf	??_password_validator+2
  6106  065A  3026               	movlw	38
  6107  065B  00B6               	movwf	??_password_validator+1
  6108  065C  305D               	movlw	93
  6109  065D  00B5               	movwf	??_password_validator
  6110  065E                     u4127:
  6111  065E  0BB5               	decfsz	??_password_validator,f
  6112  065F  2E5E               	goto	u4127
  6113  0660  0BB6               	decfsz	??_password_validator+1,f
  6114  0661  2E5E               	goto	u4127
  6115  0662  0BB7               	decfsz	??_password_validator+2,f
  6116  0663  2E5E               	goto	u4127
  6117  0664                     l2510:
  6118                           
  6119                           ;main.c: 321:         Lcd_Clear();
  6120  0664  160A  118A  2573  120A  118A  	fcall	_Lcd_Clear
  6121  0669                     l2512:
  6122                           
  6123                           ;main.c: 322:         Lcd_Set_Cursor(1, 1);
  6124  0669  1283               	bcf	3,5	;RP0=0, select bank0
  6125  066A  1303               	bcf	3,6	;RP1=0, select bank0
  6126  066B  01AB               	clrf	Lcd_Set_Cursor@b
  6127  066C  0AAB               	incf	Lcd_Set_Cursor@b,f
  6128  066D  3001               	movlw	1
  6129  066E  120A  158A  20B5  120A  118A  	fcall	_Lcd_Set_Cursor
  6130  0673                     l2514:
  6131                           
  6132                           ;main.c: 323:         Lcd_Write_String("Sistema");
  6133  0673  3076               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  6134  0674  1283               	bcf	3,5	;RP0=0, select bank0
  6135  0675  1303               	bcf	3,6	;RP1=0, select bank0
  6136  0676  00AC               	movwf	Lcd_Write_String@a
  6137  0677  3080               	movlw	128
  6138  0678  00AD               	movwf	Lcd_Write_String@a+1
  6139  0679  160A  118A  2722  120A  118A  	fcall	_Lcd_Write_String
  6140  067E                     l2516:
  6141                           
  6142                           ;main.c: 324:         Lcd_Set_Cursor(2, 1);
  6143  067E  1283               	bcf	3,5	;RP0=0, select bank0
  6144  067F  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0680  01AB               	clrf	Lcd_Set_Cursor@b
  6146  0681  0AAB               	incf	Lcd_Set_Cursor@b,f
  6147  0682  3002               	movlw	2
  6148  0683  120A  158A  20B5  120A  118A  	fcall	_Lcd_Set_Cursor
  6149  0688                     l2518:
  6150                           
  6151                           ;main.c: 325:         Lcd_Write_String("Desarmado");
  6152  0688  306C               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  6153  0689  1283               	bcf	3,5	;RP0=0, select bank0
  6154  068A  1303               	bcf	3,6	;RP1=0, select bank0
  6155  068B  00AC               	movwf	Lcd_Write_String@a
  6156  068C  3080               	movlw	128
  6157  068D  00AD               	movwf	Lcd_Write_String@a+1
  6158  068E  160A  118A  2722  120A  118A  	fcall	_Lcd_Write_String
  6159  0693  0064               	clrwdt	;# 
  6160  0694                     l2520:
  6161                           
  6162                           ;main.c: 327:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  6163  0694  300B               	movlw	11
  6164  0695  1283               	bcf	3,5	;RP0=0, select bank0
  6165  0696  1303               	bcf	3,6	;RP1=0, select bank0
  6166  0697  00B7               	movwf	??_password_validator+2
  6167  0698  3026               	movlw	38
  6168  0699  00B6               	movwf	??_password_validator+1
  6169  069A  305D               	movlw	93
  6170  069B  00B5               	movwf	??_password_validator
  6171  069C                     u4137:
  6172  069C  0BB5               	decfsz	??_password_validator,f
  6173  069D  2E9C               	goto	u4137
  6174  069E  0BB6               	decfsz	??_password_validator+1,f
  6175  069F  2E9C               	goto	u4137
  6176  06A0  0BB7               	decfsz	??_password_validator+2,f
  6177  06A1  2E9C               	goto	u4137
  6178  06A2                     l2522:
  6179                           
  6180                           ;main.c: 328:         for (int i = 0; i < 4; i++) {
  6181  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  6182  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  6183  06A4  01B8               	clrf	password_validator@i
  6184  06A5  01B9               	clrf	password_validator@i+1
  6185  06A6                     l2528:
  6186                           
  6187                           ;main.c: 329:             password[i] = 0;
  6188  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  6189  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  6190  06A8  0838               	movf	password_validator@i,w
  6191  06A9  00B5               	movwf	??_password_validator
  6192  06AA  0735               	addwf	??_password_validator,w
  6193  06AB  3ED2               	addlw	(low (_password| 0))& (0+255)
  6194  06AC  0084               	movwf	4
  6195  06AD  1383               	bcf	3,7	;select IRP bank1
  6196  06AE  0180               	clrf	0
  6197  06AF  0A84               	incf	4,f
  6198  06B0  0180               	clrf	0
  6199  06B1                     l2530:
  6200                           
  6201                           ;main.c: 330:         }
  6202  06B1  3001               	movlw	1
  6203  06B2  07B8               	addwf	password_validator@i,f
  6204  06B3  1803               	skipnc
  6205  06B4  0AB9               	incf	password_validator@i+1,f
  6206  06B5  3000               	movlw	0
  6207  06B6  07B9               	addwf	password_validator@i+1,f
  6208  06B7                     l2532:
  6209  06B7  0839               	movf	password_validator@i+1,w
  6210  06B8  3A80               	xorlw	128
  6211  06B9  00FF               	movwf	btemp+1
  6212  06BA  3080               	movlw	128
  6213  06BB  027F               	subwf	btemp+1,w
  6214  06BC  1D03               	skipz
  6215  06BD  2EC0               	goto	u3215
  6216  06BE  3004               	movlw	4
  6217  06BF  0238               	subwf	password_validator@i,w
  6218  06C0                     u3215:
  6219  06C0  1C03               	skipc
  6220  06C1  2EC3               	goto	u3211
  6221  06C2  2EC4               	goto	u3210
  6222  06C3                     u3211:
  6223  06C3  2EA6               	goto	l2528
  6224  06C4                     u3210:
  6225  06C4                     l195:
  6226                           
  6227                           ;main.c: 332:         Alarme_armado = 0;
  6228  06C4  10FC               	bcf	_Alarme_armado/(0+8),_Alarme_armado& (0+7)
  6229  06C5                     l2534:
  6230                           
  6231                           ;main.c: 333:         size = 0;
  6232  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  6233  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  6234  06C7  01E6               	clrf	_size
  6235  06C8  01E7               	clrf	_size+1
  6236  06C9                     l2536:
  6237                           
  6238                           ;main.c: 334:         Alarme_ativo = 0;
  6239  06C9  107C               	bcf	_Alarme_ativo/(0+8),_Alarme_ativo& (0+7)
  6240  06CA                     l2538:
  6241                           
  6242                           ;main.c: 336:         return 1;
  6243  06CA  3001               	movlw	1
  6244  06CB  00B3               	movwf	?_password_validator
  6245  06CC  3000               	movlw	0
  6246  06CD  00B4               	movwf	?_password_validator+1
  6247  06CE  2F22               	goto	l196
  6248  06CF                     l2542:
  6249                           
  6250                           ;main.c: 338:     for (int i = 0; i < 4; i++) {
  6251  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  6252  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  6253  06D1  01BA               	clrf	password_validator@i_496
  6254  06D2  01BB               	clrf	password_validator@i_496+1
  6255  06D3                     l2548:
  6256                           
  6257                           ;main.c: 339:         password[i] = 0;
  6258  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  6259  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  6260  06D5  083A               	movf	password_validator@i_496,w
  6261  06D6  00B5               	movwf	??_password_validator
  6262  06D7  0735               	addwf	??_password_validator,w
  6263  06D8  3ED2               	addlw	(low (_password| 0))& (0+255)
  6264  06D9  0084               	movwf	4
  6265  06DA  1383               	bcf	3,7	;select IRP bank1
  6266  06DB  0180               	clrf	0
  6267  06DC  0A84               	incf	4,f
  6268  06DD  0180               	clrf	0
  6269  06DE                     l2550:
  6270                           
  6271                           ;main.c: 340:     }
  6272  06DE  3001               	movlw	1
  6273  06DF  07BA               	addwf	password_validator@i_496,f
  6274  06E0  1803               	skipnc
  6275  06E1  0ABB               	incf	password_validator@i_496+1,f
  6276  06E2  3000               	movlw	0
  6277  06E3  07BB               	addwf	password_validator@i_496+1,f
  6278  06E4                     l2552:
  6279  06E4  083B               	movf	password_validator@i_496+1,w
  6280  06E5  3A80               	xorlw	128
  6281  06E6  00FF               	movwf	btemp+1
  6282  06E7  3080               	movlw	128
  6283  06E8  027F               	subwf	btemp+1,w
  6284  06E9  1D03               	skipz
  6285  06EA  2EED               	goto	u3225
  6286  06EB  3004               	movlw	4
  6287  06EC  023A               	subwf	password_validator@i_496,w
  6288  06ED                     u3225:
  6289  06ED  1C03               	skipc
  6290  06EE  2EF0               	goto	u3221
  6291  06EF  2EF1               	goto	u3220
  6292  06F0                     u3221:
  6293  06F0  2ED3               	goto	l2548
  6294  06F1                     u3220:
  6295  06F1                     l2554:
  6296                           
  6297                           ;main.c: 342:     size = 0;
  6298  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  6299  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  6300  06F3  01E6               	clrf	_size
  6301  06F4  01E7               	clrf	_size+1
  6302  06F5                     l2556:
  6303                           
  6304                           ;main.c: 344:     Lcd_Clear();
  6305  06F5  160A  118A  2573  120A  118A  	fcall	_Lcd_Clear
  6306  06FA                     l2558:
  6307                           
  6308                           ;main.c: 345:     Lcd_Set_Cursor(1, 1);
  6309  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  6310  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  6311  06FC  01AB               	clrf	Lcd_Set_Cursor@b
  6312  06FD  0AAB               	incf	Lcd_Set_Cursor@b,f
  6313  06FE  3001               	movlw	1
  6314  06FF  120A  158A  20B5  120A  118A  	fcall	_Lcd_Set_Cursor
  6315  0704                     l2560:
  6316                           
  6317                           ;main.c: 346:     Lcd_Write_String("Senha incorreta!");
  6318  0704  300B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  6319  0705  1283               	bcf	3,5	;RP0=0, select bank0
  6320  0706  1303               	bcf	3,6	;RP1=0, select bank0
  6321  0707  00AC               	movwf	Lcd_Write_String@a
  6322  0708  3080               	movlw	128
  6323  0709  00AD               	movwf	Lcd_Write_String@a+1
  6324  070A  160A  118A  2722  120A  118A  	fcall	_Lcd_Write_String
  6325  070F  0064               	clrwdt	;# 
  6326  0710                     l2562:
  6327                           
  6328                           ;main.c: 348:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  6329  0710  300B               	movlw	11
  6330  0711  1283               	bcf	3,5	;RP0=0, select bank0
  6331  0712  1303               	bcf	3,6	;RP1=0, select bank0
  6332  0713  00B7               	movwf	??_password_validator+2
  6333  0714  3026               	movlw	38
  6334  0715  00B6               	movwf	??_password_validator+1
  6335  0716  305D               	movlw	93
  6336  0717  00B5               	movwf	??_password_validator
  6337  0718                     u4147:
  6338  0718  0BB5               	decfsz	??_password_validator,f
  6339  0719  2F18               	goto	u4147
  6340  071A  0BB6               	decfsz	??_password_validator+1,f
  6341  071B  2F18               	goto	u4147
  6342  071C  0BB7               	decfsz	??_password_validator+2,f
  6343  071D  2F18               	goto	u4147
  6344  071E                     l2564:
  6345                           
  6346                           ;main.c: 349:     return 0;
  6347  071E  1283               	bcf	3,5	;RP0=0, select bank0
  6348  071F  1303               	bcf	3,6	;RP1=0, select bank0
  6349  0720  01B3               	clrf	?_password_validator
  6350  0721  01B4               	clrf	?_password_validator+1
  6351  0722                     l196:
  6352  0722  0008               	return
  6353  0723                     __end_of_password_validator:
  6354                           
  6355                           	psect	text18
  6356  1722                     __ptext18:	
  6357 ;; *************** function _Lcd_Write_String *****************
  6358 ;; Defined at:
  6359 ;;		line 86 in file "./lcd.h"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  a               2   12[BANK0 ] PTR unsigned char 
  6362 ;;		 -> STR_14(17), STR_13(10), STR_12(8), STR_11(15), 
  6363 ;;		 -> STR_10(7), STR_9(8), termometro@buffer(20), STR_7(12), 
  6364 ;;		 -> STR_6(16), STR_5(16), STR_4(14), STR_3(10), 
  6365 ;;		 -> STR_2(13), STR_1(10), 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  i               2   17[BANK0 ] int 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6377 ;;      Params:         0       2       0       0       0
  6378 ;;      Locals:         0       2       0       0       0
  6379 ;;      Temps:          0       3       0       0       0
  6380 ;;      Totals:         0       7       0       0       0
  6381 ;;Total ram usage:        7 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 6
  6384 ;; This function calls:
  6385 ;;		_Lcd_Write_Char
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;;		_alarme
  6389 ;;		_termometro
  6390 ;;		_password_validator
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function _Lcd_Write_String
  6396  1722                     _Lcd_Write_String:
  6397  1722                     l2004:	
  6398                           ;incstack = 0
  6399 ;; using string table level
  6400                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6401                           
  6402                           
  6403                           ;./lcd.h: 87:     int i;;./lcd.h: 88:     for (i = 0; a[i] != '\0'; i++)
  6404  1722  1283               	bcf	3,5	;RP0=0, select bank0
  6405  1723  1303               	bcf	3,6	;RP1=0, select bank0
  6406  1724  01B1               	clrf	Lcd_Write_String@i
  6407  1725  01B2               	clrf	Lcd_Write_String@i+1
  6408  1726  2F4B               	goto	l2010
  6409  1727                     l2006:
  6410                           
  6411                           ;./lcd.h: 89:         Lcd_Write_Char(a[i]);
  6412  1727  0831               	movf	Lcd_Write_String@i,w
  6413  1728  072C               	addwf	Lcd_Write_String@a,w
  6414  1729  00AF               	movwf	??_Lcd_Write_String+1
  6415  172A  082D               	movf	Lcd_Write_String@a+1,w
  6416  172B  00AE               	movwf	??_Lcd_Write_String
  6417  172C  1803               	skipnc
  6418  172D  0AAE               	incf	??_Lcd_Write_String,f
  6419  172E  1FB1               	btfss	Lcd_Write_String@i,7
  6420  172F  2F31               	goto	u2040
  6421  1730  03AE               	decf	??_Lcd_Write_String,f
  6422  1731                     u2040:
  6423  1731  1283               	bcf	3,5	;RP0=0, select bank0
  6424  1732  1303               	bcf	3,6	;RP1=0, select bank0
  6425  1733  082E               	movf	??_Lcd_Write_String,w
  6426  1734  00B0               	movwf	??_Lcd_Write_String+2
  6427  1735  0830               	movf	??_Lcd_Write_String+2,w
  6428  1736  00FF               	movwf	btemp+1
  6429  1737  082F               	movf	??_Lcd_Write_String+1,w
  6430  1738  0084               	movwf	4
  6431  1739  120A  158A  2000  160A  118A  	fcall	stringtab
  6432  173E  160A  118A  26A3  160A  118A  	fcall	_Lcd_Write_Char
  6433  1743                     l2008:
  6434  1743  3001               	movlw	1
  6435  1744  1283               	bcf	3,5	;RP0=0, select bank0
  6436  1745  1303               	bcf	3,6	;RP1=0, select bank0
  6437  1746  07B1               	addwf	Lcd_Write_String@i,f
  6438  1747  1803               	skipnc
  6439  1748  0AB2               	incf	Lcd_Write_String@i+1,f
  6440  1749  3000               	movlw	0
  6441  174A  07B2               	addwf	Lcd_Write_String@i+1,f
  6442  174B                     l2010:
  6443  174B  0831               	movf	Lcd_Write_String@i,w
  6444  174C  072C               	addwf	Lcd_Write_String@a,w
  6445  174D  00AF               	movwf	??_Lcd_Write_String+1
  6446  174E  082D               	movf	Lcd_Write_String@a+1,w
  6447  174F  00AE               	movwf	??_Lcd_Write_String
  6448  1750  1803               	skipnc
  6449  1751  0AAE               	incf	??_Lcd_Write_String,f
  6450  1752  1FB1               	btfss	Lcd_Write_String@i,7
  6451  1753  2F55               	goto	u2050
  6452  1754  03AE               	decf	??_Lcd_Write_String,f
  6453  1755                     u2050:
  6454  1755  1283               	bcf	3,5	;RP0=0, select bank0
  6455  1756  1303               	bcf	3,6	;RP1=0, select bank0
  6456  1757  082E               	movf	??_Lcd_Write_String,w
  6457  1758  00B0               	movwf	??_Lcd_Write_String+2
  6458  1759  0830               	movf	??_Lcd_Write_String+2,w
  6459  175A  00FF               	movwf	btemp+1
  6460  175B  082F               	movf	??_Lcd_Write_String+1,w
  6461  175C  0084               	movwf	4
  6462  175D  120A  158A  2000  160A  118A  	fcall	stringtab
  6463  1762  3A00               	xorlw	0
  6464  1763  1D03               	skipz
  6465  1764  2F66               	goto	u2061
  6466  1765  2F67               	goto	u2060
  6467  1766                     u2061:
  6468  1766  2F27               	goto	l2006
  6469  1767                     u2060:
  6470  1767                     l95:
  6471  1767  0008               	return
  6472  1768                     __end_of_Lcd_Write_String:
  6473                           
  6474                           	psect	text19
  6475  16A3                     __ptext19:	
  6476 ;; *************** function _Lcd_Write_Char *****************
  6477 ;; Defined at:
  6478 ;;		line 71 in file "./lcd.h"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  a               1    wreg     unsigned char 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  a               1   11[BANK0 ] unsigned char 
  6483 ;;  y               1   10[BANK0 ] unsigned char 
  6484 ;;  temp            1    9[BANK0 ] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      void 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, pclath, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6494 ;;      Params:         0       0       0       0       0
  6495 ;;      Locals:         0       3       0       0       0
  6496 ;;      Temps:          0       1       0       0       0
  6497 ;;      Totals:         0       4       0       0       0
  6498 ;;Total ram usage:        4 bytes
  6499 ;; Hardware stack levels used: 1
  6500 ;; Hardware stack levels required when called: 5
  6501 ;; This function calls:
  6502 ;;		_Lcd_Port
  6503 ;; This function is called by:
  6504 ;;		_Lcd_Write_String
  6505 ;;		_teclado
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           
  6510                           ;psect for function _Lcd_Write_Char
  6511  16A3                     _Lcd_Write_Char:
  6512                           
  6513                           ;incstack = 0
  6514                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6515                           ;Lcd_Write_Char@a stored from wreg
  6516  16A3  1283               	bcf	3,5	;RP0=0, select bank0
  6517  16A4  1303               	bcf	3,6	;RP1=0, select bank0
  6518  16A5  00AB               	movwf	Lcd_Write_Char@a
  6519  16A6                     l1948:
  6520                           
  6521                           ;./lcd.h: 72:     char temp, y;;./lcd.h: 73:     temp = a & 0x0F;
  6522  16A6  082B               	movf	Lcd_Write_Char@a,w
  6523  16A7  390F               	andlw	15
  6524  16A8  00A8               	movwf	??_Lcd_Write_Char
  6525  16A9  0828               	movf	??_Lcd_Write_Char,w
  6526  16AA  00A9               	movwf	Lcd_Write_Char@temp
  6527                           
  6528                           ;./lcd.h: 74:     y = a & 0xF0;
  6529  16AB  082B               	movf	Lcd_Write_Char@a,w
  6530  16AC  39F0               	andlw	240
  6531  16AD  00A8               	movwf	??_Lcd_Write_Char
  6532  16AE  0828               	movf	??_Lcd_Write_Char,w
  6533  16AF  00AA               	movwf	Lcd_Write_Char@y
  6534  16B0                     l1950:
  6535                           
  6536                           ;./lcd.h: 75:     PORTDbits.RD3 = 1;
  6537  16B0  1588               	bsf	8,3	;volatile
  6538  16B1                     l1952:
  6539                           
  6540                           ;./lcd.h: 76:     Lcd_Port(y >> 4);
  6541  16B1  082A               	movf	Lcd_Write_Char@y,w
  6542  16B2  00A8               	movwf	??_Lcd_Write_Char
  6543  16B3  3004               	movlw	4
  6544  16B4                     u1965:
  6545  16B4  1003               	clrc
  6546  16B5  0CA8               	rrf	??_Lcd_Write_Char,f
  6547  16B6  3EFF               	addlw	-1
  6548  16B7  1D03               	skipz
  6549  16B8  2EB4               	goto	u1965
  6550  16B9  0828               	movf	??_Lcd_Write_Char,w
  6551  16BA  120A  118A  27DF  160A  118A  	fcall	_Lcd_Port
  6552  16BF                     l1954:
  6553                           
  6554                           ;./lcd.h: 77:     PORTDbits.RD2 = 1;
  6555  16BF  1283               	bcf	3,5	;RP0=0, select bank0
  6556  16C0  1303               	bcf	3,6	;RP1=0, select bank0
  6557  16C1  1508               	bsf	8,2	;volatile
  6558  16C2                     l1956:
  6559                           
  6560                           ;./lcd.h: 78:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6561  16C2  300C               	movlw	12
  6562  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  6563  16C4  1303               	bcf	3,6	;RP1=0, select bank0
  6564  16C5  00A8               	movwf	??_Lcd_Write_Char
  6565  16C6                     u4157:
  6566  16C6  0BA8               	decfsz	??_Lcd_Write_Char,f
  6567  16C7  2EC6               	goto	u4157
  6568  16C8  0000               	nop
  6569  16C9                     l1958:
  6570                           
  6571                           ;./lcd.h: 79:     PORTDbits.RD2 = 0;
  6572  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  6573  16CA  1303               	bcf	3,6	;RP1=0, select bank0
  6574  16CB  1108               	bcf	8,2	;volatile
  6575  16CC                     l1960:
  6576                           
  6577                           ;./lcd.h: 80:     Lcd_Port(temp);
  6578  16CC  0829               	movf	Lcd_Write_Char@temp,w
  6579  16CD  120A  118A  27DF  160A  118A  	fcall	_Lcd_Port
  6580  16D2                     l1962:
  6581                           
  6582                           ;./lcd.h: 81:     PORTDbits.RD2 = 1;
  6583  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  6584  16D3  1303               	bcf	3,6	;RP1=0, select bank0
  6585  16D4  1508               	bsf	8,2	;volatile
  6586  16D5                     l1964:
  6587                           
  6588                           ;./lcd.h: 82:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6589  16D5  300C               	movlw	12
  6590  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  6591  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  6592  16D8  00A8               	movwf	??_Lcd_Write_Char
  6593  16D9                     u4167:
  6594  16D9  0BA8               	decfsz	??_Lcd_Write_Char,f
  6595  16DA  2ED9               	goto	u4167
  6596  16DB  0000               	nop
  6597  16DC                     l1966:
  6598                           
  6599                           ;./lcd.h: 83:     PORTDbits.RD2 = 0;
  6600  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  6601  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  6602  16DE  1108               	bcf	8,2	;volatile
  6603  16DF                     l89:
  6604  16DF  0008               	return
  6605  16E0                     __end_of_Lcd_Write_Char:
  6606                           
  6607                           	psect	text20
  6608  08B5                     __ptext20:	
  6609 ;; *************** function _Lcd_Set_Cursor *****************
  6610 ;; Defined at:
  6611 ;;		line 36 in file "./lcd.h"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  a               1    wreg     unsigned char 
  6614 ;;  b               1   11[BANK0 ] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  a               1   14[BANK0 ] unsigned char 
  6617 ;;  temp            1   17[BANK0 ] unsigned char 
  6618 ;;  y               1   16[BANK0 ] unsigned char 
  6619 ;;  z               1   15[BANK0 ] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, pclath, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6629 ;;      Params:         0       1       0       0       0
  6630 ;;      Locals:         0       4       0       0       0
  6631 ;;      Temps:          0       2       0       0       0
  6632 ;;      Totals:         0       7       0       0       0
  6633 ;;Total ram usage:        7 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; Hardware stack levels required when called: 6
  6636 ;; This function calls:
  6637 ;;		_Lcd_Cmd
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;;		_alarme
  6641 ;;		_termometro
  6642 ;;		_password_validator
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function _Lcd_Set_Cursor
  6648  08B5                     _Lcd_Set_Cursor:
  6649                           
  6650                           ;incstack = 0
  6651                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6652                           ;Lcd_Set_Cursor@a stored from wreg
  6653  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  6654  08B6  1303               	bcf	3,6	;RP1=0, select bank0
  6655  08B7  00AE               	movwf	Lcd_Set_Cursor@a
  6656  08B8                     l1984:
  6657                           
  6658                           ;./lcd.h: 37:     char temp, z, y;;./lcd.h: 38:     if (a == 1) {
  6659  08B8  032E               	decf	Lcd_Set_Cursor@a,w
  6660  08B9  1D03               	btfss	3,2
  6661  08BA  28BC               	goto	u2001
  6662  08BB  28BD               	goto	u2000
  6663  08BC                     u2001:
  6664  08BC  28E2               	goto	l1994
  6665  08BD                     u2000:
  6666  08BD                     l1986:
  6667                           
  6668                           ;./lcd.h: 39:         temp = 0x80 + b - 1;
  6669  08BD  082B               	movf	Lcd_Set_Cursor@b,w
  6670  08BE  3E7F               	addlw	127
  6671  08BF  00AC               	movwf	??_Lcd_Set_Cursor
  6672  08C0  082C               	movf	??_Lcd_Set_Cursor,w
  6673  08C1  00B1               	movwf	Lcd_Set_Cursor@temp
  6674                           
  6675                           ;./lcd.h: 40:         z = temp >> 4;
  6676  08C2  0831               	movf	Lcd_Set_Cursor@temp,w
  6677  08C3  00AC               	movwf	??_Lcd_Set_Cursor
  6678  08C4  3004               	movlw	4
  6679  08C5                     u2015:
  6680  08C5  1003               	clrc
  6681  08C6  0CAC               	rrf	??_Lcd_Set_Cursor,f
  6682  08C7  3EFF               	addlw	-1
  6683  08C8  1D03               	skipz
  6684  08C9  28C5               	goto	u2015
  6685  08CA  082C               	movf	??_Lcd_Set_Cursor,w
  6686  08CB  00AD               	movwf	??_Lcd_Set_Cursor+1
  6687  08CC  082D               	movf	??_Lcd_Set_Cursor+1,w
  6688  08CD  00AF               	movwf	Lcd_Set_Cursor@z
  6689  08CE                     l1988:
  6690                           
  6691                           ;./lcd.h: 41:         y = temp & 0x0F;
  6692  08CE  0831               	movf	Lcd_Set_Cursor@temp,w
  6693  08CF  390F               	andlw	15
  6694  08D0  00AC               	movwf	??_Lcd_Set_Cursor
  6695  08D1  082C               	movf	??_Lcd_Set_Cursor,w
  6696  08D2  00B0               	movwf	Lcd_Set_Cursor@y
  6697  08D3                     l1990:
  6698                           
  6699                           ;./lcd.h: 42:         Lcd_Cmd(z);
  6700  08D3  082F               	movf	Lcd_Set_Cursor@z,w
  6701  08D4  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6702  08D9                     l1992:
  6703                           
  6704                           ;./lcd.h: 43:         Lcd_Cmd(y);
  6705  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  6706  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  6707  08DB  0830               	movf	Lcd_Set_Cursor@y,w
  6708  08DC  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6709                           
  6710                           ;./lcd.h: 44:     } else if (a == 2) {
  6711  08E1  290C               	goto	l83
  6712  08E2                     l1994:
  6713  08E2  3002               	movlw	2
  6714  08E3  062E               	xorwf	Lcd_Set_Cursor@a,w
  6715  08E4  1D03               	btfss	3,2
  6716  08E5  28E7               	goto	u2021
  6717  08E6  28E8               	goto	u2020
  6718  08E7                     u2021:
  6719  08E7  290C               	goto	l83
  6720  08E8                     u2020:
  6721  08E8                     l1996:
  6722                           
  6723                           ;./lcd.h: 45:         temp = 0xC0 + b - 1;
  6724  08E8  082B               	movf	Lcd_Set_Cursor@b,w
  6725  08E9  3EBF               	addlw	191
  6726  08EA  00AC               	movwf	??_Lcd_Set_Cursor
  6727  08EB  082C               	movf	??_Lcd_Set_Cursor,w
  6728  08EC  00B1               	movwf	Lcd_Set_Cursor@temp
  6729                           
  6730                           ;./lcd.h: 46:         z = temp >> 4;
  6731  08ED  0831               	movf	Lcd_Set_Cursor@temp,w
  6732  08EE  00AC               	movwf	??_Lcd_Set_Cursor
  6733  08EF  3004               	movlw	4
  6734  08F0                     u2035:
  6735  08F0  1003               	clrc
  6736  08F1  0CAC               	rrf	??_Lcd_Set_Cursor,f
  6737  08F2  3EFF               	addlw	-1
  6738  08F3  1D03               	skipz
  6739  08F4  28F0               	goto	u2035
  6740  08F5  082C               	movf	??_Lcd_Set_Cursor,w
  6741  08F6  00AD               	movwf	??_Lcd_Set_Cursor+1
  6742  08F7  082D               	movf	??_Lcd_Set_Cursor+1,w
  6743  08F8  00AF               	movwf	Lcd_Set_Cursor@z
  6744  08F9                     l1998:
  6745                           
  6746                           ;./lcd.h: 47:         y = temp & 0x0F;
  6747  08F9  0831               	movf	Lcd_Set_Cursor@temp,w
  6748  08FA  390F               	andlw	15
  6749  08FB  00AC               	movwf	??_Lcd_Set_Cursor
  6750  08FC  082C               	movf	??_Lcd_Set_Cursor,w
  6751  08FD  00B0               	movwf	Lcd_Set_Cursor@y
  6752  08FE                     l2000:
  6753                           
  6754                           ;./lcd.h: 48:         Lcd_Cmd(z);
  6755  08FE  082F               	movf	Lcd_Set_Cursor@z,w
  6756  08FF  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6757  0904                     l2002:
  6758                           
  6759                           ;./lcd.h: 49:         Lcd_Cmd(y);
  6760  0904  1283               	bcf	3,5	;RP0=0, select bank0
  6761  0905  1303               	bcf	3,6	;RP1=0, select bank0
  6762  0906  0830               	movf	Lcd_Set_Cursor@y,w
  6763  0907  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6764  090C                     l83:
  6765  090C  0008               	return
  6766  090D                     __end_of_Lcd_Set_Cursor:
  6767                           
  6768                           	psect	text21
  6769  1573                     __ptext21:	
  6770 ;; *************** function _Lcd_Clear *****************
  6771 ;; Defined at:
  6772 ;;		line 31 in file "./lcd.h"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0, pclath, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6786 ;;      Params:         0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0
  6789 ;;      Totals:         0       0       0       0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used: 1
  6792 ;; Hardware stack levels required when called: 6
  6793 ;; This function calls:
  6794 ;;		_Lcd_Cmd
  6795 ;; This function is called by:
  6796 ;;		_main
  6797 ;;		_alarme
  6798 ;;		_termometro
  6799 ;;		_password_validator
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           
  6804                           ;psect for function _Lcd_Clear
  6805  1573                     _Lcd_Clear:
  6806  1573                     l1982:	
  6807                           ;incstack = 0
  6808                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6809                           
  6810                           
  6811                           ;./lcd.h: 32:     Lcd_Cmd(0);
  6812  1573  3000               	movlw	0
  6813  1574  120A  158A  2099  160A  118A  	fcall	_Lcd_Cmd
  6814                           
  6815                           ;./lcd.h: 33:     Lcd_Cmd(1);
  6816  1579  3001               	movlw	1
  6817  157A  120A  158A  2099  160A  118A  	fcall	_Lcd_Cmd
  6818  157F                     l77:
  6819  157F  0008               	return
  6820  1580                     __end_of_Lcd_Clear:
  6821                           
  6822                           	psect	text22
  6823  0965                     __ptext22:	
  6824 ;; *************** function _Lcd_Init *****************
  6825 ;; Defined at:
  6826 ;;		line 53 in file "./lcd.h"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;		None
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0, pclath, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6840 ;;      Params:         0       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0
  6842 ;;      Temps:          0       2       0       0       0
  6843 ;;      Totals:         0       2       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used: 1
  6846 ;; Hardware stack levels required when called: 6
  6847 ;; This function calls:
  6848 ;;		_Lcd_Cmd
  6849 ;;		_Lcd_Port
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           
  6856                           ;psect for function _Lcd_Init
  6857  0965                     _Lcd_Init:
  6858  0965                     l2836:	
  6859                           ;incstack = 0
  6860                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6861                           
  6862                           
  6863                           ;./lcd.h: 54:     Lcd_Port(0x00);
  6864  0965  3000               	movlw	0
  6865  0966  120A  118A  27DF  120A  158A  	fcall	_Lcd_Port
  6866  096B                     l2838:
  6867                           
  6868                           ;./lcd.h: 55:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6869  096B  301A               	movlw	26
  6870  096C  1283               	bcf	3,5	;RP0=0, select bank0
  6871  096D  1303               	bcf	3,6	;RP1=0, select bank0
  6872  096E  00AC               	movwf	??_Lcd_Init+1
  6873  096F  30F7               	movlw	247
  6874  0970  00AB               	movwf	??_Lcd_Init
  6875  0971                     u4177:
  6876  0971  0BAB               	decfsz	??_Lcd_Init,f
  6877  0972  2971               	goto	u4177
  6878  0973  0BAC               	decfsz	??_Lcd_Init+1,f
  6879  0974  2971               	goto	u4177
  6880  0975  2976               	nop2
  6881  0976                     l2840:
  6882                           
  6883                           ;./lcd.h: 56:     Lcd_Cmd(0x03);
  6884  0976  3003               	movlw	3
  6885  0977  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6886                           
  6887                           ;./lcd.h: 57:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6888  097C  3007               	movlw	7
  6889  097D  1283               	bcf	3,5	;RP0=0, select bank0
  6890  097E  1303               	bcf	3,6	;RP1=0, select bank0
  6891  097F  00AC               	movwf	??_Lcd_Init+1
  6892  0980  307C               	movlw	124
  6893  0981  00AB               	movwf	??_Lcd_Init
  6894  0982                     u4187:
  6895  0982  0BAB               	decfsz	??_Lcd_Init,f
  6896  0983  2982               	goto	u4187
  6897  0984  0BAC               	decfsz	??_Lcd_Init+1,f
  6898  0985  2982               	goto	u4187
  6899  0986  0000               	nop
  6900  0987                     l2842:
  6901                           
  6902                           ;./lcd.h: 58:     Lcd_Cmd(0x03);
  6903  0987  3003               	movlw	3
  6904  0988  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6905  098D                     l2844:
  6906                           
  6907                           ;./lcd.h: 59:     _delay((unsigned long)((11)*(4000000/4000.0)));
  6908  098D  300F               	movlw	15
  6909  098E  1283               	bcf	3,5	;RP0=0, select bank0
  6910  098F  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0990  00AC               	movwf	??_Lcd_Init+1
  6912  0991  3047               	movlw	71
  6913  0992  00AB               	movwf	??_Lcd_Init
  6914  0993                     u4197:
  6915  0993  0BAB               	decfsz	??_Lcd_Init,f
  6916  0994  2993               	goto	u4197
  6917  0995  0BAC               	decfsz	??_Lcd_Init+1,f
  6918  0996  2993               	goto	u4197
  6919                           
  6920                           ;./lcd.h: 60:     Lcd_Cmd(0x03);
  6921  0997  3003               	movlw	3
  6922  0998  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6923                           
  6924                           ;./lcd.h: 62:     Lcd_Cmd(0x02);
  6925  099D  3002               	movlw	2
  6926  099E  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6927                           
  6928                           ;./lcd.h: 63:     Lcd_Cmd(0x02);
  6929  09A3  3002               	movlw	2
  6930  09A4  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6931                           
  6932                           ;./lcd.h: 64:     Lcd_Cmd(0x08);
  6933  09A9  3008               	movlw	8
  6934  09AA  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6935                           
  6936                           ;./lcd.h: 65:     Lcd_Cmd(0x00);
  6937  09AF  3000               	movlw	0
  6938  09B0  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6939                           
  6940                           ;./lcd.h: 66:     Lcd_Cmd(0x0C);
  6941  09B5  300C               	movlw	12
  6942  09B6  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6943                           
  6944                           ;./lcd.h: 67:     Lcd_Cmd(0x00);
  6945  09BB  3000               	movlw	0
  6946  09BC  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6947                           
  6948                           ;./lcd.h: 68:     Lcd_Cmd(0x06);
  6949  09C1  3006               	movlw	6
  6950  09C2  120A  158A  2099  120A  158A  	fcall	_Lcd_Cmd
  6951  09C7                     l86:
  6952  09C7  0008               	return
  6953  09C8                     __end_of_Lcd_Init:
  6954                           
  6955                           	psect	text23
  6956  0899                     __ptext23:	
  6957 ;; *************** function _Lcd_Cmd *****************
  6958 ;; Defined at:
  6959 ;;		line 23 in file "./lcd.h"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  a               1    wreg     unsigned char 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  a               1   10[BANK0 ] unsigned char 
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0, pclath, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6973 ;;      Params:         0       0       0       0       0
  6974 ;;      Locals:         0       1       0       0       0
  6975 ;;      Temps:          0       2       0       0       0
  6976 ;;      Totals:         0       3       0       0       0
  6977 ;;Total ram usage:        3 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; Hardware stack levels required when called: 5
  6980 ;; This function calls:
  6981 ;;		_Lcd_Port
  6982 ;; This function is called by:
  6983 ;;		_Lcd_Clear
  6984 ;;		_Lcd_Set_Cursor
  6985 ;;		_Lcd_Init
  6986 ;;		_Lcd_Shift_Right
  6987 ;;		_Lcd_Shift_Left
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           
  6992                           ;psect for function _Lcd_Cmd
  6993  0899                     _Lcd_Cmd:
  6994                           
  6995                           ;incstack = 0
  6996                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6997                           ;Lcd_Cmd@a stored from wreg
  6998  0899  1283               	bcf	3,5	;RP0=0, select bank0
  6999  089A  1303               	bcf	3,6	;RP1=0, select bank0
  7000  089B  00AA               	movwf	Lcd_Cmd@a
  7001  089C                     l1938:
  7002                           
  7003                           ;./lcd.h: 24:     PORTDbits.RD3 = 0;
  7004  089C  1188               	bcf	8,3	;volatile
  7005  089D                     l1940:
  7006                           
  7007                           ;./lcd.h: 25:     Lcd_Port(a);
  7008  089D  082A               	movf	Lcd_Cmd@a,w
  7009  089E  120A  118A  27DF  120A  158A  	fcall	_Lcd_Port
  7010  08A3                     l1942:
  7011                           
  7012                           ;./lcd.h: 26:     PORTDbits.RD2 = 1;
  7013  08A3  1283               	bcf	3,5	;RP0=0, select bank0
  7014  08A4  1303               	bcf	3,6	;RP1=0, select bank0
  7015  08A5  1508               	bsf	8,2	;volatile
  7016  08A6                     l1944:
  7017                           
  7018                           ;./lcd.h: 27:     _delay((unsigned long)((4)*(4000000/4000.0)));
  7019  08A6  3006               	movlw	6
  7020  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  7021  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  7022  08A9  00A9               	movwf	??_Lcd_Cmd+1
  7023  08AA  302F               	movlw	47
  7024  08AB  00A8               	movwf	??_Lcd_Cmd
  7025  08AC                     u4207:
  7026  08AC  0BA8               	decfsz	??_Lcd_Cmd,f
  7027  08AD  28AC               	goto	u4207
  7028  08AE  0BA9               	decfsz	??_Lcd_Cmd+1,f
  7029  08AF  28AC               	goto	u4207
  7030  08B0  28B1               	nop2
  7031  08B1                     l1946:
  7032                           
  7033                           ;./lcd.h: 28:     PORTDbits.RD2 = 0;
  7034  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  7035  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  7036  08B3  1108               	bcf	8,2	;volatile
  7037  08B4                     l74:
  7038  08B4  0008               	return
  7039  08B5                     __end_of_Lcd_Cmd:
  7040                           
  7041                           	psect	text24
  7042  07DF                     __ptext24:	
  7043 ;; *************** function _Lcd_Port *****************
  7044 ;; Defined at:
  7045 ;;		line 1 in file "./lcd.h"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  a               1    wreg     unsigned char 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  a               1    7[BANK0 ] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7059 ;;      Params:         0       0       0       0       0
  7060 ;;      Locals:         0       1       0       0       0
  7061 ;;      Temps:          0       0       0       0       0
  7062 ;;      Totals:         0       1       0       0       0
  7063 ;;Total ram usage:        1 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 4
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_Lcd_Cmd
  7070 ;;		_Lcd_Init
  7071 ;;		_Lcd_Write_Char
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           
  7076                           ;psect for function _Lcd_Port
  7077  07DF                     _Lcd_Port:
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in _Lcd_Port: [wreg]
  7081                           ;Lcd_Port@a stored from wreg
  7082  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  7083  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  7084  07E1  00A7               	movwf	Lcd_Port@a
  7085  07E2                     l1928:
  7086                           
  7087                           ;./lcd.h: 2:     if (a & 1)
  7088  07E2  1C27               	btfss	Lcd_Port@a,0
  7089  07E3  2FE5               	goto	u1921
  7090  07E4  2FE6               	goto	u1920
  7091  07E5                     u1921:
  7092  07E5  2FE8               	goto	l63
  7093  07E6                     u1920:
  7094  07E6                     l1930:
  7095                           
  7096                           ;./lcd.h: 3:         PORTDbits.RD4 = 1;
  7097  07E6  1608               	bsf	8,4	;volatile
  7098  07E7  2FE9               	goto	l64
  7099  07E8                     l63:	
  7100                           ;./lcd.h: 4:     else
  7101                           
  7102                           
  7103                           ;./lcd.h: 5:         PORTDbits.RD4 = 0;
  7104  07E8  1208               	bcf	8,4	;volatile
  7105  07E9                     l64:
  7106                           
  7107                           ;./lcd.h: 7:     if (a & 2)
  7108  07E9  1CA7               	btfss	Lcd_Port@a,1
  7109  07EA  2FEC               	goto	u1931
  7110  07EB  2FED               	goto	u1930
  7111  07EC                     u1931:
  7112  07EC  2FEF               	goto	l65
  7113  07ED                     u1930:
  7114  07ED                     l1932:
  7115                           
  7116                           ;./lcd.h: 8:         PORTDbits.RD5 = 1;
  7117  07ED  1688               	bsf	8,5	;volatile
  7118  07EE  2FF0               	goto	l66
  7119  07EF                     l65:	
  7120                           ;./lcd.h: 9:     else
  7121                           
  7122                           
  7123                           ;./lcd.h: 10:         PORTDbits.RD5 = 0;
  7124  07EF  1288               	bcf	8,5	;volatile
  7125  07F0                     l66:
  7126                           
  7127                           ;./lcd.h: 12:     if (a & 4)
  7128  07F0  1D27               	btfss	Lcd_Port@a,2
  7129  07F1  2FF3               	goto	u1941
  7130  07F2  2FF4               	goto	u1940
  7131  07F3                     u1941:
  7132  07F3  2FF6               	goto	l67
  7133  07F4                     u1940:
  7134  07F4                     l1934:
  7135                           
  7136                           ;./lcd.h: 13:         PORTDbits.RD6 = 1;
  7137  07F4  1708               	bsf	8,6	;volatile
  7138  07F5  2FF7               	goto	l68
  7139  07F6                     l67:	
  7140                           ;./lcd.h: 14:     else
  7141                           
  7142                           
  7143                           ;./lcd.h: 15:         PORTDbits.RD6 = 0;
  7144  07F6  1308               	bcf	8,6	;volatile
  7145  07F7                     l68:
  7146                           
  7147                           ;./lcd.h: 17:     if (a & 8)
  7148  07F7  1DA7               	btfss	Lcd_Port@a,3
  7149  07F8  2FFA               	goto	u1951
  7150  07F9  2FFB               	goto	u1950
  7151  07FA                     u1951:
  7152  07FA  2FFD               	goto	l69
  7153  07FB                     u1950:
  7154  07FB                     l1936:
  7155                           
  7156                           ;./lcd.h: 18:         PORTDbits.RD7 = 1;
  7157  07FB  1788               	bsf	8,7	;volatile
  7158  07FC  2FFE               	goto	l71
  7159  07FD                     l69:	
  7160                           ;./lcd.h: 19:     else
  7161                           
  7162                           
  7163                           ;./lcd.h: 20:         PORTDbits.RD7 = 0;
  7164  07FD  1388               	bcf	8,7	;volatile
  7165  07FE                     l71:
  7166  07FE  0008               	return
  7167  07FF                     __end_of_Lcd_Port:
  7168                           
  7169                           	psect	text25
  7170  0C43                     __ptext25:	
  7171 ;; *************** function _interruption *****************
  7172 ;; Defined at:
  7173 ;;		line 168 in file "main.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7187 ;;      Params:         0       0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0
  7189 ;;      Temps:          0       7       0       0       0
  7190 ;;      Totals:         0       7       0       0       0
  7191 ;;Total ram usage:        7 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 3
  7194 ;; This function calls:
  7195 ;;		i1_Lcd_Clear
  7196 ;;		i1_Lcd_Set_Cursor
  7197 ;;		i1_Lcd_Write_String
  7198 ;; This function is called by:
  7199 ;;		Interrupt level 1
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           
  7204                           ;psect for function _interruption
  7205  0C43                     _interruption:
  7206  0C43                     i1l2970:
  7207  0C43  0064               	clrwdt	;# 
  7208                           
  7209                           ;main.c: 170:     if (INTF) {
  7210  0C44  1C8B               	btfss	11,1	;volatile
  7211  0C45  2C47               	goto	u371_21
  7212  0C46  2C48               	goto	u371_20
  7213  0C47                     u371_21:
  7214  0C47  2C92               	goto	i1l2988
  7215  0C48                     u371_20:
  7216  0C48                     i1l2972:
  7217                           
  7218                           ;main.c: 171:         INTF = 0;
  7219  0C48  108B               	bcf	11,1	;volatile
  7220                           
  7221                           ;main.c: 172:         if (!SH_ativo || Alarme_armado)
  7222  0C49  1D7C               	btfss	_SH_ativo/(0+8),_SH_ativo& (0+7)
  7223  0C4A  2C4C               	goto	u372_21
  7224  0C4B  2C4D               	goto	u372_20
  7225  0C4C                     u372_21:
  7226  0C4C  2CE5               	goto	i1l169
  7227  0C4D                     u372_20:
  7228  0C4D                     i1l2974:
  7229  0C4D  1CFC               	btfss	_Alarme_armado/(0+8),_Alarme_armado& (0+7)
  7230  0C4E  2C50               	goto	u373_21
  7231  0C4F  2C51               	goto	u373_20
  7232  0C50                     u373_21:
  7233  0C50  2C53               	goto	i1l166
  7234  0C51                     u373_20:
  7235  0C51  2CE5               	goto	i1l169
  7236  0C52                     i1l168:
  7237                           
  7238                           ;main.c: 173:             return;
  7239  0C52  2CE5               	goto	i1l169
  7240  0C53                     i1l166:
  7241                           
  7242                           ;main.c: 174:         PORTBbits.RB7 = 0;
  7243  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  7244  0C54  1303               	bcf	3,6	;RP1=0, select bank0
  7245  0C55  1386               	bcf	6,7	;volatile
  7246                           
  7247                           ;main.c: 175:         PORTDbits.RD0 = 1;
  7248  0C56  1408               	bsf	8,0	;volatile
  7249                           
  7250                           ;main.c: 176:         Alarme_armado = 1;
  7251  0C57  14FC               	bsf	_Alarme_armado/(0+8),_Alarme_armado& (0+7)
  7252  0C58                     i1l2976:
  7253                           
  7254                           ;main.c: 177:         Lcd_Clear();
  7255  0C58  160A  118A  2566  120A  158A  	fcall	i1_Lcd_Clear
  7256                           
  7257                           ;main.c: 178:         Lcd_Set_Cursor(1, 1);
  7258  0C5D  01F4               	clrf	i1Lcd_Set_Cursor@b
  7259  0C5E  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  7260  0C5F  3001               	movlw	1
  7261  0C60  160A  118A  27AE  120A  158A  	fcall	i1_Lcd_Set_Cursor
  7262  0C65                     i1l2978:
  7263                           
  7264                           ;main.c: 179:         Lcd_Write_String("Sistema");
  7265  0C65  3076               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  7266  0C66  00F5               	movwf	i1Lcd_Write_String@a
  7267  0C67  3080               	movlw	128
  7268  0C68  00F6               	movwf	i1Lcd_Write_String@a+1
  7269  0C69  160A  118A  26E0  120A  158A  	fcall	i1_Lcd_Write_String
  7270  0C6E                     i1l2980:
  7271                           
  7272                           ;main.c: 180:         Lcd_Set_Cursor(2, 1);
  7273  0C6E  01F4               	clrf	i1Lcd_Set_Cursor@b
  7274  0C6F  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  7275  0C70  3002               	movlw	2
  7276  0C71  160A  118A  27AE  120A  158A  	fcall	i1_Lcd_Set_Cursor
  7277                           
  7278                           ;main.c: 181:         Lcd_Write_String("Armado");
  7279  0C76  307E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  7280  0C77  00F5               	movwf	i1Lcd_Write_String@a
  7281  0C78  3080               	movlw	128
  7282  0C79  00F6               	movwf	i1Lcd_Write_String@a+1
  7283  0C7A  160A  118A  26E0  120A  158A  	fcall	i1_Lcd_Write_String
  7284  0C7F  0064               	clrwdt	;# 
  7285  0C80                     i1l2982:
  7286                           
  7287                           ;main.c: 183:         _delay((unsigned long)((1500)*(4000000/4000.0)));
  7288  0C80  3008               	movlw	8
  7289  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  7290  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  7291  0C83  00A2               	movwf	??_interruption+2
  7292  0C84  309D               	movlw	157
  7293  0C85  00A1               	movwf	??_interruption+1
  7294  0C86  3005               	movlw	5
  7295  0C87  00A0               	movwf	??_interruption
  7296  0C88                     u421_27:
  7297  0C88  0BA0               	decfsz	??_interruption,f
  7298  0C89  2C88               	goto	u421_27
  7299  0C8A  0BA1               	decfsz	??_interruption+1,f
  7300  0C8B  2C88               	goto	u421_27
  7301  0C8C  0BA2               	decfsz	??_interruption+2,f
  7302  0C8D  2C88               	goto	u421_27
  7303  0C8E                     i1l2984:
  7304                           
  7305                           ;main.c: 184:         PORTBbits.RB7 = 1;
  7306  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  7308  0C90  1786               	bsf	6,7	;volatile
  7309  0C91                     i1l2986:
  7310                           
  7311                           ;main.c: 185:         PORTDbits.RD0 = 0;
  7312  0C91  1008               	bcf	8,0	;volatile
  7313  0C92                     i1l2988:
  7314                           
  7315                           ;main.c: 188:     if (TMR1IF)
  7316  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  7317  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  7318  0C94  1C0C               	btfss	12,0	;volatile
  7319  0C95  2C97               	goto	u374_21
  7320  0C96  2C98               	goto	u374_20
  7321  0C97                     u374_21:
  7322  0C97  2CB4               	goto	i1l170
  7323  0C98                     u374_20:
  7324  0C98                     i1l2990:
  7325                           
  7326                           ;main.c: 189:     {;main.c: 190:         PIR1bits.TMR1IF = 0;
  7327  0C98  100C               	bcf	12,0	;volatile
  7328  0C99                     i1l2992:
  7329                           
  7330                           ;main.c: 191:         TMR1L = 0xDC;
  7331  0C99  30DC               	movlw	220
  7332  0C9A  008E               	movwf	14	;volatile
  7333                           
  7334                           ;main.c: 192:         TMR1H = 0x0B;
  7335  0C9B  300B               	movlw	11
  7336  0C9C  008F               	movwf	15	;volatile
  7337                           
  7338                           ;main.c: 195:         contador1++;
  7339  0C9D  3001               	movlw	1
  7340  0C9E  07E2               	addwf	_contador1,f
  7341  0C9F  1803               	skipnc
  7342  0CA0  0AE3               	incf	_contador1+1,f
  7343  0CA1  3000               	movlw	0
  7344  0CA2  07E3               	addwf	_contador1+1,f
  7345  0CA3                     i1l2994:
  7346                           
  7347                           ;main.c: 196:         if (contador1 == 20) {
  7348  0CA3  3014               	movlw	20
  7349  0CA4  0662               	xorwf	_contador1,w
  7350  0CA5  0463               	iorwf	_contador1+1,w
  7351  0CA6  1D03               	btfss	3,2
  7352  0CA7  2CA9               	goto	u375_21
  7353  0CA8  2CAA               	goto	u375_20
  7354  0CA9                     u375_21:
  7355  0CA9  2CE5               	goto	i1l169
  7356  0CAA                     u375_20:
  7357  0CAA                     i1l2996:
  7358                           
  7359                           ;main.c: 197:             if(Alarme_ativo){
  7360  0CAA  1C7C               	btfss	_Alarme_ativo/(0+8),_Alarme_ativo& (0+7)
  7361  0CAB  2CAD               	goto	u376_21
  7362  0CAC  2CAE               	goto	u376_20
  7363  0CAD                     u376_21:
  7364  0CAD  2CB0               	goto	i1l172
  7365  0CAE                     u376_20:
  7366  0CAE                     i1l2998:
  7367                           
  7368                           ;main.c: 198:             TMR0IE = 1;
  7369  0CAE  168B               	bsf	11,5	;volatile
  7370                           
  7371                           ;main.c: 199:             PORTDbits.RD1 = 1;
  7372  0CAF  1488               	bsf	8,1	;volatile
  7373  0CB0                     i1l172:	
  7374                           ;main.c: 200:             }
  7375                           
  7376                           
  7377                           ;main.c: 201:             T1CONbits.TMR1ON = 0;
  7378  0CB0  1010               	bcf	16,0	;volatile
  7379  0CB1                     i1l3000:
  7380                           
  7381                           ;main.c: 202:             contador1 = 0;
  7382  0CB1  01E2               	clrf	_contador1
  7383  0CB2  01E3               	clrf	_contador1+1
  7384  0CB3  2CE5               	goto	i1l169
  7385  0CB4                     i1l170:	
  7386                           ;main.c: 205:     else if (TMR0IF)
  7387                           
  7388  0CB4  1D0B               	btfss	11,2	;volatile
  7389  0CB5  2CB7               	goto	u377_21
  7390  0CB6  2CB8               	goto	u377_20
  7391  0CB7                     u377_21:
  7392  0CB7  2CE5               	goto	i1l169
  7393  0CB8                     u377_20:
  7394  0CB8                     i1l3002:
  7395                           
  7396                           ;main.c: 206:     {;main.c: 207:         TMR0IF = 0;
  7397  0CB8  110B               	bcf	11,2	;volatile
  7398  0CB9                     i1l3004:
  7399                           
  7400                           ;main.c: 208:         TMR0 = 0;
  7401  0CB9  0181               	clrf	1	;volatile
  7402  0CBA                     i1l3006:
  7403                           
  7404                           ;main.c: 211:         contador0++;
  7405  0CBA  3001               	movlw	1
  7406  0CBB  07E4               	addwf	_contador0,f
  7407  0CBC  1803               	skipnc
  7408  0CBD  0AE5               	incf	_contador0+1,f
  7409  0CBE  3000               	movlw	0
  7410  0CBF  07E5               	addwf	_contador0+1,f
  7411  0CC0                     i1l3008:
  7412                           
  7413                           ;main.c: 212:         if (contador0 == 1000) {
  7414  0CC0  30E8               	movlw	232
  7415  0CC1  0664               	xorwf	_contador0,w
  7416  0CC2  3003               	movlw	3
  7417  0CC3  1903               	skipnz
  7418  0CC4  0665               	xorwf	_contador0+1,w
  7419  0CC5  1D03               	btfss	3,2
  7420  0CC6  2CC8               	goto	u378_21
  7421  0CC7  2CC9               	goto	u378_20
  7422  0CC8                     u378_21:
  7423  0CC8  2C52               	goto	i1l168
  7424  0CC9                     u378_20:
  7425  0CC9                     i1l3010:
  7426                           
  7427                           ;main.c: 213:             contador0 = 0;
  7428  0CC9  01E4               	clrf	_contador0
  7429  0CCA  01E5               	clrf	_contador0+1
  7430  0CCB                     i1l3012:
  7431                           
  7432                           ;main.c: 214:             PORTDbits.RD0 = ~PORTDbits.RD0;
  7433  0CCB  1003               	clrc
  7434  0CCC  1C08               	btfss	8,0	;volatile
  7435  0CCD  1403               	setc
  7436  0CCE  1803               	btfsc	3,0
  7437  0CCF  2CD1               	goto	u379_21
  7438  0CD0  2CD5               	goto	u379_20
  7439  0CD1                     u379_21:
  7440  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  7441  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  7442  0CD3  1408               	bsf	8,0	;volatile
  7443  0CD4  2CD8               	goto	u380_24
  7444  0CD5                     u379_20:
  7445  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  7446  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  7447  0CD7  1008               	bcf	8,0	;volatile
  7448  0CD8                     u380_24:
  7449  0CD8                     i1l3014:
  7450                           
  7451                           ;main.c: 215:             PORTBbits.RB7 = ~PORTBbits.RB7;
  7452  0CD8  1003               	clrc
  7453  0CD9  1F86               	btfss	6,7	;volatile
  7454  0CDA  1403               	setc
  7455  0CDB  1803               	btfsc	3,0
  7456  0CDC  2CDE               	goto	u381_21
  7457  0CDD  2CE2               	goto	u381_20
  7458  0CDE                     u381_21:
  7459  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  7460  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  7461  0CE0  1786               	bsf	6,7	;volatile
  7462  0CE1  2CE5               	goto	u382_24
  7463  0CE2                     u381_20:
  7464  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  7465  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  7466  0CE4  1386               	bcf	6,7	;volatile
  7467  0CE5                     u382_24:
  7468  0CE5                     i1l169:
  7469  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  7470  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  7471  0CE7  0826               	movf	??_interruption+6,w
  7472  0CE8  00FF               	movwf	btemp+1
  7473  0CE9  0825               	movf	??_interruption+5,w
  7474  0CEA  008A               	movwf	10
  7475  0CEB  0824               	movf	??_interruption+4,w
  7476  0CEC  0084               	movwf	4
  7477  0CED  0E23               	swapf	??_interruption+3,w
  7478  0CEE  0083               	movwf	3
  7479  0CEF  0EFE               	swapf	btemp,f
  7480  0CF0  0E7E               	swapf	btemp,w
  7481  0CF1  0009               	retfie
  7482  0CF2                     __end_of_interruption:
  7483                           
  7484                           	psect	intentry
  7485  0004                     __pintentry:	
  7486                           ;incstack = 0
  7487 ;; hardware stack exceeded
  7488                           ; Regs used in _interruption: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7489                           
  7490  0004                     interrupt_function:
  7491  007E                     saved_w	set	btemp
  7492  0004  00FE               	movwf	btemp
  7493  0005  0E03               	swapf	3,w
  7494  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7495  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7496  0008  00A3               	movwf	??_interruption+3
  7497  0009  0804               	movf	4,w
  7498  000A  00A4               	movwf	??_interruption+4
  7499  000B  080A               	movf	10,w
  7500  000C  00A5               	movwf	??_interruption+5
  7501  000D  087F               	movf	btemp+1,w
  7502  000E  00A6               	movwf	??_interruption+6
  7503  000F  120A  158A  2C43   	ljmp	_interruption
  7504                           
  7505                           	psect	text26
  7506  16E0                     __ptext26:	
  7507 ;; *************** function i1_Lcd_Write_String *****************
  7508 ;; Defined at:
  7509 ;;		line 86 in file "./lcd.h"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  a               2    5[COMMON] PTR unsigned char 
  7512 ;;		 -> STR_14(17), STR_13(10), STR_12(8), STR_11(15), 
  7513 ;;		 -> STR_10(7), STR_9(8), termometro@buffer(20), STR_7(12), 
  7514 ;;		 -> STR_6(16), STR_5(16), STR_4(14), STR_3(10), 
  7515 ;;		 -> STR_2(13), STR_1(10), 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  i               2   10[COMMON] int 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         2       0       0       0       0
  7528 ;;      Locals:         2       0       0       0       0
  7529 ;;      Temps:          3       0       0       0       0
  7530 ;;      Totals:         7       0       0       0       0
  7531 ;;Total ram usage:        7 bytes
  7532 ;; Hardware stack levels used: 1
  7533 ;; Hardware stack levels required when called: 2
  7534 ;; This function calls:
  7535 ;;		i1_Lcd_Write_Char
  7536 ;; This function is called by:
  7537 ;;		_interruption
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           
  7542                           ;psect for function i1_Lcd_Write_String
  7543  16E0                     i1_Lcd_Write_String:
  7544  16E0                     i1l2930:	
  7545                           ;incstack = 0
  7546 ;; hardware stack exceeded
  7547                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7548                           
  7549                           
  7550                           ;./lcd.h: 87:     int i;;./lcd.h: 88:     for (i = 0; a[i] != '\0'; i++)
  7551  16E0  01FA               	clrf	i1Lcd_Write_String@i
  7552  16E1  01FB               	clrf	i1Lcd_Write_String@i+1
  7553  16E2  2F05               	goto	i1l2936
  7554  16E3                     i1l2932:
  7555                           
  7556                           ;./lcd.h: 89:         Lcd_Write_Char(a[i]);
  7557  16E3  087A               	movf	i1Lcd_Write_String@i,w
  7558  16E4  0775               	addwf	i1Lcd_Write_String@a,w
  7559  16E5  00F8               	movwf	??i1_Lcd_Write_String+1
  7560  16E6  0876               	movf	i1Lcd_Write_String@a+1,w
  7561  16E7  00F7               	movwf	??i1_Lcd_Write_String
  7562  16E8  1803               	skipnc
  7563  16E9  0AF7               	incf	??i1_Lcd_Write_String,f
  7564  16EA  1FFA               	btfss	i1Lcd_Write_String@i,7
  7565  16EB  2EED               	goto	u366_20
  7566  16EC  03F7               	decf	??i1_Lcd_Write_String,f
  7567  16ED                     u366_20:
  7568  16ED  0877               	movf	??i1_Lcd_Write_String,w
  7569  16EE  00F9               	movwf	??i1_Lcd_Write_String+2
  7570  16EF  0879               	movf	??i1_Lcd_Write_String+2,w
  7571  16F0  1283               	bcf	3,5	;RP0=0, select bank0
  7572  16F1  1303               	bcf	3,6	;RP1=0, select bank0
  7573  16F2  00FF               	movwf	btemp+1
  7574  16F3  0878               	movf	??i1_Lcd_Write_String+1,w
  7575  16F4  0084               	movwf	4
  7576  16F5  120A  158A  2000  160A  118A  	fcall	stringtab
  7577  16FA  160A  118A  2630  160A  118A  	fcall	i1_Lcd_Write_Char
  7578  16FF                     i1l2934:
  7579  16FF  3001               	movlw	1
  7580  1700  07FA               	addwf	i1Lcd_Write_String@i,f
  7581  1701  1803               	skipnc
  7582  1702  0AFB               	incf	i1Lcd_Write_String@i+1,f
  7583  1703  3000               	movlw	0
  7584  1704  07FB               	addwf	i1Lcd_Write_String@i+1,f
  7585  1705                     i1l2936:
  7586  1705  087A               	movf	i1Lcd_Write_String@i,w
  7587  1706  0775               	addwf	i1Lcd_Write_String@a,w
  7588  1707  00F8               	movwf	??i1_Lcd_Write_String+1
  7589  1708  0876               	movf	i1Lcd_Write_String@a+1,w
  7590  1709  00F7               	movwf	??i1_Lcd_Write_String
  7591  170A  1803               	skipnc
  7592  170B  0AF7               	incf	??i1_Lcd_Write_String,f
  7593  170C  1FFA               	btfss	i1Lcd_Write_String@i,7
  7594  170D  2F0F               	goto	u367_20
  7595  170E  03F7               	decf	??i1_Lcd_Write_String,f
  7596  170F                     u367_20:
  7597  170F  0877               	movf	??i1_Lcd_Write_String,w
  7598  1710  00F9               	movwf	??i1_Lcd_Write_String+2
  7599  1711  0879               	movf	??i1_Lcd_Write_String+2,w
  7600  1712  1283               	bcf	3,5	;RP0=0, select bank0
  7601  1713  1303               	bcf	3,6	;RP1=0, select bank0
  7602  1714  00FF               	movwf	btemp+1
  7603  1715  0878               	movf	??i1_Lcd_Write_String+1,w
  7604  1716  0084               	movwf	4
  7605  1717  120A  158A  2000  160A  118A  	fcall	stringtab
  7606  171C  3A00               	xorlw	0
  7607  171D  1D03               	skipz
  7608  171E  2F20               	goto	u368_21
  7609  171F  2F21               	goto	u368_20
  7610  1720                     u368_21:
  7611  1720  2EE3               	goto	i1l2932
  7612  1721                     u368_20:
  7613  1721                     i1l95:
  7614  1721  0008               	return
  7615  1722                     __end_ofi1_Lcd_Write_String:
  7616                           
  7617                           	psect	text27
  7618  1630                     __ptext27:	
  7619 ;; *************** function i1_Lcd_Write_Char *****************
  7620 ;; Defined at:
  7621 ;;		line 71 in file "./lcd.h"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  a               1    wreg     unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  a               1    4[COMMON] unsigned char 
  7626 ;;  y               1    3[COMMON] unsigned char 
  7627 ;;  temp            1    2[COMMON] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7637 ;;      Params:         0       0       0       0       0
  7638 ;;      Locals:         3       0       0       0       0
  7639 ;;      Temps:          1       0       0       0       0
  7640 ;;      Totals:         4       0       0       0       0
  7641 ;;Total ram usage:        4 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 1
  7644 ;; This function calls:
  7645 ;;		i1_Lcd_Port
  7646 ;; This function is called by:
  7647 ;;		i1_Lcd_Write_String
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           
  7652                           ;psect for function i1_Lcd_Write_Char
  7653  1630                     i1_Lcd_Write_Char:
  7654                           
  7655                           ;incstack = 0
  7656 ;; hardware stack exceeded
  7657                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  7658                           ;i1Lcd_Write_Char@a stored from wreg
  7659  1630  00F4               	movwf	i1Lcd_Write_Char@a
  7660  1631                     i1l2816:
  7661                           
  7662                           ;./lcd.h: 72:     char temp, y;;./lcd.h: 73:     temp = a & 0x0F;
  7663  1631  0874               	movf	i1Lcd_Write_Char@a,w
  7664  1632  390F               	andlw	15
  7665  1633  00F1               	movwf	??i1_Lcd_Write_Char
  7666  1634  0871               	movf	??i1_Lcd_Write_Char,w
  7667  1635  00F2               	movwf	i1Lcd_Write_Char@temp
  7668                           
  7669                           ;./lcd.h: 74:     y = a & 0xF0;
  7670  1636  0874               	movf	i1Lcd_Write_Char@a,w
  7671  1637  39F0               	andlw	240
  7672  1638  00F1               	movwf	??i1_Lcd_Write_Char
  7673  1639  0871               	movf	??i1_Lcd_Write_Char,w
  7674  163A  00F3               	movwf	i1Lcd_Write_Char@y
  7675  163B                     i1l2818:
  7676                           
  7677                           ;./lcd.h: 75:     PORTDbits.RD3 = 1;
  7678  163B  1283               	bcf	3,5	;RP0=0, select bank0
  7679  163C  1303               	bcf	3,6	;RP1=0, select bank0
  7680  163D  1588               	bsf	8,3	;volatile
  7681  163E                     i1l2820:
  7682                           
  7683                           ;./lcd.h: 76:     Lcd_Port(y >> 4);
  7684  163E  0873               	movf	i1Lcd_Write_Char@y,w
  7685  163F  00F1               	movwf	??i1_Lcd_Write_Char
  7686  1640  3004               	movlw	4
  7687  1641                     u356_25:
  7688  1641  1003               	clrc
  7689  1642  0CF1               	rrf	??i1_Lcd_Write_Char,f
  7690  1643  3EFF               	addlw	-1
  7691  1644  1D03               	skipz
  7692  1645  2E41               	goto	u356_25
  7693  1646  0871               	movf	??i1_Lcd_Write_Char,w
  7694  1647  160A  118A  25E5  160A  118A  	fcall	i1_Lcd_Port
  7695  164C                     i1l2822:
  7696                           
  7697                           ;./lcd.h: 77:     PORTDbits.RD2 = 1;
  7698  164C  1283               	bcf	3,5	;RP0=0, select bank0
  7699  164D  1303               	bcf	3,6	;RP1=0, select bank0
  7700  164E  1508               	bsf	8,2	;volatile
  7701  164F                     i1l2824:
  7702                           
  7703                           ;./lcd.h: 78:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7704  164F  300D               	movlw	13
  7705  1650  00F1               	movwf	??i1_Lcd_Write_Char
  7706  1651                     u422_27:
  7707  1651  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  7708  1652  2E51               	goto	u422_27
  7709  1653                     i1l2826:
  7710                           
  7711                           ;./lcd.h: 79:     PORTDbits.RD2 = 0;
  7712  1653  1283               	bcf	3,5	;RP0=0, select bank0
  7713  1654  1303               	bcf	3,6	;RP1=0, select bank0
  7714  1655  1108               	bcf	8,2	;volatile
  7715  1656                     i1l2828:
  7716                           
  7717                           ;./lcd.h: 80:     Lcd_Port(temp);
  7718  1656  0872               	movf	i1Lcd_Write_Char@temp,w
  7719  1657  160A  118A  25E5  160A  118A  	fcall	i1_Lcd_Port
  7720  165C                     i1l2830:
  7721                           
  7722                           ;./lcd.h: 81:     PORTDbits.RD2 = 1;
  7723  165C  1283               	bcf	3,5	;RP0=0, select bank0
  7724  165D  1303               	bcf	3,6	;RP1=0, select bank0
  7725  165E  1508               	bsf	8,2	;volatile
  7726  165F                     i1l2832:
  7727                           
  7728                           ;./lcd.h: 82:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  7729  165F  300D               	movlw	13
  7730  1660  00F1               	movwf	??i1_Lcd_Write_Char
  7731  1661                     u423_27:
  7732  1661  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  7733  1662  2E61               	goto	u423_27
  7734  1663                     i1l2834:
  7735                           
  7736                           ;./lcd.h: 83:     PORTDbits.RD2 = 0;
  7737  1663  1283               	bcf	3,5	;RP0=0, select bank0
  7738  1664  1303               	bcf	3,6	;RP1=0, select bank0
  7739  1665  1108               	bcf	8,2	;volatile
  7740  1666                     i1l89:
  7741  1666  0008               	return
  7742  1667                     __end_ofi1_Lcd_Write_Char:
  7743                           
  7744                           	psect	text28
  7745  17AE                     __ptext28:	
  7746 ;; *************** function i1_Lcd_Set_Cursor *****************
  7747 ;; Defined at:
  7748 ;;		line 36 in file "./lcd.h"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  a               1    wreg     unsigned char 
  7751 ;;  b               1    4[COMMON] unsigned char 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  a               1    7[COMMON] unsigned char 
  7754 ;;  temp            1   10[COMMON] unsigned char 
  7755 ;;  y               1    9[COMMON] unsigned char 
  7756 ;;  z               1    8[COMMON] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      void 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7766 ;;      Params:         1       0       0       0       0
  7767 ;;      Locals:         4       0       0       0       0
  7768 ;;      Temps:          2       0       0       0       0
  7769 ;;      Totals:         7       0       0       0       0
  7770 ;;Total ram usage:        7 bytes
  7771 ;; Hardware stack levels used: 1
  7772 ;; Hardware stack levels required when called: 2
  7773 ;; This function calls:
  7774 ;;		i1_Lcd_Cmd
  7775 ;; This function is called by:
  7776 ;;		_interruption
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           
  7781                           ;psect for function i1_Lcd_Set_Cursor
  7782  17AE                     i1_Lcd_Set_Cursor:
  7783                           
  7784                           ;incstack = 0
  7785 ;; hardware stack exceeded
  7786                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7787                           ;i1Lcd_Set_Cursor@a stored from wreg
  7788  17AE  00F7               	movwf	i1Lcd_Set_Cursor@a
  7789  17AF                     i1l2910:
  7790                           
  7791                           ;./lcd.h: 37:     char temp, z, y;;./lcd.h: 38:     if (a == 1) {
  7792  17AF  0377               	decf	i1Lcd_Set_Cursor@a,w
  7793  17B0  1D03               	btfss	3,2
  7794  17B1  2FB3               	goto	u362_21
  7795  17B2  2FB4               	goto	u362_20
  7796  17B3                     u362_21:
  7797  17B3  2FD7               	goto	i1l2920
  7798  17B4                     u362_20:
  7799  17B4                     i1l2912:
  7800                           
  7801                           ;./lcd.h: 39:         temp = 0x80 + b - 1;
  7802  17B4  0874               	movf	i1Lcd_Set_Cursor@b,w
  7803  17B5  3E7F               	addlw	127
  7804  17B6  00F5               	movwf	??i1_Lcd_Set_Cursor
  7805  17B7  0875               	movf	??i1_Lcd_Set_Cursor,w
  7806  17B8  00FA               	movwf	i1Lcd_Set_Cursor@temp
  7807                           
  7808                           ;./lcd.h: 40:         z = temp >> 4;
  7809  17B9  087A               	movf	i1Lcd_Set_Cursor@temp,w
  7810  17BA  00F5               	movwf	??i1_Lcd_Set_Cursor
  7811  17BB  3004               	movlw	4
  7812  17BC                     u363_25:
  7813  17BC  1003               	clrc
  7814  17BD  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  7815  17BE  3EFF               	addlw	-1
  7816  17BF  1D03               	skipz
  7817  17C0  2FBC               	goto	u363_25
  7818  17C1  0875               	movf	??i1_Lcd_Set_Cursor,w
  7819  17C2  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  7820  17C3  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  7821  17C4  00F8               	movwf	i1Lcd_Set_Cursor@z
  7822  17C5                     i1l2914:
  7823                           
  7824                           ;./lcd.h: 41:         y = temp & 0x0F;
  7825  17C5  087A               	movf	i1Lcd_Set_Cursor@temp,w
  7826  17C6  390F               	andlw	15
  7827  17C7  00F5               	movwf	??i1_Lcd_Set_Cursor
  7828  17C8  0875               	movf	??i1_Lcd_Set_Cursor,w
  7829  17C9  00F9               	movwf	i1Lcd_Set_Cursor@y
  7830  17CA                     i1l2916:
  7831                           
  7832                           ;./lcd.h: 42:         Lcd_Cmd(z);
  7833  17CA  0878               	movf	i1Lcd_Set_Cursor@z,w
  7834  17CB  160A  118A  25CB  160A  118A  	fcall	i1_Lcd_Cmd
  7835  17D0                     i1l2918:
  7836                           
  7837                           ;./lcd.h: 43:         Lcd_Cmd(y);
  7838  17D0  0879               	movf	i1Lcd_Set_Cursor@y,w
  7839  17D1  160A  118A  25CB  160A  118A  	fcall	i1_Lcd_Cmd
  7840                           
  7841                           ;./lcd.h: 44:     } else if (a == 2) {
  7842  17D6  2FFF               	goto	i1l83
  7843  17D7                     i1l2920:
  7844  17D7  3002               	movlw	2
  7845  17D8  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  7846  17D9  1D03               	btfss	3,2
  7847  17DA  2FDC               	goto	u364_21
  7848  17DB  2FDD               	goto	u364_20
  7849  17DC                     u364_21:
  7850  17DC  2FFF               	goto	i1l83
  7851  17DD                     u364_20:
  7852  17DD                     i1l2922:
  7853                           
  7854                           ;./lcd.h: 45:         temp = 0xC0 + b - 1;
  7855  17DD  0874               	movf	i1Lcd_Set_Cursor@b,w
  7856  17DE  3EBF               	addlw	191
  7857  17DF  00F5               	movwf	??i1_Lcd_Set_Cursor
  7858  17E0  0875               	movf	??i1_Lcd_Set_Cursor,w
  7859  17E1  00FA               	movwf	i1Lcd_Set_Cursor@temp
  7860                           
  7861                           ;./lcd.h: 46:         z = temp >> 4;
  7862  17E2  087A               	movf	i1Lcd_Set_Cursor@temp,w
  7863  17E3  00F5               	movwf	??i1_Lcd_Set_Cursor
  7864  17E4  3004               	movlw	4
  7865  17E5                     u365_25:
  7866  17E5  1003               	clrc
  7867  17E6  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  7868  17E7  3EFF               	addlw	-1
  7869  17E8  1D03               	skipz
  7870  17E9  2FE5               	goto	u365_25
  7871  17EA  0875               	movf	??i1_Lcd_Set_Cursor,w
  7872  17EB  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  7873  17EC  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  7874  17ED  00F8               	movwf	i1Lcd_Set_Cursor@z
  7875  17EE                     i1l2924:
  7876                           
  7877                           ;./lcd.h: 47:         y = temp & 0x0F;
  7878  17EE  087A               	movf	i1Lcd_Set_Cursor@temp,w
  7879  17EF  390F               	andlw	15
  7880  17F0  00F5               	movwf	??i1_Lcd_Set_Cursor
  7881  17F1  0875               	movf	??i1_Lcd_Set_Cursor,w
  7882  17F2  00F9               	movwf	i1Lcd_Set_Cursor@y
  7883  17F3                     i1l2926:
  7884                           
  7885                           ;./lcd.h: 48:         Lcd_Cmd(z);
  7886  17F3  0878               	movf	i1Lcd_Set_Cursor@z,w
  7887  17F4  160A  118A  25CB  160A  118A  	fcall	i1_Lcd_Cmd
  7888  17F9                     i1l2928:
  7889                           
  7890                           ;./lcd.h: 49:         Lcd_Cmd(y);
  7891  17F9  0879               	movf	i1Lcd_Set_Cursor@y,w
  7892  17FA  160A  118A  25CB  160A  118A  	fcall	i1_Lcd_Cmd
  7893  17FF                     i1l83:
  7894  17FF  0008               	return
  7895  1800                     __end_ofi1_Lcd_Set_Cursor:
  7896                           
  7897                           	psect	text29
  7898  1566                     __ptext29:	
  7899 ;; *************** function i1_Lcd_Clear *****************
  7900 ;; Defined at:
  7901 ;;		line 31 in file "./lcd.h"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0, pclath, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7915 ;;      Params:         0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0
  7918 ;;      Totals:         0       0       0       0       0
  7919 ;;Total ram usage:        0 bytes
  7920 ;; Hardware stack levels used: 1
  7921 ;; Hardware stack levels required when called: 2
  7922 ;; This function calls:
  7923 ;;		i1_Lcd_Cmd
  7924 ;; This function is called by:
  7925 ;;		_interruption
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           
  7930                           ;psect for function i1_Lcd_Clear
  7931  1566                     i1_Lcd_Clear:
  7932  1566                     i1l2908:	
  7933                           ;incstack = 0
  7934 ;; hardware stack exceeded
  7935                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  7936                           
  7937                           
  7938                           ;./lcd.h: 32:     Lcd_Cmd(0);
  7939  1566  3000               	movlw	0
  7940  1567  160A  118A  25CB  160A  118A  	fcall	i1_Lcd_Cmd
  7941                           
  7942                           ;./lcd.h: 33:     Lcd_Cmd(1);
  7943  156C  3001               	movlw	1
  7944  156D  160A  118A  25CB  160A  118A  	fcall	i1_Lcd_Cmd
  7945  1572                     i1l77:
  7946  1572  0008               	return
  7947  1573                     __end_ofi1_Lcd_Clear:
  7948                           
  7949                           	psect	text30
  7950  15CB                     __ptext30:	
  7951 ;; *************** function i1_Lcd_Cmd *****************
  7952 ;; Defined at:
  7953 ;;		line 23 in file "./lcd.h"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  a               1    wreg     unsigned char 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  a               1    3[COMMON] unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0, pclath, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7967 ;;      Params:         0       0       0       0       0
  7968 ;;      Locals:         1       0       0       0       0
  7969 ;;      Temps:          2       0       0       0       0
  7970 ;;      Totals:         3       0       0       0       0
  7971 ;;Total ram usage:        3 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 1
  7974 ;; This function calls:
  7975 ;;		i1_Lcd_Port
  7976 ;; This function is called by:
  7977 ;;		i1_Lcd_Clear
  7978 ;;		i1_Lcd_Set_Cursor
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function i1_Lcd_Cmd
  7984  15CB                     i1_Lcd_Cmd:
  7985                           
  7986                           ;incstack = 0
  7987 ;; hardware stack exceeded
  7988                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7989                           ;i1Lcd_Cmd@a stored from wreg
  7990  15CB  00F3               	movwf	i1Lcd_Cmd@a
  7991  15CC                     i1l2806:
  7992                           
  7993                           ;./lcd.h: 24:     PORTDbits.RD3 = 0;
  7994  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  7995  15CD  1303               	bcf	3,6	;RP1=0, select bank0
  7996  15CE  1188               	bcf	8,3	;volatile
  7997  15CF                     i1l2808:
  7998                           
  7999                           ;./lcd.h: 25:     Lcd_Port(a);
  8000  15CF  0873               	movf	i1Lcd_Cmd@a,w
  8001  15D0  160A  118A  25E5  160A  118A  	fcall	i1_Lcd_Port
  8002  15D5                     i1l2810:
  8003                           
  8004                           ;./lcd.h: 26:     PORTDbits.RD2 = 1;
  8005  15D5  1283               	bcf	3,5	;RP0=0, select bank0
  8006  15D6  1303               	bcf	3,6	;RP1=0, select bank0
  8007  15D7  1508               	bsf	8,2	;volatile
  8008  15D8                     i1l2812:
  8009                           
  8010                           ;./lcd.h: 27:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8011  15D8  3006               	movlw	6
  8012  15D9  00F2               	movwf	??i1_Lcd_Cmd+1
  8013  15DA  3030               	movlw	48
  8014  15DB  00F1               	movwf	??i1_Lcd_Cmd
  8015  15DC                     u424_27:
  8016  15DC  0BF1               	decfsz	??i1_Lcd_Cmd,f
  8017  15DD  2DDC               	goto	u424_27
  8018  15DE  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  8019  15DF  2DDC               	goto	u424_27
  8020  15E0  0000               	nop
  8021  15E1                     i1l2814:
  8022                           
  8023                           ;./lcd.h: 28:     PORTDbits.RD2 = 0;
  8024  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  8025  15E2  1303               	bcf	3,6	;RP1=0, select bank0
  8026  15E3  1108               	bcf	8,2	;volatile
  8027  15E4                     i1l74:
  8028  15E4  0008               	return
  8029  15E5                     __end_ofi1_Lcd_Cmd:
  8030                           
  8031                           	psect	text31
  8032  15E5                     __ptext31:	
  8033 ;; *************** function i1_Lcd_Port *****************
  8034 ;; Defined at:
  8035 ;;		line 1 in file "./lcd.h"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  a               1    wreg     unsigned char 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  a               1    0[COMMON] unsigned char 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8049 ;;      Params:         0       0       0       0       0
  8050 ;;      Locals:         1       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0
  8052 ;;      Totals:         1       0       0       0       0
  8053 ;;Total ram usage:        1 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		i1_Lcd_Cmd
  8059 ;;		i1_Lcd_Write_Char
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           
  8064                           ;psect for function i1_Lcd_Port
  8065  15E5                     i1_Lcd_Port:
  8066                           
  8067                           ;incstack = 0
  8068 ;; hardware stack exceeded
  8069                           ; Regs used in i1_Lcd_Port: [wreg]
  8070                           ;i1Lcd_Port@a stored from wreg
  8071  15E5  00F0               	movwf	i1Lcd_Port@a
  8072  15E6                     i1l2430:
  8073                           
  8074                           ;./lcd.h: 2:     if (a & 1)
  8075  15E6  1C70               	btfss	i1Lcd_Port@a,0
  8076  15E7  2DE9               	goto	u313_21
  8077  15E8  2DEA               	goto	u313_20
  8078  15E9                     u313_21:
  8079  15E9  2DEE               	goto	i1l63
  8080  15EA                     u313_20:
  8081  15EA                     i1l2432:
  8082                           
  8083                           ;./lcd.h: 3:         PORTDbits.RD4 = 1;
  8084  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  8085  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  8086  15EC  1608               	bsf	8,4	;volatile
  8087  15ED  2DF1               	goto	i1l64
  8088  15EE                     i1l63:	
  8089                           ;./lcd.h: 4:     else
  8090                           
  8091                           
  8092                           ;./lcd.h: 5:         PORTDbits.RD4 = 0;
  8093  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  8094  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  8095  15F0  1208               	bcf	8,4	;volatile
  8096  15F1                     i1l64:
  8097                           
  8098                           ;./lcd.h: 7:     if (a & 2)
  8099  15F1  1CF0               	btfss	i1Lcd_Port@a,1
  8100  15F2  2DF4               	goto	u314_21
  8101  15F3  2DF5               	goto	u314_20
  8102  15F4                     u314_21:
  8103  15F4  2DF7               	goto	i1l65
  8104  15F5                     u314_20:
  8105  15F5                     i1l2434:
  8106                           
  8107                           ;./lcd.h: 8:         PORTDbits.RD5 = 1;
  8108  15F5  1688               	bsf	8,5	;volatile
  8109  15F6  2DF8               	goto	i1l66
  8110  15F7                     i1l65:	
  8111                           ;./lcd.h: 9:     else
  8112                           
  8113                           
  8114                           ;./lcd.h: 10:         PORTDbits.RD5 = 0;
  8115  15F7  1288               	bcf	8,5	;volatile
  8116  15F8                     i1l66:
  8117                           
  8118                           ;./lcd.h: 12:     if (a & 4)
  8119  15F8  1D70               	btfss	i1Lcd_Port@a,2
  8120  15F9  2DFB               	goto	u315_21
  8121  15FA  2DFC               	goto	u315_20
  8122  15FB                     u315_21:
  8123  15FB  2DFE               	goto	i1l67
  8124  15FC                     u315_20:
  8125  15FC                     i1l2436:
  8126                           
  8127                           ;./lcd.h: 13:         PORTDbits.RD6 = 1;
  8128  15FC  1708               	bsf	8,6	;volatile
  8129  15FD  2DFF               	goto	i1l68
  8130  15FE                     i1l67:	
  8131                           ;./lcd.h: 14:     else
  8132                           
  8133                           
  8134                           ;./lcd.h: 15:         PORTDbits.RD6 = 0;
  8135  15FE  1308               	bcf	8,6	;volatile
  8136  15FF                     i1l68:
  8137                           
  8138                           ;./lcd.h: 17:     if (a & 8)
  8139  15FF  1DF0               	btfss	i1Lcd_Port@a,3
  8140  1600  2E02               	goto	u316_21
  8141  1601  2E03               	goto	u316_20
  8142  1602                     u316_21:
  8143  1602  2E05               	goto	i1l69
  8144  1603                     u316_20:
  8145  1603                     i1l2438:
  8146                           
  8147                           ;./lcd.h: 18:         PORTDbits.RD7 = 1;
  8148  1603  1788               	bsf	8,7	;volatile
  8149  1604  2E06               	goto	i1l71
  8150  1605                     i1l69:	
  8151                           ;./lcd.h: 19:     else
  8152                           
  8153                           
  8154                           ;./lcd.h: 20:         PORTDbits.RD7 = 0;
  8155  1605  1388               	bcf	8,7	;volatile
  8156  1606                     i1l71:
  8157  1606  0008               	return
  8158  1607                     __end_ofi1_Lcd_Port:
  8159  007E                     btemp	set	126	;btemp
  8160  007E                     wtemp0	set	126
  8161                           
  8162                           	psect	config
  8163                           
  8164                           ;Config register CONFIG @ 0x2007
  8165                           ;	Oscillator Selection bits
  8166                           ;	FOSC = HS, HS oscillator
  8167                           ;	Watchdog Timer Enable bit
  8168                           ;	WDTE = ON, WDT enabled
  8169                           ;	Power-up Timer Enable bit
  8170                           ;	PWRTE = ON, PWRT enabled
  8171                           ;	Brown-out Reset Enable bit
  8172                           ;	BOREN = ON, BOR enabled
  8173                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8174                           ;	LVP = 0x1, unprogrammed default
  8175                           ;	Data EEPROM Memory Code Protection bit
  8176                           ;	CPD = 0x1, unprogrammed default
  8177                           ;	Flash Program Memory Write Enable bits
  8178                           ;	WRT = 0x3, unprogrammed default
  8179                           ;	In-Circuit Debugger Mode bit
  8180                           ;	DEBUG = 0x1, unprogrammed default
  8181                           ;	Flash Program Memory Code Protection bit
  8182                           ;	CP = 0x1, unprogrammed default
  8183  2007                     	org	8199
  8184  2007  3FF6               	dw	16374

Data Sizes:
    Strings     125
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     66      72
    BANK1            80     50      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> termometro@buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_14(CODE[17]), STR_13(CODE[10]), STR_12(CODE[8]), STR_11(CODE[15]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), termometro@buffer(BANK1[20]), STR_7(CODE[12]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[14]), STR_3(CODE[10]), 
		 -> STR_2(CODE[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruption in COMMON

    _interruption->i1_Lcd_Write_String
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    ___lwmod->___lwdiv
    _mapToCelsius->___fltol
    ___fltol->___fladd
    ___flmul->__Umul8_16
    ___fladd->___flmul
    _alarme->_password_validator
    _teclado->_Lcd_Write_Char
    _password_validator->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_termometro
    _termometro->_sprintf
    _sprintf->_mapToCelsius
    _mapToCelsius->___fltol

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   19509
                                             47 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _alarme
                             _config
                         _termometro
 ---------------------------------------------------------------------------------
 (1) _termometro                                          23    23      0    9944
                                             24 BANK1     23    23      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___xxtofl
                       _mapToCelsius
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                             11 BANK1     13    10      3
                            ___lwdiv
                            ___lwmod
                           ___xxtofl (ARG)
                       _mapToCelsius (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                             15 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              7 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _mapToCelsius                                         4     0      4    5227
                                              7 BANK1      4     0      4
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     427
                                             62 BANK0      4     0      4
                                              0 BANK1      7     7      0
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2417
                                             16 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              7 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2262
                                             42 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              7 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
                          _config_ac
                       _config_ports
                       _config_timer
 ---------------------------------------------------------------------------------
 (2) _config_timer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ports                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ac                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _alarme                                               5     5      0    6357
                                             28 BANK0      5     5      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                 _password_validator
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              3     3      0     178
                                             12 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _password_validator                                   9     7      2    3146
                                             19 BANK0      9     7      2
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1280
                                             12 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              8 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1620
                                             11 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             11 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              8 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interruption                                         7     7      0     862
                                              0 BANK0      7     7      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_String                                   7     5      2     320
                                              5 COMMON     7     5      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Set_Cursor                                     7     6      1     432
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _alarme
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _password_validator
       _Lcd_Clear
       _Lcd_Set_Cursor
       _Lcd_Write_String
     _teclado
       _Lcd_Write_Char
   _config
     _config_ac
     _config_ports
     _config_timer
   _termometro
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String
     ___xxtofl
     _mapToCelsius
       ___fladd
         ___flmul (ARG)
           __Umul8_16
       ___flmul
       ___fltol
         ___fladd (ARG)
         ___flmul (ARG)
       ___xxtofl (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___xxtofl (ARG)
       _mapToCelsius (ARG)

 _interruption (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     32      3C       7       75.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 16 12:57:29 2021

                          pc 0002                           l71 07FE                           l63 07E8  
                         l64 07E9                           l65 07EF                           l66 07F0  
                         l74 08B4                           l67 07F6                           l83 090C  
                         l68 07F7                           l69 07FD                           l77 157F  
                         l86 09C7                           l95 1767                           l89 16DF  
                         fsr 0004                ?_mapToCelsius 00A7          __Umul8_16@word_mpld 002D  
                        l110 15B3                          l104 158E                          l113 159E  
                        l107 15CA                          l116 0964                          l150 0C42  
                        l151 0BAD                          l152 0BEC                          l160 0A5E  
                        l137 0A97                          l155 0C32                          l147 0BA4  
                        l308 0DEB                          l190 0FFF                          l505 0B81  
                        l195 06C4                          l611 0470                          l196 0722  
                        l508 0B98                          l605 03F2                          l701 038E  
                        l630 0588                          l720 161D                          l609 0499  
                        l713 0382                          l626 0564                          l618 0616  
                        l722 162F                          l707 02FA                          l636 05AA  
                        l751 078C                          l647 060A                          l639 05E8  
                        l648 0616                          l584 17AD                          l745 0747  
                        l498 0B98                          l594 16A2                          l747 07DE  
                        l758 07A8                          l759 07B4                          fsr0 0004  
                        indf 0000                 ___flmul@aexp 0042                 ___flmul@bexp 0043  
               ___flmul@sign 003D                 ___flmul@temp 0048                 ___flmul@prod 0044  
               ___fltol@exp1 00A6                         l2000 08FE                         l2002 0904  
                       l2010 174B                         l2004 1722                         l2100 039C  
                       l2006 1727                         l2110 03B3                         l2102 03A0  
                       l2008 1743                         l2200 04AB                         l2120 03C9  
                       l2112 03B4                         l2104 03A1                         l2210 04D5  
                       l2202 04C2                         l2130 03DA                         l2122 03CA  
                       l2106 03A6                         l2114 03B6                         l2050 176C  
                       l2220 04FE                         l2212 04D9                         l2204 04C6  
                       l2140 03F8                         l2132 03DF                         l2124 03D0  
                       l2116 03BE                         l2108 03AB                         l2300 0045  
                       l2060 1784                         l2052 1772                         l3100 0A93  
                       l2230 056C                         l2222 053C                         l2214 04DA  
                       l2206 04CA                         l2150 040C                         l2142 03FC  
                       l2134 03E7                         l2126 03D4                         l2118 03C3  
                       l2310 0061                         l2302 004A                         l2062 1795  
                       l2054 1775                         l2070 17A9                         l3110 0AAE  
                       l3102 0A96                         l2240 0587                         l2232 0571  
                       l2224 0542                         l2216 04E3                         l2208 04D3  
                       l2160 0420                         l2152 0410                         l2144 0400  
                       l2136 03E8                         l2128 03D5                         l2400 0304  
                       l2320 0076                         l2312 0067                         l2304 0052  
                       l3040 0B0A                         l2064 179B                         l2056 177C  
                       l2048 1768                         l2080 1679                         l3120 0AF3  
                       l3112 0AB9                         l3104 0A98                         l2242 058C  
                       l2250 0598                         l2226 0547                         l2218 04E8  
                       l2170 0434                         l2162 0424                         l2154 0414  
                       l2146 0404                         l2138 03EA                         l2410 0342  
                       l2402 0312                         l2330 0092                         l2322 007E  
                       l2314 006B                         l2306 0054                         l3050 0B45  
                       l2066 179C                         l2058 1780                         l2090 1698  
                       l2082 167D                         l2074 1667                         l3114 0ACE  
                       l3106 0A9E                         l2500 062E                         l2244 058F  
                       l2236 057A                         l2228 0556                         l2252 059C  
                       l2180 0474                         l2172 0438                         l2164 0428  
                       l2156 0418                         l2148 0408                         l2420 0376  
                       l2412 034D                         l2404 0316                         l2340 00D5  
                       l2324 0080                         l2316 006C                         l2308 005C  
                       l3060 0B55                         l3052 0B49                         l3044 0B15  
                       l2068 17A3                         l2084 1681                         l2076 166F  
                       l2092 169E                         l3116 0AD9                         l3108 0A9F  
                       l2510 0664                         l2502 0635                         l2270 05E4  
                       l2262 05AF                         l2254 059D                         l2246 0591  
                       l2238 0583                         l2190 048D                         l2182 047D  
                       l2166 042C                         l2158 041C                         l2174 043C  
                       l2422 037A                         l2414 035C                         l2406 032F  
                       l2350 015E                         l2342 00F1                         l2334 009B  
                       l2326 0088                         l2318 0071                         l3070 0B86  
                       l3054 0B4D                         l3062 0B6B                         l3046 0B3A  
                       l3038 0AFB                         l2086 168B                         l2078 1672  
                       l3142 0D1F                         l3118 0AE8                         l2520 0694  
                       l2512 0669                         l2504 063B                         l2600 0E77  
                       l2440 1580                         l2280 0600                         l2272 05ED  
                       l2264 05B4                         l2256 05A1                         l2248 0596  
                       l2184 047F                         l2192 0491                         l2176 043D  
                       l2168 0430                         l2096 038F                         l2424 037B  
                       l2416 0366                         l2408 0335                         l2360 01D1  
                       l2352 016E                         l2344 011D                         l2336 00AB  
                       l2328 008D                         l3072 0B8B                         l3048 0B3D  
                       l2088 1691                         l3080 09C9                         l2530 06B1  
                       l2522 06A2                         l2514 0673                         l2506 064A  
                       l2610 0E93                         l2602 0E78                         l2450 158A  
                       l2442 1584                         l2282 0604                         l2274 05F2  
                       l2266 05C2                         l2258 05A7                         l2194 049D  
                       l2186 0483                         l2178 0454                         l2098 0396  
                       l2426 0386                         l2418 0368                         l2370 027E  
                       l2362 01EE                         l2354 018B                         l2346 0139  
                       l2338 00B8                         l2290 002E                         l3074 090D  
                       l3090 09F7                         l3082 09D8                         l2532 06B7  
                       l2516 067E                         l2508 0656                         l2620 0EBE  
                       l2604 0E7C                         l2612 0EA1                         l2452 158B  
                       l2444 1585                         l2460 15B9                         l2284 0606  
                       l2276 05FA                         l2268 05C6                         l2196 04A2  
                       l2188 0484                         l2380 02CA                         l2372 02A6  
                       l2364 021B                         l2356 019B                         l2348 0155  
                       l2292 0035                         l3068 0B72                         l2700 0CF5  
                       l3092 0A50                         l3084 09E3                         l2550 06DE  
                       l2534 06C5                         l2518 0688                         l2542 06CF  
                       l2630 0EE9                         l2614 0EA7                         l2622 0ECC  
                       l2606 0E87                         l2454 158C                         l2446 1587  
                       l2470 15C3                         l2462 15BD                         l2286 0611  
                       l2278 05FF                         l2390 02DF                         l2382 02CB  
                       l2374 02AF                         l2366 022B                         l2358 01B8  
                       l2294 003B                         l2702 0CFA                         l3086 09ED  
                       l3078 09C8                         l3094 0A5F                         l2560 0704  
                       l2552 06E4                         l2536 06C9                         l2528 06A6  
                       l2640 0F0C                         l2624 0ED2                         l2632 0EF7  
                       l2616 0EB2                         l2608 0E8D                         l2480 15AF  
                       l2456 158D                         l2448 1589                         l2472 15C6  
                       l2464 15C0                         l2800 07D5                         l2288 0615  
                       l2392 02E3                         l2384 02D4                         l2376 02BD  
                       l2368 0258                         l2296 003F                         l2720 0D3A  
                       l2712 0D0D                         l2704 0D00                         l3088 09F0  
                       l3096 0A73                         l1930 07E6                         l2562 0710  
                       l2554 06F1                         l2538 06CA                         l2650 0F37  
                       l2642 0F12                         l2634 0EFC                         l2626 0EDD  
                       l2618 0EB8                         l2570 0DF7                         l2482 15B0  
                       l2474 15C9                         l2466 15C1                         l2458 15B4  
                       l2802 07D6                         l2394 02F7                         l2378 02C6  
                       l2386 02DA                         l2298 0040                         l2730 0D45  
                       l2722 0D3E                         l2714 0D2A                         l2706 0D07  
                       l3098 0A7E                         l1932 07ED                         l1940 089D  
                       l2564 071E                         l2556 06F5                         l2548 06D3  
                       l2492 0617                         l2660 0F62                         l2652 0F3D  
                       l2644 0F18                         l2636 0EFD                         l2628 0EE3  
                       l2580 0E22                         l2572 0E02                         l2484 15B1  
                       l2476 159F                         l2468 15C2                         l2388 02DE  
                       l2740 0D78                         l2724 0D43                         l2716 0D32  
                       l2708 0D0C                         l1934 07F4                         l1942 08A3  
                       l1950 16B0                         l2558 06FA                         l2494 0618  
                       l2670 0F82                         l2662 0F68                         l2654 0F43  
                       l2638 0F01                         l2646 0F26                         l2590 0E4D  
                       l2582 0E2D                         l2574 0E08                         l2486 15B2  
                       l2478 15AC                         l2398 02FF                         l2750 0DCC  
                       l2742 0D7C                         l2734 0D61                         l2718 0D36  
                       l1936 07FB                         l1928 07E2                         l1944 08A6  
                       l2840 0976                         l1960 16CC                         l1952 16B1  
                       l2496 0620                         l2672 0F86                         l2680 0FAB  
                       l2664 0F6E                         l2648 0F2C                         l2656 0F51  
                       l2592 0E58                         l2584 0E33                         l2576 0E0E  
                       l2568 0DEC                         l2744 0D81                         l2736 0D6B  
                       l2752 0DD5                         l1946 08B1                         l1938 089C  
                       l2842 0987                         l1962 16D2                         l1954 16BF  
                       l2498 0627                         l2682 0FB1                         l2690 0FD4  
                       l2674 0F91                         l2658 0F57                         l2666 0F7C  
                       l2594 0E5E                         l2586 0E39                         l2578 0E1C  
                       l2850 1599                         l2770 074F                         l2762 0726  
                       l1970 160C                         l2746 0DC1                         l2738 0D71  
                       l2754 0DE7                         l2844 098D                         l2836 0965  
                       l1964 16D5                         l1956 16C2                         l1948 16A6  
                       l2692 0FDA                         l2684 0FBA                         l2676 0F97  
                       l2668 0F81                         l2596 0E64                         l2588 0E47  
                       l2860 0BC3                         l2852 0B99                         l2780 0771  
                       l2764 072B                         l1972 1613                         l2748 0DC8  
                       l2838 096B                         l1982 1573                         l1990 08D3  
                       l1966 16DC                         l1958 16C9                         l2694 0FE5  
                       l2686 0FC0                         l2678 0F9D                         l2598 0E72  
                       l2870 0BE2                         l2862 0BC6                         l2854 0B9F  
                       l2846 158F                         l2790 07A2                         l2782 0775  
                       l2774 0758                         l2766 072F                         l1974 1617  
                       l1992 08D9                         l1984 08B8                         l2696 0FEB  
                       l2688 0FC6                         l2872 0BED                         l2864 0BC8  
                       l2856 0BA9                         l2848 1594                         l2792 07AC  
                       l2784 0783                         l2776 075D                         l2768 073F  
                       l1976 1626                         l1968 160A                         l1986 08BD  
                       l1994 08E2                         l2698 0FF1                         l2890 0C33  
                       l2882 0C08                         l2874 0BF6                         l2866 0BCD  
                       l2858 0BB4                         l2794 07B6                         l2786 0793  
                       l2778 076A                         l1978 162B                         l1996 08E8  
                       l1988 08CE                         l2884 0C17                         l2876 0C01  
                       l2868 0BD7                         l2796 07CC                         l2788 079E  
                       l1998 08F9                         l2886 0C22                         l2798 07D1  
                       l2888 0C2C                         STR_1 0871                         STR_2 0858  
                       STR_3 0871                         STR_4 084A                         STR_5 082B  
                       STR_6 082B                         STR_7 0865                         STR_8 0894  
                       STR_9 0885                         _T0CS 040D                         u2000 08BD  
                       u2001 08BC                         u2020 08E8                         u2021 08E7  
                       u2015 08C5                         u2040 1731                         u2050 1755  
                       u3010 02CA                         u2210 1795                         u2035 08F0  
                       u3011 02C9                         u2211 1794                         _T0SE 040C  
                       u2060 1767                         u2300 03A0                         u3100 0342  
                       u2061 1766                         u2301 039F                         u3101 0341  
                       u3005 02BF                         u2205 1785                         u2310 03A6  
                       u3110 035C                         u3030 02DE                         u2230 17A9  
                       u2311 03A5                         u3111 035B                         u3031 02DD  
                       u2231 17A8                         u2215 1791                         u3200 0635  
                       u2400 045F                         u2320 03AB                         u3120 037A  
                       u3040 02E3                         u2240 166F                         u3201 0634  
                       u2401 045D                         u2321 03AA                         u3121 0379  
                       u3105 033E                         u3041 02E2                         u3025 02CD  
                       u2225 179D                         u2241 166E                         u3210 06C4  
                       u2410 0460                         u2330 03C9                         u3050 02F7  
                       u2170 1772                         u3211 06C3                         u2331 03C8  
                       u3115 0358                         u3051 02F6                         u2171 1771  
                       u3220 06F1                         u3300 0F2C                         u2500 04CA  
                       u2420 0474                         u2340 03D4                         u3060 02FE  
                       u2260 1681                         u3221 06F0                         u3301 0F2B  
                       u2501 04C9                         u2421 0473                         u2341 03D3  
                       u3061 02FD                         u2261 1680                         u3310 0F57  
                       u3230 0DF7                         u2510 04D9                         u2430 0483  
                       u2350 03DA                         u3070 0304                         u2190 1784  
                       u2270 168B                         u3215 06C0                         u3311 0F56  
                       u4007 0E16                         u3231 0DF6                         u2511 04D8  
                       u2431 0482                         u2351 03D9                         u3071 0303  
                       u2191 1783                         u2271 168A                         u2255 1673  
                       u3320 0F86                         u3240 0E22                         u2600 0587  
                       u2360 03DF                         u3080 0316                         u3400 0DD5  
                       u3225 06ED                         u3321 0F85                         u4017 0E41  
                       u3241 0E21                         u2601 0586                         u2361 03DE  
                       u3081 0315                         u2185 1776                         u3401 0DD4  
                       u3170 0620                         u3330 0FB1                         u3250 0E4D  
                       u2610 058C                         u2530 04FE                         u2450 0499  
                       u2370 03F8                         u3090 0325                         u2290 169E  
                       u3410 0DE7                         u3171 061F                         u4107 0FCE  
                       u3331 0FB0                         u4027 0E6C                         u3251 0E4C  
                       u2611 058B                         u2531 04FD                         u2451 0498  
                       u2371 03F7                         u2291 169D                         u2275 1687  
                       u3411 0DE6                         u3180 0627                         u3340 0FDA  
                       u3260 0E7C                         u3500 07A2                         u3420 072B  
                       u2700 05E4                         u2620 0596                         u2460 049D  
                       u2380 03FC                         u3181 0626                         u4117 0FF9  
                       u3341 0FD9                         u4037 0E9B                         u3261 0E7B  
                       u3501 07A1                         u3421 072A                         u2701 05E3  
                       u2621 0595                         u2541 0515                         u2533 04FA  
                       u2525 04DC                         u2461 049C                         u2445 0486  
                       u2381 03FB                         u2285 1692                         u3190 062E  
                       u3270 0EA7                         u3510 07A8                         u3430 072F  
                       u2710 05ED                         u2630 059C                         u2550 0529  
                       u2542 0516                         u2470 04A2                         u2390 0454  
                       u3350 0D00                         u4207 08AC                         u4127 065E  
                       u3191 062D                         u4047 0EC6                         u3271 0EA6  
                       u3511 07A7                         u3431 072E                         u2711 05EC  
                       u2631 059B                         u2551 052A                         u2543 051B  
                       u2471 04A1                         u2391 0453                         u3095 0320  
                       u3351 0CFF                         u1920 07E6                         u3280 0ED2  
                       u3600 0BF6                         u3520 07AC                         u3440 074F  
                       u2720 05F2                         u2640 05A1                         u2560 0547  
                       u2552 052F                         u2544 051C                         u2800 0071  
                       u3360 0D3A                         u1921 07E5                         u4137 069C  
                       u4057 0EF1                         u3281 0ED1                         u3601 0BF5  
                       u3521 07AB                         u3441 074E                         u2721 05F1  
                       u2641 05A0                         u2561 0546                         u2553 0530  
                       u2545 0521                         u2481 04B4                         u2801 0070  
                       u3361 0D39                         u1930 07ED                         u3290 0F01  
                       u3610 0C07                         u3530 07C1                         u2730 05FF  
                       u2650 05A7                         u2570 056C                         u2546 0522  
                       u2490 04C6                         u2482 04BB                         u2810 0076  
                       u3370 0D60                         u1931 07EC                         u4147 0718  
                       u4067 0F20                         u3291 0F00                         u3611 0C06  
                       u2731 05FE                         u2651 05A6                         u2571 056B  
                       u2491 04C5                         u2483 04C2                         u2395 0450  
                       u2811 0075                         u3371 0D5F                         u1940 07F4  
                       u3540 07D1                         u3460 0770                         u2740 0604  
                       u2660 05AE                         u2580 0571                         u2820 008D  
                       u3380 0D6B                         u1941 07F3                         u4157 16C6  
                       u4077 0F4B                         u3541 07D0                         u3461 076F  
                       u2741 0603                         u2661 05AD                         u2581 0570  
                       u2901 01AA                         u2821 008C                         u3381 0D6A  
                       u1950 07FB                         u3550 07D5                         u2750 0615  
                       u2670 05B4                         u2902 01B1                         u2830 0092  
                       u3390 0D71                         u1951 07FA                         u4167 16D9  
                       u4087 0F76                         u3551 07D4                         u3535 07BC  
                       u3455 0762                         u2751 0614                         u2671 05B3  
                       u2903 01B8                         u2831 0091                         u3391 0D70  
                       u3375 0D5C                         u3480 0792                         u2680 05C6  
                       u2760 003F                         u4177 0971                         u4097 0FA5  
                       u3481 0791                         u2681 05C5                         u2921 01E0  
                       u2841 00E3                         u2761 003E                         u3570 0B9F  
                       u2690 05D5                         u1970 1617                         u2922 01E7  
                       u2842 00EA                         u2770 0045                         u4187 0982  
                       u3571 0B9E                         u3475 0784                         u2595 057C  
                       u1971 1616                         u2931 020D                         u2923 01EE  
                       u2915 01BA                         u2851 00FF                         u2843 00F1  
                       u2771 0044                         u3580 0BA3                         u2932 0214  
                       u2852 0106                         u2780 004A                         u4197 0993  
                       u1965 16B4                         u3581 0BA2                         u2941 023A  
                       u2933 021B                         u2861 012B                         u2853 010D  
                       u2781 0049                         u3590 0BA9                         u1990 162B  
                       u2950 0264                         u2942 0241                         u2862 0132  
                       u2790 006B                         u3910 0B86                         u3830 0B0A  
                       _INTF 0059                         u3591 0BA8                         u3495 0797  
                       u2695 05D0                         u1991 162A                         u2943 0248  
                       u2871 0147                         u2863 0139                         u2791 006A  
                       u3911 0B85                         u3831 0B09                         u2872 014E  
                       u3920 0B8B                         u3840 0B33                         u1985 161E  
                       u2961 0270                         u2873 0155                         u3921 0B8A  
                       u3905 0B74                         u2970 028C                         u2962 0277  
                       u3850 0B4D                         u3930 0A9E                         u2963 027E  
                       u2955 025F                         u2891 017D                         u3851 0B4C  
                       u3931 0A9D                         u2892 0184                         u3860 0B54  
                       u3940 0AF7                         u2981 0298                         u2893 018B  
                       u2885 0157                         u3861 0B53                         u3845 0B2E  
                       u3941 0AF6                         u2982 029F                         i1l71 1606  
                       i1l63 15EE                         u2983 02A6                         u2975 0287  
                       i1l64 15F1                         u3880 0B6A                         i1l65 15F7  
                       u3881 0B69                         i1l66 15F8                         i1l74 15E4  
                       u3890 0B71                         i1l67 15FE                         i1l83 17FF  
                       u2995 02A8                         u3891 0B70                         u3875 0B56  
                       i1l68 15FF                         i1l69 1605                         i1l77 1572  
                       u3957 0AE1                         i1l95 1721                         u3967 09F4  
                       i1l89 1666                         u3977 0A58                         u3987 0BBC  
                       u3997 0C3B                         _TMR0 0001            ?_Lcd_Write_String 002C  
                       _main 0A5F                         _size 0066                         btemp 007E  
                       start 0012           ??_Lcd_Write_String 002E               ??_config_timer 0027  
             ??_config_ports 0027              __end_of_Lcd_Cmd 08B5               ??_mapToCelsius 0062  
              ___fltol@sign1 00A5              __end_of___fladd 0617                        ?_main 0070  
                      STR_10 088D                        STR_11 083B                        STR_12 0885  
                      STR_13 087B                        STR_14 081A              __end_of___flmul 038F  
            __end_of___fltol 0B99              __end_of___lwdiv 17AE                        i1l170 0CB4  
                      i1l172 0CB0                        i1l166 0C53                        i1l168 0C52  
                      i1l169 0CE5              __end_of___lwmod 16A3            ?i1_Lcd_Set_Cursor 0074  
                      _TMR1H 000F                        _TMR1L 000E      __size_of_Lcd_Set_Cursor 0058  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                ?i1_Lcd_Port 0070           ??i1_Lcd_Set_Cursor 0075           __size_ofi1_Lcd_Cmd 001A  
            __end_of_dpowers 081A                        _valor 00DA              __end_of_teclado 1000  
             __pbitbssCOMMON 03E0                        pclath 000A  __size_ofi1_Lcd_Write_String 0042  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0DEC  
           __end_of_Lcd_Init 09C8             __end_of_Lcd_Port 07FF              __initialization 0015  
               __end_of_main 0AFB                       ??_main 00CF           __size_of_Lcd_Clear 000D  
                     _ADRESH 001E  __size_of_password_validator 010C                       i1l3000 0CB1  
                     i1l3010 0CC9                       i1l3002 0CB8                       i1l3012 0CCB  
                     i1l3004 0CB9                       i1l3014 0CD8                       i1l3006 0CBA  
                     i1l3008 0CC0                       i1l2430 15E6                       i1l2432 15EA  
                     i1l2434 15F5                       i1l2436 15FC                       i1l2438 1603  
                     i1l2810 15D5                       i1l2812 15D8                       i1l2820 163E  
                     i1l2814 15E1                       i1l2806 15CC                       i1l2910 17AF  
                     i1l2830 165C                       i1l2822 164C                       i1l2808 15CF  
                     i1l2912 17B4                       i1l2920 17D7                       i1l2832 165F  
                     i1l2824 164F                       i1l2816 1631                       i1l2922 17DD  
                     i1l2914 17C5                       i1l2834 1663                       i1l2826 1653  
                     i1l2818 163B                       i1l2930 16E0                       i1l2908 1566  
                     i1l2924 17EE                       i1l2916 17CA                       i1l2828 1656  
                     i1l2932 16E3                       i1l2926 17F3                       i1l2918 17D0  
                     i1l2934 16FF                       i1l2928 17F9                       i1l2936 1705  
                     i1l2970 0C43                       i1l2980 0C6E                       i1l2972 0C48  
                     i1l2990 0C98                       i1l2982 0C80                       i1l2974 0C4D  
                     i1l2992 0C99                       i1l2984 0C8E                       i1l2976 0C58  
                     i1l2994 0CA3                       i1l2986 0C91                       i1l2978 0C65  
                     i1l2996 0CAA                       i1l2988 0C92                       i1l2998 0CAE  
                     u313_20 15EA                       u313_21 15E9                       u314_20 15F5  
                     u314_21 15F4                       u315_20 15FC                       u315_21 15FB  
                     u316_20 1603                       u316_21 1602                       u421_27 0C88  
                     u422_27 1651                       u423_27 1661                       u424_27 15DC  
                     u362_20 17B4                       u362_21 17B3                       u371_20 0C48  
                     u371_21 0C47                       u363_25 17BC                       u364_20 17DD  
                     u372_20 0C4D                       u364_21 17DC                       u372_21 0C4C  
                     u380_24 0CD8                       u356_25 1641                       u381_20 0CE2  
                     u373_20 0C51                       u381_21 0CDE                       u373_21 0C50  
                     u365_25 17E5                       u366_20 16ED                       u374_20 0C98  
                     u374_21 0C97                       u382_24 0CE5                       u367_20 170F  
                     u375_20 0CAA                       u375_21 0CA9                       u368_20 1721  
                     u376_20 0CAE                       u368_21 1720                       u376_21 0CAD  
                     u377_20 0CB8                       u377_21 0CB7                       u378_20 0CC9  
                     u378_21 0CC8                       u379_20 0CD5                       u379_21 0CD1  
          ?i1_Lcd_Write_Char 0070                    ??_Lcd_Cmd 0028                       _TMR0IE 005D  
                     _TMR0IF 005A                       _TMR1IF 0060      __size_of_Lcd_Write_Char 003D  
               ?i1_Lcd_Clear 0070             __end_of___xxtofl 07DF           ??i1_Lcd_Write_Char 0071  
        __size_ofi1_Lcd_Port 0022            __end_ofi1_Lcd_Cmd 15E5            i1Lcd_Write_Char@a 0074  
          i1Lcd_Write_Char@y 0073                    ??___fladd 0052                    ??___flmul 0038  
                  ??___fltol 00A0                       _alarme 0B99                 _Alarme_ativo 03E0  
                  ??___lwdiv 002B                    ??___lwmod 0033                       _config 158F  
         __size_of__Umul8_16 0029         __end_of_config_timer 15CB                    ??_teclado 002C  
                     saved_w 007E         __end_of_config_ports 158F                    ??_sprintf 00AE  
            Lcd_Set_Cursor@a 002E              Lcd_Set_Cursor@b 002B              Lcd_Set_Cursor@y 0030  
            Lcd_Set_Cursor@z 002F                 ___xxtofl@arg 0031                 ___xxtofl@exp 0030  
               ___xxtofl@val 0027         __end_of_mapToCelsius 0965      __end_of__initialization 002A  
          __end_of_Lcd_Clear 1580                   ___fltol@f1 005E               __pcstackCOMMON 0070  
              ?_interruption 0070               _Lcd_Set_Cursor 08B5               _OPTION_REGbits 0081  
         __size_of_config_ac 0015                    ?_Lcd_Init 0070                    ?_Lcd_Port 0070  
                 __pbssBANK0 0062                   __pbssBANK1 00D2            __end_of__Umul8_16 1630  
                 __pmaintext 0A5F               ??_interruption 0020                      ?_alarme 0070  
                 __pintentry 0004                      ?_config 0070    __size_of_Lcd_Write_String 0046  
     __end_of_Lcd_Set_Cursor 090D                    ?___xxtofl 0027                 ??i1_Lcd_Port 0070  
                 ??_Lcd_Init 002B                   ??_Lcd_Port 0027            mapToCelsius@value 00A7  
                 __stringtab 0800               _Lcd_Write_Char 16A3                      _Lcd_Cmd 0899  
  __size_ofi1_Lcd_Set_Cursor 0052         __size_ofi1_Lcd_Clear 000D            __end_of_config_ac 15B4  
         __end_ofi1_Lcd_Port 1607                      ___fladd 038F                      ___flmul 002E  
                    ___fltol 0AFB                      ___lwdiv 1768              __size_of_alarme 00AA  
                    ___lwmod 1667      password_validator@i_496 003A              __size_of_config 0010  
              _Alarme_armado 03E1        __size_of_config_timer 0017              ?_Lcd_Set_Cursor 002B  
      __size_of_config_ports 000F                      __ptext1 09C8                      __ptext2 0CF2  
                    __ptext3 1667                      __ptext4 1768                      __ptext5 090D  
                    __ptext6 0AFB                      __ptext7 002E                      __ptext8 1607  
                    __ptext9 038F                    _T1CONbits 0010                      _dpowers 0810  
                    alarme@i 003F                   ??___xxtofl 002B                      _teclado 0DEC  
      __size_of_mapToCelsius 0058   __end_ofi1_Lcd_Write_String 1722                      _sprintf 0CF2  
     __end_of_Lcd_Write_Char 16E0         end_of_initialization 002A          password_validator@i 0038  
               _config_timer 15B4                 _config_ports 1580                    Lcd_Port@a 0027  
  __size_ofi1_Lcd_Write_Char 0037                    i1_Lcd_Cmd 15CB                 _mapToCelsius 090D  
                  _PORTBbits 0006                    _PORTCbits 0007                    _PORTDbits 0008  
                 _termometro 09C8                  ___fladd@grs 005D                ___xxtofl@sign 002F  
 __end_of_password_validator 0723         __end_of_interruption 0CF2              ?_Lcd_Write_Char 0070  
          Lcd_Write_String@a 002C            Lcd_Write_String@i 0031                  ___flmul@grs 003E  
                  _Lcd_Clear 1573                   ?i1_Lcd_Cmd 0070               __end_of_alarme 0C43  
           _Lcd_Write_String 1722               __end_of_config 159F          start_initialization 0015  
          __size_of_Lcd_Init 0063            __size_of_Lcd_Port 0020             i1_Lcd_Set_Cursor 17AE  
                 ?_Lcd_Clear 0070                     ??_alarme 003C                    __Umul8_16 1607  
                   ??_config 0027              Lcd_Write_Char@a 002B              Lcd_Write_Char@y 002A  
                ?_termometro 0070                    ___fladd@a 004E                    ___fladd@b 004A  
                  ___flmul@a 0034                    ___flmul@b 0030                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of___xxtofl 00BC  
       i1Lcd_Write_Char@temp 0072                     ?_Lcd_Cmd 0070                  sprintf@flag 00B2  
                sprintf@prec 00B3             ___lwdiv@dividend 0029             ??_Lcd_Set_Cursor 002C  
                   ?___fladd 004A                     ?___flmul 0030                     ?___fltol 005E  
                 ?__Umul8_16 0027                     ?___lwdiv 0027                     ?___lwmod 002F  
           i1_Lcd_Write_Char 1630                  ??i1_Lcd_Cmd 0071         i1Lcd_Set_Cursor@temp 007A  
                  _config_ac 159F                    __pstrings 0800                    _contador0 0064  
                  _contador1 0062        __size_of_interruption 00AF                     ?_teclado 0070  
           ___lwdiv@quotient 002C                     ?_sprintf 00AB            interrupt_function 0004  
              ??i1_Lcd_Clear 0074                     _PIE1bits 008C          __size_of_termometro 0097  
         i1_Lcd_Write_String 16E0                     Lcd_Cmd@a 002A                     _PIR1bits 000C  
                ??_Lcd_Clear 002B                 _interruption 0C43          ?i1_Lcd_Write_String 0075  
                 ?_config_ac 0070                   _ADCON0bits 001F                  __stringbase 080F  
                 _ADCON1bits 009F                     _SH_ativo 03E2             ??_Lcd_Write_Char 0028  
                   _Lcd_Init 0965                     _Lcd_Port 07DF         ??i1_Lcd_Write_String 0077  
   __end_of_Lcd_Write_String 1768             __size_of_Lcd_Cmd 001C           _password_validator 0617  
        __end_ofi1_Lcd_Clear 1573                  ??__Umul8_16 0029             termometro@buffer 00BB  
           __size_of___fladd 0288          ?_password_validator 0033             __size_of___flmul 0361  
           __size_of___fltol 009E             __size_of___lwdiv 0046             __size_of___lwmod 003C  
         __end_of__stringtab 0810     __end_ofi1_Lcd_Set_Cursor 1800                   sprintf@val 00B4  
                   ___xxtofl 0723              ___lwdiv@divisor 0027            i1Lcd_Set_Cursor@a 0077  
          i1Lcd_Set_Cursor@b 0074            i1Lcd_Set_Cursor@y 0079            i1Lcd_Set_Cursor@z 0078  
           __size_of_teclado 0214              ___lwdiv@counter 002E                     __ptext10 0723  
                   __ptext11 158F                     __ptext20 08B5                     __ptext12 15B4  
                   __ptext21 1573                     __ptext13 1580                     __ptext30 15CB  
                   __ptext22 0965                     __ptext14 159F                     __ptext31 15E5  
                   __ptext23 0899                     __ptext15 0B99                     __ptext24 07DF  
                   __ptext16 0DEC                     __ptext25 0C43                     __ptext17 0617  
                   __ptext26 16E0                     __ptext18 1722                     __ptext27 1630  
                   __ptext19 16A3                     __ptext28 17AE                     __ptext29 1566  
       ??_password_validator 0035             __size_of_sprintf 00FA                __size_of_main 009C  
                i1Lcd_Port@a 0070                     _password 00D2          i1Lcd_Write_String@a 0075  
        i1Lcd_Write_String@i 007A                  ??_config_ac 0027                 ??_termometro 00B8  
                 _INTCONbits 000B           Lcd_Write_Char@temp 0029                     intlevel1 0000  
                  sprintf@ap 00B1     __end_ofi1_Lcd_Write_Char 1667                    sprintf@sp 00B6  
           ___lwmod@dividend 0031                  i1_Lcd_Clear 1566                   i1Lcd_Cmd@a 0073  
                  stringcode 080A           __end_of_termometro 0A5F           Lcd_Set_Cursor@temp 0031  
     __Umul8_16@multiplicand 0027                   _OPTION_REG 0081                     sprintf@c 00B7  
                   sprintf@f 00AB              ___lwmod@divisor 002F              ___lwmod@counter 0034  
                 i1_Lcd_Port 15E5                     stringdir 080A                     stringtab 0800  
              ___fladd@signs 005A                 ___fladd@aexp 005B                 ___fladd@bexp 005C  
       __Umul8_16@multiplier 002F                ?_config_timer 0070                ?_config_ports 0070  
          __Umul8_16@product 002B  
