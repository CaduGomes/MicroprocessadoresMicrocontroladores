

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 11 16:54:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.20
    12                           ; Generated 12/02/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0006                     _PORTBbits	set	6
   166  0008                     _PORTDbits	set	8
   167  0081                     _OPTION_REG	set	129
   168  0088                     _TRISD	set	136
   169  0086                     _TRISB	set	134
   170                           
   171                           	psect	cinit
   172  07FC                     start_initialization:	
   173                           ; #config settings
   174                           
   175  07FC                     __initialization:
   176  07FC                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179  07FC                     __end_of__initialization:
   180  07FC  0183               	clrf	3
   181  07FD  120A  118A  2FBD   	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	cstackCOMMON
   184  0070                     __pcstackCOMMON:
   185  0070                     ?_incrementar:
   186  0070                     ??_incrementar:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0070                     ?_decrementar:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ??_decrementar:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_main:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 1 bytes @ 0x0
   200  0070                     	ds	3
   201  0073                     incrementar@val:
   202  0073                     decrementar@val:	
   203                           ; 1 bytes @ 0x3
   204                           
   205                           
   206                           ; 1 bytes @ 0x3
   207  0073                     	ds	1
   208  0074                     ??_main:
   209  0074                     main@val:	
   210                           ; 1 bytes @ 0x4
   211                           
   212                           
   213                           ; 2 bytes @ 0x4
   214  0074                     	ds	2
   215                           
   216                           	psect	maintext
   217  07BD                     __pmaintext:	
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 18 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;  val             2    4[COMMON] int 
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         2       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0
   240 ;;      Totals:         2       0       0       0       0
   241 ;;Total ram usage:        2 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		_decrementar
   245 ;;		_incrementar
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           
   252                           ;psect for function _main
   253  07BD                     _main:
   254  07BD                     l647:	
   255                           ;incstack = 0
   256                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   257                           
   258                           
   259                           ;main.c: 19:     TRISB = 0b00000111;
   260  07BD  3007               	movlw	7
   261  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   262  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   263  07C0  0086               	movwf	6	;volatile
   264  07C1                     l649:
   265                           
   266                           ;main.c: 20:     TRISD = 0;
   267  07C1  0188               	clrf	8	;volatile
   268  07C2                     l651:
   269                           
   270                           ;main.c: 21:     OPTION_REG = 0b01111111;
   271  07C2  307F               	movlw	127
   272  07C3  0081               	movwf	1	;volatile
   273                           
   274                           ;main.c: 22:     int val = 0;
   275  07C4  01F4               	clrf	main@val
   276  07C5  01F5               	clrf	main@val+1
   277  07C6                     l653:
   278                           
   279                           ;main.c: 23:     PORTDbits.RD0 = 0;
   280  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   281  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   282  07C8  1008               	bcf	8,0	;volatile
   283  07C9                     l655:
   284                           
   285                           ;main.c: 24:     PORTDbits.RD1 = 0;
   286  07C9  1088               	bcf	8,1	;volatile
   287  07CA                     l657:
   288                           
   289                           ;main.c: 26:         if (PORTBbits.RB1 == 0) {
   290  07CA  1886               	btfsc	6,1	;volatile
   291  07CB  2FCD               	goto	u31
   292  07CC  2FCE               	goto	u30
   293  07CD                     u31:
   294  07CD  2FD5               	goto	l22
   295  07CE                     u30:
   296  07CE                     l659:
   297                           
   298                           ;main.c: 27:             incrementar(&val);
   299  07CE  3074               	movlw	(low (main@val| 0))& (0+255)
   300  07CF  120A  118A  2793  120A  118A  	fcall	_incrementar
   301                           
   302                           ;main.c: 28:         } else if (PORTBbits.RB2 == 0) {
   303  07D4  2FDF               	goto	l663
   304  07D5                     l22:
   305  07D5  1906               	btfsc	6,2	;volatile
   306  07D6  2FD8               	goto	u41
   307  07D7  2FD9               	goto	u40
   308  07D8                     u41:
   309  07D8  2FDF               	goto	l663
   310  07D9                     u40:
   311  07D9                     l661:
   312                           
   313                           ;main.c: 29:             decrementar(&val);
   314  07D9  3074               	movlw	(low (main@val| 0))& (0+255)
   315  07DA  120A  118A  276A  120A  118A  	fcall	_decrementar
   316  07DF                     l663:
   317                           
   318                           ;main.c: 31:         if (val == 10)
   319  07DF  300A               	movlw	10
   320  07E0  0674               	xorwf	main@val,w
   321  07E1  0475               	iorwf	main@val+1,w
   322  07E2  1D03               	btfss	3,2
   323  07E3  2FE5               	goto	u51
   324  07E4  2FE6               	goto	u50
   325  07E5                     u51:
   326  07E5  2FEA               	goto	l667
   327  07E6                     u50:
   328  07E6                     l665:
   329                           
   330                           ;main.c: 32:             PORTDbits.RD0 = 1;
   331  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   332  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   333  07E8  1408               	bsf	8,0	;volatile
   334  07E9  2FCA               	goto	l657
   335  07EA                     l667:
   336  07EA  0874               	movf	main@val,w
   337  07EB  0475               	iorwf	main@val+1,w
   338  07EC  1D03               	btfss	3,2
   339  07ED  2FEF               	goto	u61
   340  07EE  2FF0               	goto	u60
   341  07EF                     u61:
   342  07EF  2FF4               	goto	l27
   343  07F0                     u60:
   344  07F0                     l669:
   345                           
   346                           ;main.c: 34:             PORTDbits.RD1 = 1;
   347  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   348  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   349  07F2  1488               	bsf	8,1	;volatile
   350  07F3  2FCA               	goto	l657
   351  07F4                     l27:	
   352                           ;main.c: 35:         else {
   353                           
   354                           
   355                           ;main.c: 36:             PORTDbits.RD0 = 0;
   356  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   357  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   358  07F6  1008               	bcf	8,0	;volatile
   359                           
   360                           ;main.c: 37:             PORTDbits.RD1 = 0;
   361  07F7  1088               	bcf	8,1	;volatile
   362  07F8  2FCA               	goto	l657
   363  07F9  120A  118A  2800   	ljmp	start
   364  07FC                     __end_of_main:
   365                           
   366                           	psect	text1
   367  0793                     __ptext1:	
   368 ;; *************** function _incrementar *****************
   369 ;; Defined at:
   370 ;;		line 44 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;  val             1    wreg     PTR int 
   373 ;;		 -> main@val(2), 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  val             1    3[COMMON] PTR int 
   376 ;;		 -> main@val(2), 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         1       0       0       0       0
   388 ;;      Temps:          3       0       0       0       0
   389 ;;      Totals:         4       0       0       0       0
   390 ;;Total ram usage:        4 bytes
   391 ;; Hardware stack levels used: 1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _incrementar
   401  0793                     _incrementar:
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _incrementar: [wreg-fsr0h+status,2+status,0+btemp+1]
   405                           ;incrementar@val stored from wreg
   406  0793  00F3               	movwf	incrementar@val
   407  0794                     l631:
   408                           
   409                           ;main.c: 45:     if (*val < 10) {
   410  0794  0873               	movf	incrementar@val,w
   411  0795  0084               	movwf	4
   412  0796  0800               	movf	0,w
   413  0797  00F0               	movwf	??_incrementar
   414  0798  0A84               	incf	4,f
   415  0799  0800               	movf	0,w
   416  079A  00F1               	movwf	??_incrementar+1
   417  079B  0871               	movf	??_incrementar+1,w
   418  079C  3A80               	xorlw	128
   419  079D  00FF               	movwf	btemp+1
   420  079E  3080               	movlw	128
   421  079F  027F               	subwf	btemp+1,w
   422  07A0  1D03               	skipz
   423  07A1  2FA4               	goto	u15
   424  07A2  300A               	movlw	10
   425  07A3  0270               	subwf	??_incrementar,w
   426  07A4                     u15:
   427  07A4  1803               	skipnc
   428  07A5  2FA7               	goto	u11
   429  07A6  2FA8               	goto	u10
   430  07A7                     u11:
   431  07A7  2FBC               	goto	l35
   432  07A8                     u10:
   433  07A8                     l633:
   434                           
   435                           ;main.c: 46:         _delay((unsigned long)((250)*(4000000/4000.0)));
   436  07A8  3002               	movlw	2
   437  07A9  00F2               	movwf	??_incrementar+2
   438  07AA  3045               	movlw	69
   439  07AB  00F1               	movwf	??_incrementar+1
   440  07AC  30A9               	movlw	169
   441  07AD  00F0               	movwf	??_incrementar
   442  07AE                     u77:
   443  07AE  0BF0               	decfsz	??_incrementar,f
   444  07AF  2FAE               	goto	u77
   445  07B0  0BF1               	decfsz	??_incrementar+1,f
   446  07B1  2FAE               	goto	u77
   447  07B2  0BF2               	decfsz	??_incrementar+2,f
   448  07B3  2FAE               	goto	u77
   449  07B4  2FB5               	nop2
   450  07B5                     l635:
   451                           
   452                           ;main.c: 47:         (*val)++;
   453  07B5  0873               	movf	incrementar@val,w
   454  07B6  0084               	movwf	4
   455  07B7  3001               	movlw	1
   456  07B8  0780               	addwf	0,f
   457  07B9  0A84               	incf	4,f
   458  07BA  1803               	skipnc
   459  07BB  0A80               	incf	0,f
   460  07BC                     l35:
   461  07BC  0008               	return
   462  07BD                     __end_of_incrementar:
   463                           
   464                           	psect	text2
   465  076A                     __ptext2:	
   466 ;; *************** function _decrementar *****************
   467 ;; Defined at:
   468 ;;		line 53 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  val             1    wreg     PTR int 
   471 ;;		 -> main@val(2), 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  val             1    3[COMMON] PTR int 
   474 ;;		 -> main@val(2), 
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         1       0       0       0       0
   486 ;;      Temps:          3       0       0       0       0
   487 ;;      Totals:         4       0       0       0       0
   488 ;;Total ram usage:        4 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _decrementar
   499  076A                     _decrementar:
   500                           
   501                           ;incstack = 0
   502                           ; Regs used in _decrementar: [wreg-fsr0h+status,2+status,0+btemp+1]
   503                           ;decrementar@val stored from wreg
   504  076A  00F3               	movwf	decrementar@val
   505  076B                     l639:
   506                           
   507                           ;main.c: 54:     if (*val != 0) {
   508  076B  0873               	movf	decrementar@val,w
   509  076C  0084               	movwf	4
   510  076D  0800               	movf	0,w
   511  076E  00F0               	movwf	??_decrementar
   512  076F  0A84               	incf	4,f
   513  0770  0800               	movf	0,w
   514  0771  00F1               	movwf	??_decrementar+1
   515  0772  0870               	movf	??_decrementar,w
   516  0773  0471               	iorwf	??_decrementar+1,w
   517  0774  1903               	btfsc	3,2
   518  0775  2F77               	goto	u21
   519  0776  2F78               	goto	u20
   520  0777                     u21:
   521  0777  2F92               	goto	l39
   522  0778                     u20:
   523  0778                     l641:
   524                           
   525                           ;main.c: 55:         _delay((unsigned long)((250)*(4000000/4000.0)));
   526  0778  3002               	movlw	2
   527  0779  00F2               	movwf	??_decrementar+2
   528  077A  3045               	movlw	69
   529  077B  00F1               	movwf	??_decrementar+1
   530  077C  30A9               	movlw	169
   531  077D  00F0               	movwf	??_decrementar
   532  077E                     u87:
   533  077E  0BF0               	decfsz	??_decrementar,f
   534  077F  2F7E               	goto	u87
   535  0780  0BF1               	decfsz	??_decrementar+1,f
   536  0781  2F7E               	goto	u87
   537  0782  0BF2               	decfsz	??_decrementar+2,f
   538  0783  2F7E               	goto	u87
   539  0784  2F85               	nop2
   540  0785                     l643:
   541                           
   542                           ;main.c: 56:         (*val)--;
   543  0785  0873               	movf	decrementar@val,w
   544  0786  0084               	movwf	4
   545  0787  30FF               	movlw	255
   546  0788  0780               	addwf	0,f
   547  0789  0F84               	incfsz	4,f
   548  078A  0800               	movf	0,w
   549  078B  1803               	skipnc
   550  078C  0A00               	incf	0,w
   551  078D  00FF               	movwf	btemp+1
   552  078E  30FF               	movlw	255
   553  078F  077F               	addwf	btemp+1,w
   554  0790  0080               	movwf	0
   555  0791  0384               	decf	4,f
   556  0792                     l39:
   557  0792  0008               	return
   558  0793                     __end_of_decrementar:
   559  007E                     btemp	set	126	;btemp
   560  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    decrementar@val	PTR int  size(1) Largest target is 2
		 -> main@val(COMMON[2]), 

    incrementar@val	PTR int  size(1) Largest target is 2
		 -> main@val(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_decrementar
    _main->_incrementar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     180
                                              4 COMMON     2     2      0
                        _decrementar
                        _incrementar
 ---------------------------------------------------------------------------------
 (1) _incrementar                                          4     4      0      60
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _decrementar                                          4     4      0      60
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decrementar
   _incrementar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 11 16:54:44 2021

                     l22 07D5                       l35 07BC                       l27 07F4  
                     l39 0792                       u10 07A8                       u11 07A7  
                     u20 0778                       u21 0777                       u30 07CE  
                     u15 07A4                       u31 07CD                       u40 07D9  
                     u41 07D8                       u50 07E6                       u51 07E5  
                     u60 07F0                       u61 07EF                       u77 07AE  
                     u87 077E                      l631 0794                      l641 0778  
                    l633 07A8                      l643 0785                      l635 07B5  
                    l651 07C2                      l661 07D9                      l653 07C6  
                    l639 076B                      l663 07DF                      l655 07C9  
                    l647 07BD                      l665 07E6                      l657 07CA  
                    l649 07C1                      l667 07EA                      l659 07CE  
                    l669 07F0                      fsr0 0004                      indf 0000  
                   _main 07BD                     btemp 007E                     start 0000  
           ?_incrementar 0070                    ?_main 0070                    _TRISB 0086  
                  _TRISD 0088                    status 0003     __size_of_decrementar 0029  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
   __size_of_incrementar 002A               __pmaintext 07BD           incrementar@val 0073  
                __ptext1 0793                  __ptext2 076A                  main@val 0074  
          ??_decrementar 0070     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTDbits 0008      __end_of_decrementar 0793      start_initialization 07FC  
          ??_incrementar 0070                ___latbits 0002              _decrementar 076A  
    __end_of_incrementar 07BD              _incrementar 0793           decrementar@val 0073  
          __size_of_main 003F             ?_decrementar 0070               _OPTION_REG 0081  
